{"createdTime":1746162452201,"shownInTree":["짧은-키워드/@-어노테이션이란-무엇인인가.html","짧은-키워드/@component.html","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html","짧은-키워드/데이터-검증-(validation).html","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html","짧은-키워드/많이쓰이는-db용어.html","짧은-키워드/빌더패턴을-왜쓰는가.html","짧은-키워드/상속과-합성.html","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html","짧은-키워드/영속성-컨텍스트.html","짧은-키워드/예외처리(exception).html","짧은-키워드/오버로딩-&-오버라이딩.html","짧은-키워드/젠킨스의-간단한-설명.html","짧은-키워드/컨테이너란-무엇일까.html","짧은-키워드/쿠버네티스의-매니페스트-파일이란.html","짧은-키워드/프록시.html","짧은-키워드/현재-hf서비스의-cicd과정.html","짧은-키워드/app-service-api-통신-플로우.html","짧은-키워드/argo-cd란.html","짧은-키워드/batch-용어-설명.html","짧은-키워드/bean이란-무엇인가.html","짧은-키워드/cicd.html","짧은-키워드/cnd(content-delivery-network)란.html","짧은-키워드/database-정규화-과정.html","짧은-키워드/db-connection이란-무엇일까.html","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","짧은-키워드/dispatcherservlet의-역할.html","짧은-키워드/docker에-대한-간단한-설명.html","짧은-키워드/dual-테이블이란.html","짧은-키워드/entity와-dto를-분리해야하는-이유.html","짧은-키워드/equals()-와-hashcode()-재정의.html","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html","짧은-키워드/gitops.html","짧은-키워드/gitops란.html","짧은-키워드/grafana-loki-란.html","짧은-키워드/http-method-mapping.html","짧은-키워드/java에서-string을-선언하는-두-가지-방법.html","짧은-키워드/java의-람다란.html","짧은-키워드/java의-리플렉션이란.html","짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html","짧은-키워드/jpa의-지연로딩.html","짧은-키워드/jpaqueryfactory란.html","짧은-키워드/jpql과-querydsl-비교.html","짧은-키워드/jvm의-stack과-heap.html","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html","짧은-키워드/load-balancer란.html","짧은-키워드/lock-(-데이터베이스-락-)-이란.html","짧은-키워드/lombok-사용시-주의사항.html","짧은-키워드/maven-vs-gradle.html","짧은-키워드/multi-thread환경에서의-singleton.html","짧은-키워드/netty란.html","짧은-키워드/redis-만료-정책.html","짧은-키워드/rest-기반의-트랜잭션.html","짧은-키워드/restful-api.html","짧은-키워드/service의-순환참조를-막는-방법.html","짧은-키워드/servlet.html","짧은-키워드/spring-어노테이션@-간단설명모음.html","짧은-키워드/spring-aop.html","짧은-키워드/spring-batch란.html","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html","짧은-키워드/spring-integration이란.html","짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html","짧은-키워드/spring-webflux란.html","짧은-키워드/spring에서의-의존성-주입-방법.html","짧은-키워드/spring의-entitymanager는-무엇일까.html","짧은-키워드/static-키워드에-대하여.html","issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html","issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html","issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html","issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html","issue_troubleshooting/🚦-spring-batch-트러블슈팅.html","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html","lectur/🏫-강의-&-자격증.html","lectur/1.-객체-지향-설계와-스프링.html","lectur/2.-스프링-핵심-원리-이해.html","lectur/2.1-스프링-프로젝트-생성.html","lectur/2.2-회원-도메인-설계-및-개발.html","lectur/2.3-주문과-할인-도메인-설계-및-개발.html","lectur/2.4-새로운-할인-정책-개발.html","lectur/2.4.1-전체-흐름-정리.html","lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html","lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html","lectur/3.-스프링-컨테이너와-스프링-빈.html","lectur/3.1-스프링-컨테이너-생성.html","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/melometer-project/✈mm_클라우드-마이그레이션.html","project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","project/💻-프로젝트.html","project/🔫-이슈-분석-&-트러블슈팅.html","project/🚞-java-대용량-excel-리펙토링.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/커리큘럼/🆕-dev-커리큘럼.html","study/coding-test/👽-algorithm.html","study/coding-test/🤠-coding-test-풀이-모음.html","study/cs/☕-java-,-oop.html","study/cs/🌋-osiv란-무엇인가.html","study/cs/🌩-cloud-native-architecture-분석.html","study/cs/🍃-spring.html","study/cs/🍊-spring의-의존성-주입(di).html","study/cs/🍎-redis로-key관리하기.html","study/cs/🎩-devops.html","study/cs/🐞-etc.html","study/cs/🐡-spring-security와-filter.html","study/cs/🐰-java의-string과-springbuffer.html","study/cs/🐹-msa(microservices-architecture).html","study/cs/📔-database.html","study/cs/📭-server.html","study/cs/🤲분산-환경에서의-cache-선택하기.html","study/cs/🪕-jpa-관련-용어-정리.html","study/cs/🛬-jdk와-jre,-jvm.html","study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html","study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/dev-seminar/🔹-tdd에-대하여.html","study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","study/📕-공부.html","tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","tools/aws/🍊-aws-ec2란.html","tools/aws/🍌-elastic-ip(탄력적-ip)란.html","tools/docker/🐋-docker-란.html","tools/docker/📘-springboot-&-docker-+-reids-연동.html","tools/jenkins/👔-jenkins란.html","tools/kubernetes/🚢kubernetes(k8s)란.html","tools/🎵-obsidian.html","tools/🪓-도구.html","🏠-taesung's-blog.html"],"attachments":["사진-및-문서/prof2.jpg","사진-및-문서/pasted-image-20250328120415.png","사진-및-문서/do-messenger_screenshot_2025-04-29_15_37_33.png","사진-및-문서/pasted-image-20250421164348.png","사진-및-문서/pasted-image-20250221114743.png","사진-및-문서/pasted-image-20250221114306.png","사진-및-문서/pasted-image-20250221114324.png","사진-및-문서/pasted-image-20250221114327.png","사진-및-문서/pasted-image-20250221114334.png","사진-및-문서/pasted-image-20250221114339.png","사진-및-문서/pasted-image-20250221114345.png","사진-및-문서/pasted-image-20250221114353.png","사진-및-문서/pasted-image-20250221114400.png","사진-및-문서/pasted-image-20250221114406.png","사진-및-문서/pasted-image-20250221114411.png","사진-및-문서/pasted-image-20250221114423.png","사진-및-문서/pasted-image-20250221114428.png","사진-및-문서/pasted-image-20250221114434.png","사진-및-문서/pasted-image-20250221114439.png","사진-및-문서/pasted-image-20250221114443.png","사진-및-문서/pasted-image-20250221114501.png","사진-및-문서/pasted-image-20250221114448.png","사진-및-문서/pasted-image-20250221114522.png","사진-및-문서/pasted-image-20250221114527.png","사진-및-문서/pasted-image-20250221114531.png","사진-및-문서/pasted-image-20250221114535.png","사진-및-문서/pasted-image-20250221114539.png","사진-및-문서/pasted-image-20250221114543.png","사진-및-문서/pasted-image-20250221114600.png","사진-및-문서/pasted-image-20250221114605.png","사진-및-문서/pasted-image-20250221114610.png","사진-및-문서/pasted-image-20250221114616.png","사진-및-문서/pasted-image-20250221114621.png","사진-및-문서/pasted-image-20250221114628.png","사진-및-문서/pasted-image-20250221114633.png","사진-및-문서/pasted-image-20250221114638.png","사진-및-문서/pasted-image-20250221114644.png","사진-및-문서/pasted-image-20250221114648.png","사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png","사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png","사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png","사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png","사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png","사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png","사진-및-문서/스크린샷-2025-04-14-오전-12.06.09.png","사진-및-문서/pasted-image-20250415182923.png","사진-및-문서/pasted-image-20250416171828.png","사진-및-문서/pasted-image-20250416172118.png","사진-및-문서/pasted-image-20250416181833.png","사진-및-문서/pasted-image-20250416182123.png","사진-및-문서/pasted-image-20250225161448.png","사진-및-문서/pasted-image-20250415181225.png","사진-및-문서/pasted-image-20250417121150.png","사진-및-문서/pasted-image-20250312144444.png","사진-및-문서/pasted-image-20250312173438.png","사진-및-문서/pasted-image-20250312173740.png","사진-및-문서/pasted-image-20250325102427.png","사진-및-문서/pasted-image-20250325165845.png","사진-및-문서/pasted-image-20250325172818.png","사진-및-문서/pasted-image-20241206140739.png","사진-및-문서/pasted-image-20241206140822.png","사진-및-문서/pasted-image-20250110144021.png","사진-및-문서/pasted-image-20241105110415.png","사진-및-문서/pasted-image-20250227140437.png","사진-및-문서/pasted-image-20250227140620.png","사진-및-문서/pasted-image-20241105110637.png","사진-및-문서/pasted-image-20241105110713.png","사진-및-문서/pasted-image-20241107115602.png","사진-및-문서/pasted-image-20241107115830.png","사진-및-문서/pasted-image-20241107121044.png","사진-및-문서/pasted-image-20241107121202.png","사진-및-문서/pasted-image-20241107121939.png","사진-및-문서/pasted-image-20250227114750.png","사진-및-문서/pasted-image-20250227114826.png","사진-및-문서/pasted-image-20250227115004.png","사진-및-문서/pasted-image-20250227115015.png","사진-및-문서/pasted-image-20250227115158.png","사진-및-문서/pasted-image-20250227115148.png","사진-및-문서/pasted-image-20250227121009.png","사진-및-문서/pasted-image-20250227121046.png","사진-및-문서/pasted-image-20250227121942.png","사진-및-문서/pasted-image-20250227122010.png","사진-및-문서/pasted-image-20250227122736.png","사진-및-문서/output-(14).png","사진-및-문서/pasted-image-20250304121056.png","사진-및-문서/pasted-image-20250304121009.png","사진-및-문서/pasted-image-20250304121455.png","사진-및-문서/pasted-image-20250304121338.png","사진-및-문서/pasted-image-20241213102128.png","사진-및-문서/pasted-image-20250304170347.png","사진-및-문서/pasted-image-20250304170412.png","사진-및-문서/pasted-image-20250304171240.png","사진-및-문서/pasted-image-20241213102229.png","사진-및-문서/pasted-image-20241213143101.png","사진-및-문서/pasted-image-20250314120439.png","사진-및-문서/pasted-image-20241213143217.png","사진-및-문서/pasted-image-20241213103503.png","사진-및-문서/pasted-image-20250317142134.png","사진-및-문서/pasted-image-20250317114543.png","사진-및-문서/pasted-image-20250317114814.png","사진-및-문서/pasted-image-20250317114932.png","사진-및-문서/pasted-image-20250317115640.png","사진-및-문서/pasted-image-20250317120025.png","사진-및-문서/pasted-image-20250317120814.png","사진-및-문서/pasted-image-20250317121138.png","사진-및-문서/pasted-image-20250317122417.png","사진-및-문서/pasted-image-20250317134652.png","사진-및-문서/pasted-image-20250317135331.png","사진-및-문서/pasted-image-20250317135544.png","사진-및-문서/pasted-image-20250313155205.png","사진-및-문서/pasted-image-20250313155459.png","사진-및-문서/pasted-image-20250313155555.png","사진-및-문서/pasted-image-20250313155756.png","사진-및-문서/pasted-image-20250313162400.png","사진-및-문서/pasted-image-20250313165833.png","사진-및-문서/pasted-image-20250313111121.png","사진-및-문서/pasted-image-20250313111614.png","사진-및-문서/pasted-image-20250313111817.png","사진-및-문서/pasted-image-20250313114207.png","사진-및-문서/pasted-image-20250313114322.png","사진-및-문서/pasted-image-20250313114332.png","사진-및-문서/pasted-image-20250313151739.png","사진-및-문서/pasted-image-20250313152221.png","사진-및-문서/pasted-image-20250313152958.png","사진-및-문서/pasted-image-20250313153455.png","사진-및-문서/pasted-image-20250313153605.png","사진-및-문서/pasted-image-20250313153630.png","사진-및-문서/pasted-image-20250313153740.png","사진-및-문서/pasted-image-20250314122906.png","사진-및-문서/pasted-image-20250314152143.png","사진-및-문서/회사-은행-서비스1111.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","사진-및-문서/output-(1).png","사진-및-문서/pasted-image-20241217150339.png","사진-및-문서/pasted-image-20241219145746.png","사진-및-문서/output-(9)-1.png","사진-및-문서/output-(10).png","사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","사진-및-문서/pasted-image-20241224093159.png","사진-및-문서/pasted-image-20241224093207.png","사진-및-문서/pasted-image-20241224093225.png","사진-및-문서/pasted-image-20250305173344.png","사진-및-문서/pasted-image-20250313103346.png","사진-및-문서/do-messenger_screenshot_2025-03-13_10_41_16.png","사진-및-문서/pasted-image-20250313104418.png","사진-및-문서/pasted-image-20250313104505.png","사진-및-문서/pasted-image-20250313105635.png","사진-및-문서/pasted-image-20250313105543.png","사진-및-문서/pasted-image-20250110122312.png","사진-및-문서/pasted-image-20250110101642.png","사진-및-문서/pasted-image-20250110103409.png","사진-및-문서/pasted-image-20250122111223.png","사진-및-문서/pasted-image-20250307172522.png","사진-및-문서/pasted-image-20250218151731.png","사진-및-문서/pasted-image-20250218151806.png","사진-및-문서/pasted-image-20250218152044.png","사진-및-문서/pasted-image-20250218152103.png","사진-및-문서/pasted-image-20250218153131.png","사진-및-문서/pasted-image-20250218153319.png","사진-및-문서/pasted-image-20250218153445.png","사진-및-문서/pasted-image-20250218153543.png","사진-및-문서/pasted-image-20250218153553.png","사진-및-문서/pasted-image-20250218151330.png","사진-및-문서/pasted-image-20250218153814.png","사진-및-문서/pasted-image-20250218153858.png","사진-및-문서/pasted-image-20250218154352.png","사진-및-문서/pasted-image-20250218154433.png","사진-및-문서/pasted-image-20250218154615.png","사진-및-문서/pasted-image-20250218154633.png","사진-및-문서/pasted-image-20250218154647.png","사진-및-문서/pasted-image-20250218155524.png","사진-및-문서/pasted-image-20250218160328.png","사진-및-문서/pasted-image-20250218160359.png","사진-및-문서/pasted-image-20250218160428.png","사진-및-문서/pasted-image-20250218160532.png","사진-및-문서/pasted-image-20250218160956.png","사진-및-문서/pasted-image-20250218161424.png","사진-및-문서/pasted-image-20250218161515.png","사진-및-문서/pasted-image-20250218161728.png","사진-및-문서/pasted-image-20250218161824.png","사진-및-문서/pasted-image-20250218161847.png","사진-및-문서/pasted-image-20250218161937.png","사진-및-문서/pasted-image-20250218162355.png","사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png","사진-및-문서/pasted-image-20250219154331.png","사진-및-문서/pasted-image-20250219154315.png","사진-및-문서/pasted-image-20241224144309.png","사진-및-문서/pasted-image-20241226111559.png","사진-및-문서/pasted-image-20250102160223.png","사진-및-문서/pasted-image-20241226152219.png","사진-및-문서/pasted-image-20241226171158.png","사진-및-문서/pasted-image-20241230135801.png","사진-및-문서/pasted-image-20250102160213.png","사진-및-문서/pasted-image-20250226145129.png","사진-및-문서/output-(9).png","사진-및-문서/pasted-image-20241206113120.png","사진-및-문서/pasted-image-20240610171904.png","사진-및-문서/pasted-image-20240531103441.png","사진-및-문서/pasted-image-20240531103549.png","사진-및-문서/pasted-image-20240531105228.png","사진-및-문서/pasted-image-20240531105241.png","사진-및-문서/pasted-image-20240531104351.png","사진-및-문서/pasted-image-20240531104418.png","사진-및-문서/pasted-image-20240531104751.png","사진-및-문서/pasted-image-20240531104803.png","사진-및-문서/pasted-image-20240828104032.png","사진-및-문서/pasted-image-20240828104728.png","사진-및-문서/pasted-image-20250228150552.png","사진-및-문서/pasted-image-20250102181842.png","사진-및-문서/pasted-image-20250221112429.png","사진-및-문서/pasted-image-20250221114856.png","사진-및-문서/pasted-image-20250221114901.png","사진-및-문서/pasted-image-20250221114932.png","사진-및-문서/pasted-image-20250221114945.png","사진-및-문서/pasted-image-20250221114951.png","사진-및-문서/pasted-image-20250221114959.png","사진-및-문서/pasted-image-20250221115004.png","사진-및-문서/pasted-image-20250221115010.png","사진-및-문서/pasted-image-20250221115019.png","사진-및-문서/pasted-image-20250221115024.png","사진-및-문서/pasted-image-20250221115030.png","사진-및-문서/pasted-image-20250221115035.png","사진-및-문서/pasted-image-20250221115040.png","사진-및-문서/pasted-image-20250221115046.png","사진-및-문서/pasted-image-20250221115052.png","사진-및-문서/pasted-image-20250221115058.png","사진-및-문서/pasted-image-20250221115102.png","사진-및-문서/pasted-image-20250221115117.png","사진-및-문서/pasted-image-20250221115122.png","사진-및-문서/pasted-image-20250221115129.png","사진-및-문서/pasted-image-20250221115132.png","사진-및-문서/pasted-image-20250221115136.png","사진-및-문서/pasted-image-20250221115140.png","사진-및-문서/pasted-image-20250221115146.png","사진-및-문서/pasted-image-20250221115151.png","사진-및-문서/pasted-image-20250221115157.png","사진-및-문서/pasted-image-20250221115201.png","사진-및-문서/pasted-image-20250221115214.png","사진-및-문서/pasted-image-20250221115220.png","사진-및-문서/pasted-image-20250221115224.png","사진-및-문서/pasted-image-20250221115228.png","사진-및-문서/pasted-image-20250221115232.png","사진-및-문서/pasted-image-20250221114152.png","사진-및-문서/pasted-image-20250221114208.png","사진-및-문서/pasted-image-20250221114220.png","사진-및-문서/pasted-image-20250218145702.png","사진-및-문서/pasted-image-20250218145823.png","사진-및-문서/pasted-image-20241220113308.png","사진-및-문서/pasted-image-20241220113315.png","사진-및-문서/pasted-image-20240531162124.png","사진-및-문서/pasted-image-20240722180706.png","사진-및-문서/pasted-image-20240611144129.png","사진-및-문서/pasted-image-20240605160336.png","사진-및-문서/pasted-image-20240723134224.png","사진-및-문서/pasted-image-20240723134333.png","사진-및-문서/pasted-image-20240603173517.png","사진-및-문서/pasted-image-20240603180042.png","사진-및-문서/pasted-image-20240604102140.png","사진-및-문서/pasted-image-20240604144026.png","lib/html/custom-head-content.html","lib/fonts/94f2f163d4b698242fef.otf","lib/fonts/72505e6a122c6acd5471.woff2","lib/fonts/2d5198822ab091ce4305.woff2","lib/fonts/c8ba52b05a9ef10f4758.woff2","lib/fonts/cb10ffd7684cd9836a05.woff2","lib/fonts/b5f0f109bc88052d4000.woff2","lib/fonts/cbe0ae49c52c920fd563.woff2","lib/fonts/535a6cf662596b3bd6a6.woff2","lib/fonts/70cc7ff27245e82ad414.ttf","lib/fonts/454577c22304619db035.ttf","lib/fonts/52ac8f3034507f1d9e53.ttf","lib/fonts/05b618077343fbbd92b7.ttf","lib/fonts/4bb6ac751d1c5478ff3a.woff2","lib/media/6155340132a851f6089e.svg","lib/media/2308ab1944a6bfa5c5b8.svg","lib/html/file-tree.html","lib/scripts/webpage.js","lib/scripts/minisearch.js","lib/styles/obsidian.css","lib/styles/other-plugins.css","lib/styles/theme.css","lib/styles/global-variable-styles.css","lib/styles/main-styles.css","lib/metadata.json","lib/search-index.json","사진-및-문서/do-messenger_screenshot_2025-05-02_14_28_33.png","사진-및-문서/pasted-image-20250513101628.png","사진-및-문서/pasted-image-20250513101743.png","사진-및-문서/pasted-image-20250516163401.png","사진-및-문서/pasted-image-20250516163522.png","사진-및-문서/pasted-image-20250516154726.png","사진-및-문서/pasted-image-20250516164727.png","사진-및-문서/pasted-image-20250516164550.png","사진-및-문서/pasted-image-20250516164537.png","사진-및-문서/pasted-image-20250516165030.png","사진-및-문서/pasted-image-20250516165307.png","사진-및-문서/pasted-image-20250516165250.png","사진-및-문서/pasted-image-20250516165344.png","사진-및-문서/pasted-image-20250516165523.png","사진-및-문서/pasted-image-20250516165617.png","사진-및-문서/pasted-image-20250516165627.png","사진-및-문서/스크린샷-2025-05-15-오후-10.33.42.png","사진-및-문서/스크린샷-2025-05-15-오후-10.38.28.png","사진-및-문서/스크린샷-2025-05-15-오후-10.41.15.png","사진-및-문서/pasted-image-20250519144842.png","사진-및-문서/pasted-image-20250520142253.png","lib/scripts/graph-wasm.wasm","lib/scripts/graph-view.js","lib/scripts/graph-wasm.js","lib/scripts/graph-render-worker.js","lib/scripts/tinycolor.js","lib/scripts/pixi.js","lib/scripts/graph-data.js"],"allFiles":["study/cs/🐞-etc.html","짧은-키워드/multi-thread환경에서의-singleton.html","짧은-키워드/maven-vs-gradle.html","study/cs/☕-java-,-oop.html","짧은-키워드/java에서-string을-선언하는-두-가지-방법.html","짧은-키워드/service의-순환참조를-막는-방법.html","study/cs/📭-server.html","짧은-키워드/rest-기반의-트랜잭션.html","짧은-키워드/cnd(content-delivery-network)란.html","짧은-키워드/load-balancer란.html","study/cs/📔-database.html","짧은-키워드/lock-(-데이터베이스-락-)-이란.html","짧은-키워드/많이쓰이는-db용어.html","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html","짧은-키워드/dual-테이블이란.html","짧은-키워드/database-정규화-과정.html","짧은-키워드/db-connection이란-무엇일까.html","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","study/cs/🎩-devops.html","짧은-키워드/grafana-loki-란.html","짧은-키워드/현재-hf서비스의-cicd과정.html","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html","짧은-키워드/쿠버네티스의-매니페스트-파일이란.html","짧은-키워드/argo-cd란.html","짧은-키워드/gitops란.html","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html","짧은-키워드/docker에-대한-간단한-설명.html","짧은-키워드/젠킨스의-간단한-설명.html","짧은-키워드/컨테이너란-무엇일까.html","study/cs/🍃-spring.html","짧은-키워드/equals()-와-hashcode()-재정의.html","짧은-키워드/netty란.html","짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html","짧은-키워드/예외처리(exception).html","짧은-키워드/spring-integration이란.html","짧은-키워드/http-method-mapping.html","짧은-키워드/dispatcherservlet의-역할.html","짧은-키워드/spring-webflux란.html","짧은-키워드/app-service-api-통신-플로우.html","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html","짧은-키워드/batch-용어-설명.html","짧은-키워드/spring-batch란.html","짧은-키워드/jpaqueryfactory란.html","짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html","짧은-키워드/jpql과-querydsl-비교.html","짧은-키워드/spring의-entitymanager는-무엇일까.html","짧은-키워드/entity와-dto를-분리해야하는-이유.html","짧은-키워드/spring에서의-의존성-주입-방법.html","짧은-키워드/데이터-검증-(validation).html","짧은-키워드/lombok-사용시-주의사항.html","짧은-키워드/빌더패턴을-왜쓰는가.html","짧은-키워드/spring-어노테이션@-간단설명모음.html","짧은-키워드/@component.html","짧은-키워드/bean이란-무엇인가.html","짧은-키워드/@-어노테이션이란-무엇인인가.html","짧은-키워드/jvm의-stack과-heap.html","짧은-키워드/java의-람다란.html","짧은-키워드/static-키워드에-대하여.html","짧은-키워드/java의-리플렉션이란.html","짧은-키워드/jpa의-지연로딩.html","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html","짧은-키워드/spring-aop.html","study/cs/🛬-jdk와-jre,-jvm.html","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html","짧은-키워드/상속과-합성.html","짧은-키워드/오버로딩-&-오버라이딩.html","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html","study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","짧은-키워드/프록시.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html","짧은-키워드/영속성-컨텍스트.html","🏠-taesung's-blog.html","study/cs/🌋-osiv란-무엇인가.html","study/📕-공부.html","project/🔫-이슈-분석-&-트러블슈팅.html","project/🚞-java-대용량-excel-리펙토링.html","lectur/3.1-스프링-컨테이너-생성.html","project/💻-프로젝트.html","study/cs/🐹-msa(microservices-architecture).html","project/melometer-project/✈mm_클라우드-마이그레이션.html","lib/html/custom-head-content.html","study/cs/🌩-cloud-native-architecture-분석.html","study/cs/🍎-redis로-key관리하기.html","짧은-키워드/cicd.html","짧은-키워드/restful-api.html","study/cs/🐡-spring-security와-filter.html","짧은-키워드/servlet.html","짧은-키워드/gitops.html","tools/🪓-도구.html","tools/kubernetes/🚢kubernetes(k8s)란.html","tools/jenkins/👔-jenkins란.html","tools/docker/🐋-docker-란.html","tools/docker/📘-springboot-&-docker-+-reids-연동.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html","짧은-키워드/redis-만료-정책.html","study/cs/🤲분산-환경에서의-cache-선택하기.html","lectur/🏫-강의-&-자격증.html","study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/cs/🪕-jpa-관련-용어-정리.html","issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html","issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html","사진-및-문서/pasted-image-20250325172818.png","사진-및-문서/pasted-image-20250325165845.png","사진-및-문서/pasted-image-20250325102427.png","issue_troubleshooting/🚦-spring-batch-트러블슈팅.html","lectur/3.-스프링-컨테이너와-스프링-빈.html","lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html","lectur/2.-스프링-핵심-원리-이해.html","lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html","lectur/2.4.1-전체-흐름-정리.html","lectur/2.4-새로운-할인-정책-개발.html","lectur/2.3-주문과-할인-도메인-설계-및-개발.html","lectur/2.2-회원-도메인-설계-및-개발.html","study/cs/🍊-spring의-의존성-주입(di).html","lectur/2.1-스프링-프로젝트-생성.html","study/cs/🐰-java의-string과-springbuffer.html","issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html","project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","lectur/1.-객체-지향-설계와-스프링.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","사진-및-문서/pasted-image-20250228150552.png","tools/aws/🍌-elastic-ip(탄력적-ip)란.html","tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","tools/aws/🍊-aws-ec2란.html","study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","study/coding-test/👽-algorithm.html","study/coding-test/🤠-coding-test-풀이-모음.html","study/커리큘럼/🆕-dev-커리큘럼.html","tools/🎵-obsidian.html","study/dev-seminar/🔹-tdd에-대하여.html","study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","사진-및-문서/pasted-image-20250122111223.png","사진-및-문서/pasted-image-20250110103409.png","사진-및-문서/pasted-image-20250110101642.png","사진-및-문서/pasted-image-20240828104728.png","사진-및-문서/pasted-image-20240828104032.png","사진-및-문서/pasted-image-20240722180706.png","사진-및-문서/pasted-image-20240611144129.png","사진-및-문서/pasted-image-20240610171904.png","사진-및-문서/pasted-image-20240605160336.png","사진-및-문서/pasted-image-20240604144026.png","사진-및-문서/pasted-image-20240604102140.png","사진-및-문서/pasted-image-20240603180042.png","사진-및-문서/pasted-image-20240603173517.png","사진-및-문서/pasted-image-20240531162124.png","사진-및-문서/pasted-image-20240531105241.png","사진-및-문서/pasted-image-20240531105228.png","사진-및-문서/pasted-image-20240531104803.png","사진-및-문서/pasted-image-20240531104418.png","사진-및-문서/pasted-image-20240531104751.png","사진-및-문서/pasted-image-20240531104351.png","사진-및-문서/pasted-image-20240531103441.png","사진-및-문서/pasted-image-20240531103549.png","lib/scripts/graph-wasm.wasm","lib/fonts/94f2f163d4b698242fef.otf","lib/fonts/72505e6a122c6acd5471.woff2","lib/fonts/2d5198822ab091ce4305.woff2","lib/fonts/c8ba52b05a9ef10f4758.woff2","lib/fonts/cb10ffd7684cd9836a05.woff2","lib/fonts/b5f0f109bc88052d4000.woff2","lib/fonts/cbe0ae49c52c920fd563.woff2","lib/fonts/535a6cf662596b3bd6a6.woff2","lib/fonts/70cc7ff27245e82ad414.ttf","lib/fonts/454577c22304619db035.ttf","lib/fonts/52ac8f3034507f1d9e53.ttf","lib/fonts/05b618077343fbbd92b7.ttf","lib/fonts/4bb6ac751d1c5478ff3a.woff2","lib/media/6155340132a851f6089e.svg","lib/media/2308ab1944a6bfa5c5b8.svg","lib/html/file-tree.html","lib/scripts/webpage.js","lib/scripts/graph-view.js","lib/scripts/graph-wasm.js","lib/scripts/graph-render-worker.js","lib/scripts/tinycolor.js","lib/scripts/pixi.js","lib/scripts/minisearch.js","lib/scripts/graph-data.js","lib/styles/obsidian.css","lib/styles/other-plugins.css","lib/styles/theme.css","lib/styles/global-variable-styles.css","lib/styles/main-styles.css"],"webpages":{"짧은-키워드/cicd.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/cicd.html","pathToRoot":"..","createdTime":1745989700456,"modifiedTime":1745995846695,"sourceSize":1727,"sourcePath":"짧은 키워드/CICD.md","exportPath":"짧은-키워드/cicd.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/gitops.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/gitops.html","pathToRoot":"..","createdTime":1745391053541,"modifiedTime":1745909723860,"sourceSize":412,"sourcePath":"짧은 키워드/GitOps.md","exportPath":"짧은-키워드/gitops.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/redis-만료-정책.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/redis-만료-정책.html","pathToRoot":"..","createdTime":1744362479256,"modifiedTime":1744362530088,"sourceSize":2470,"sourcePath":"짧은 키워드/Redis 만료 정책.md","exportPath":"짧은-키워드/redis-만료-정책.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/restful-api.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/restful-api.html","pathToRoot":"..","createdTime":1745993743206,"modifiedTime":1745993743206,"sourceSize":0,"sourcePath":"짧은 키워드/RESTful API.md","exportPath":"짧은-키워드/restful-api.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/servlet.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/servlet.html","pathToRoot":"..","createdTime":1745905249772,"modifiedTime":1745909918752,"sourceSize":2052,"sourcePath":"짧은 키워드/Servlet.md","exportPath":"짧은-키워드/servlet.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Script","#로딩지연","#성능개선"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html","pathToRoot":"..","createdTime":1740732986345,"modifiedTime":1742893523526,"sourceSize":4418,"sourcePath":"Issue_TroubleShooting/⏰ Script 로딩 지연 문제 해결 .js.md","exportPath":"issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Spring","#StckOverflow","#QueryDSL","#JPA","#DB"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html","pathToRoot":"..","createdTime":1740733661950,"modifiedTime":1741574975039,"sourceSize":5733,"sourcePath":"Issue_TroubleShooting/⚔ StckOverflow 이슈와 QueryDSL.md","exportPath":"issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SQL","#Lock","#개선","#이슈","#세미나"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html","pathToRoot":"..","createdTime":1740733250038,"modifiedTime":1742893438653,"sourceSize":10280,"sourcePath":"Issue_TroubleShooting/🔐 상품 투자하기 서비스 Lock기법 개선안.md","exportPath":"issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/🚦-spring-batch-트러블슈팅.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#트러블슈팅","#EntityManager","#Transaction","#트렌젝션"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/issue_troubleshooting/🚦-spring-batch-트러블슈팅.html","pathToRoot":"..","createdTime":1741932822849,"modifiedTime":1742194915704,"sourceSize":6136,"sourcePath":"Issue_TroubleShooting/🚦 Spring Batch 트러블슈팅.md","exportPath":"issue_troubleshooting/🚦-spring-batch-트러블슈팅.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html":{"title":"🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:Tokken\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Tokken</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:Security\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Security</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:보안\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#보안</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:Tokken\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Tokken\">#Tokken</a> <a href=\"https://lts.kr?query=tag:Security\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Security\">#Security</a> <a href=\"https://lts.kr?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\"https://lts.kr?query=tag:보안\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#보안\">#보안</a><br>1977년에 Rivest, Shamir, Adleman 이라는 세 명의 수학자가 고안해서 RSA라고 부른다.\n이 방식은 지금도 SSL/TLS, 이메일, 디지털 서명, 인증서 등 보안의 핵심 인프라에서 계속 쓰이고 있는 방식이다.<br>\n<br>RSA는 \"공개키로 암호화하고, 개인키로 복호화\" 또는 그 반대로 동작하는 비대칭 암호화 알고리즘이다.\n<br>\n<br>공개키로 암호화된 데이터는 개인키를 소유한 공개키 생성자만이 복호화 가능하다.\n<br>사용자( Client )마다 공개키와 개인키를 접근 시 새로 생성/발급하여 원본 데이터 추적이 불가하다.\n<br>결론\n즉, 클라이언트의 요청이 들어오면 서버에서 공개키(클라이언트에게 제공할 키) 와 개인키(서버측에서 갖고있는, 공개키와 한쌍이 되는 키) 를 매번 새로 발급하기 때문에, 추적이 어렵고 암호화에 뛰어나다.\n<br>\n<br>서비스 특성에 따라 적절하게 적용할 필요가 있다.\n<br>정보 <br>RSA 키 객체 (PublicKey, PrivateKey) 는 메모리 상에서만 동작할 수 있다.\n<br>우리가 파일, 네트워크, DB로 키를 주고받을 때는 Base64 문자열 로 직렬화해야 해야한다. <br>[로그인 / 회원가입 페이지]<br>클라이언트에서 서버에 공개키 요청\n<br>서버에서 키쌍 과 KeyUUID 생성\n<br>개인키는 KeyUUID와 함께 캐쉬에 저장 / 공개키는 KeyUUID와 클라이언트에 전달\n<br>클라이언트는 서버로부터 받은 공개키로 평문 암호화, 서버에 전달\n<br>암호화된 평문을 KeyUUID로 찾은 공개키로 복호화 -&gt; 평문 완성\n<br>정보\nUUID자동 발급 및 매칭 로직은 공개하지 않음.\n<br>\n<br>암호화, 해시, 키 생성, 인증서 처리, 서명 등 암호학 기반 기능들을 제공하는 클래스들의 모음이다.\n<br> private static final String INSTANCE_TYPE = \"RSA\"; // 2048bit RSA KeyPair 생성. public static KeyPair generateKeypair() throws NoSuchAlgorithmException { KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(INSTANCE_TYPE); keyPairGen.initialize(2048, new SecureRandom()); return keyPairGen.genKeyPair(); } <br>KeyPairGenerator (공개키/개인키 쌍 생성) 을 사용한다.\n<br>NoSuchAlgorithmException : 지정한 알고리즘 이름이 현재 JVM 환경에서 지원되지 않거나 잘못된 경우 발생하는 체크 예외다.\n<br>KeyPair타입 : PrivateKey와 PublicKey로 이루어져있는 데이터 타입\n<br>SecureRandom을 시드로 사용해 보안 수준 향상\n<br> 2048bit로 RSA암호화 방식을 사용하여 keyPair를 생성하는 코드이다.<br>\tprivate static final String INSTANCE_TYPE = \"RSA\"; // 평문 + 공개키 Base64로 암호문 생성 public static String rsaEncode(String plainText, String publicKey) throws InvalidKeyException, InvalidKeySpecException, NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException { Cipher cipher = Cipher.getInstance(INSTANCE_TYPE); cipher.init(Cipher.ENCRYPT_MODE, convertPublicKey(publicKey)); byte[] plainTextByte = cipher.doFinal(plainText.getBytes()); return base64EncodeToString(plainTextByte); } //Base64 공개키 -&gt; 공개키로 디코딩 public static PublicKey convertPublicKey(String publicKey) throws InvalidKeySpecException, NoSuchAlgorithmException { KeyFactory keyFactory = KeyFactory.getInstance(INSTANCE_TYPE); byte[] publicKeyByte = Base64.getDecoder().decode(publicKey.getBytes()); return keyFactory.generatePublic(new X509EncodedKeySpec(publicKeyByte)); }\n<br>\nCipher : Java 보안 API에서 실제 암호화/복호화를 수행하는 핵심 클래스\nAES, RAS, DES 같은 알고리즘을 직접 실행하는 암호 모듈 , 암호화 엔진 이다. <br>\nCipher cipher = Cipher.getInstance(INSTANCE_TYPE); : 타입에 따라, 암호화 모드와 패딩 방식이 결정된다. <br>\nconvertPublicKey : base64기반 코드를 실제 키 객체로 변환 <br>\nKeyFactory : 키 복원용 펙토리 객체 <br>\nkeyFactory.generate... : 실제 키 객체 생성 <br>\nX509EncodedKeySpec → 공개키 표준 포맷 스펙 <br>node-forge 패키지를 사용한다. base64, encode등 TLS프로토콜(암호화 도구)를 구현한 패키지 이다.\n<br>&lt;script src=\"https://cdn.jsdelivr.net/npm/node-forge@1.3.1/dist/forge.min.js\"&gt;&lt;/script&gt; &lt;script&gt;\n/** * 서버에서 공개키를 받아서 RSA로 암호화하는 함수 * @param {string} plainText - 암호화할 평문 * @param {string} publicKeyBase64 - 서버로부터 받은 Base64 인코딩된 공개키 * @returns {string} 암호화된 Base64 문자열 */\nfunction rsaEncryptWithBase64PublicKey(plainText, publicKeyBase64) { const forge = window.forge; // 1. Base64 디코딩 → DER 바이너리 const der = forge.util.decode64(publicKeyBase64); // 2. DER → ASN.1 파싱 → PublicKey 객체 const asn1 = forge.asn1.fromDer(der); const publicKey = forge.pki.publicKeyFromAsn1(asn1); // 3. RSA 암호화 const encryptedBytes = publicKey.encrypt(plainText, 'RSAES-PKCS1-V1_5'); // 4. 암호문을 Base64 인코딩해서 반환 return forge.util.encode64(encryptedBytes);\n}\n&lt;/script&gt;\n<br>클라이언트 단에서 request전달 전, 암호화 하기 위한 코드 / 동작 구성은 2.1과 동일 하다\n<br>\tprivate static final String INSTANCE_TYPE = \"RSA\"; // 암호문 + 개인키 Base64로 평문 생성 public static String rsaDecode(String encryptedPlainText, String privateKey) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidKeySpecException, IllegalBlockSizeException, BadPaddingException { byte[] encryptedPlainTextByte = Base64.getDecoder().decode(encryptedPlainText.getBytes()); Cipher cipher = Cipher.getInstance(INSTANCE_TYPE); cipher.init(Cipher.DECRYPT_MODE, convertPrivateKey(privateKey)); return new String(cipher.doFinal(encryptedPlainTextByte)); } //Base64 개인키 -&gt; 개인키로 디코딩 public static PrivateKey convertPrivateKey(String privateKey) throws InvalidKeySpecException, NoSuchAlgorithmException { KeyFactory keyFactory = KeyFactory.getInstance(INSTANCE_TYPE); byte[] privateKeyByte = Base64.getDecoder().decode(privateKey.getBytes()); return keyFactory.generatePrivate(new PKCS8EncodedKeySpec(privateKeyByte)); }\n<br>Cipher 객체를 사용하여 위와 동일하게 동작.\n<br>PKCS8EncodedKeySpec → 개인키 표준 포맷 스펙\n<br> public static String base64EncodeToString(byte[] byteData) { return Base64.getEncoder().encodeToString(byteData); }\n<br>cipher.doFinal(...) 과 같은 코드는 바이너리 데이터로 리턴값을 보낸다.\n<br>\n<br>JUnit → 테스트 프레임워크 <br>AssertJ → 테스트 결과를 검증(assert)할 때 쓰는 강력한 assertion 도구\n<br>JS코드는 제외<br>private static final String PLAIN_TEXT = \"키 암/복호화 테스트 123 abc !@#\"; @Test @DisplayName(\"RSA 키쌍 생성 및 암/복호화 통합 테스트\") public void testGenerateKeypairAndEncryptDecrypt() throws Exception { // 키쌍 생성 KeyPair keyPair = rsaService.generateKeypair(); PublicKey publicKey = keyPair.getPublic(); PrivateKey privateKey = keyPair.getPrivate(); // 공개키, 개인키 → Base64 인코딩 String publicKeyBase64 = rsaService.base64EncodeToString(publicKey.getEncoded()); String privateKeyBase64 = rsaService.base64EncodeToString(privateKey.getEncoded()); System.out.println(\"공개키Base64 : \" + publicKeyBase64); System.out.println(\"개인키Base64 : \" + privateKeyBase64); // 암호화 String encryptedText = rsaService.rsaEncode(PLAIN_TEXT, publicKeyBase64); System.out.println(\"RSA암호화 텍스트 : \" + encryptedText); // 복호화 (개인키 사용해야 함) String decryptedText = rsaService.rsaDecode(encryptedText, privateKeyBase64); System.out.println(\"RSA복호화 텍스트 : \" + decryptedText); // 검증 Assertions.assertThat(decryptedText).isEqualTo(PLAIN_TEXT); }\n<br>결과\n<img alt=\"Pasted image 20250325102427.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250325102427.png\" target=\"_self\"><br>Base64기반 String 변환 및 암/복호화 테스트 완료\n<br>js암호화도 동일하게 동작 확인\n<br><img alt=\"Pasted image 20250325165845.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250325165845.png\" target=\"_self\">\n<img alt=\"Pasted image 20250325172818.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250325172818.png\" target=\"_self\"><br>","aliases":[],"tags":["#공부","#Tokken","#Security","#SPRING","#보안"],"headers":[{"heading":"🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)","level":1,"id":"🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)"},{"heading":"RSA 암호화는 비대칭 키 암호화 방식 중 하나이다.","level":2,"id":"RSA_암호화는_**비대칭_키_암호화_방식**_중_하나이다."},{"heading":"정의","level":1,"id":"<font_color=\"#76923c\">정의</font>"},{"heading":"핵심 개념","level":1,"id":"<u><font_color=\"#76923c\">핵심_개념</font></u>"},{"heading":"그래서 왜 보안에 효과적인걸까?","level":1,"id":"<font_color=\"#76923c\">그래서_왜_보안에_효과적인걸까?</font>"},{"heading":"단, AES(대칭 암호화)와 방식보다 성능(속도)측면에서 떨어진다.","level":4,"id":"단,_AES(대칭_암호화)와_방식보다_성능(속도)측면에서_떨어진다."},{"heading":"Java/JS 환경에서 RSA암호화 적용하기","level":1,"id":"<u><font_color=\"#76923c\">Java/JS_환경에서_RSA암호화_적용하기</font></u>"},{"heading":"전반적인 로직 흐름","level":4,"id":"전반적인_로직_흐름"},{"heading":"1. 키 쌍 발급 로직","level":1,"id":"1._키_쌍_발급_로직"},{"heading":"하나의 쌍으로 이루어지는 공개키(public key) 와 개인키(private key) 를 생성하는 로직","level":3,"id":"하나의_쌍으로_이루어지는_*공개키(public_key)*_와_*개인키(private_key)*_를_생성하는_로직"},{"heading":"java.security 패키지를 사용하여 구현한다. Java의 보안 프레임워크의 핵심","level":4,"id":"**`java.security`**_패키지를_사용하여_구현한다._**Java의_보안_프레임워크의_핵심**"},{"heading":"2.1 평문 + base64공개키 -> base64암호문 생성 로직 .Java","level":1,"id":"2.1_평문_+_base64공개키_->_base64암호문_생성_로직_.Java"},{"heading":"2.2 평문 + base64공개키 -> base64암호문 생성 로직 .JS","level":1,"id":"2.2_평문_+_base64공개키_->_base64암호문_생성_로직_.JS"},{"heading":"3. base64암호문 + base64개인키 -> 평문 생성 로직","level":1,"id":"3._base64암호문_+_base64개인키_->_평문_생성_로직"},{"heading":"- 바이너리 데이터를 Base64로 인코딩 .java","level":1,"id":"+_바이너리_데이터를_Base64로_인코딩_.java"},{"heading":"백로직 및 프론트 검증","level":1,"id":"<u><font_color=\"#76923c\">백로직_및_프론트_검증</font></u>"},{"heading":"junit과 assertj를 사용하여 검증","level":3,"id":"*junit*과_*assertj*를_사용하여_검증"},{"heading":"+ 로그인 / 회원가입 서비스 적용 완료","level":2,"id":"*+_로그인_/_회원가입_서비스_적용_완료*"},{"heading":"Key 관리 보러가기","level":2,"id":"Key_관리_보러가기"},{"heading":"▶ 🍎 Redis로 Key관리하기","level":2,"id":"▶_[[🍎_Redis로_Key관리하기]]"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:Tokken","?query=tag:Security","?query=tag:SPRING","?query=tag:%EB%B3%B4%EC%95%88","study/cs/🍎-redis로-key관리하기.html","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#RSA_암호화는_**비대칭_키_암호화_방식**_중_하나이다.","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#<font_color=\"#76923c\">정의</font>","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#<u><font_color=\"#76923c\">핵심_개념</font></u>","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#<font_color=\"#76923c\">그래서_왜_보안에_효과적인걸까?</font>","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#단,_AES(대칭_암호화)와_방식보다_성능(속도)측면에서_떨어진다.","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#<u><font_color=\"#76923c\">Java/JS_환경에서_RSA암호화_적용하기</font></u>","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#전반적인_로직_흐름","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#1._키_쌍_발급_로직","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#하나의_쌍으로_이루어지는_*공개키(public_key)*_와_*개인키(private_key)*_를_생성하는_로직","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#**`java.security`**_패키지를_사용하여_구현한다._**Java의_보안_프레임워크의_핵심**","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#2.1_평문_+_base64공개키_->_base64암호문_생성_로직_.Java","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#2.2_평문_+_base64공개키_->_base64암호문_생성_로직_.JS","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#3._base64암호문_+_base64개인키_->_평문_생성_로직","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#+_바이너리_데이터를_Base64로_인코딩_.java","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#<u><font_color=\"#76923c\">백로직_및_프론트_검증</font></u>","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#*junit*과_*assertj*를_사용하여_검증","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#*+_로그인_/_회원가입_서비스_적용_완료*","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#Key_관리_보러가기","issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html#▶_[[🍎_Redis로_Key관리하기]]"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html","pathToRoot":"..","createdTime":1742781509013,"modifiedTime":1747808145371,"sourceSize":10677,"sourcePath":"Issue_TroubleShooting/🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검).md","exportPath":"issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250325102427.png","사진-및-문서/pasted-image-20250325165845.png","사진-및-문서/pasted-image-20250325172818.png"]},"lectur/🏫-강의-&-자격증.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#강의","#모음","#lectur"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/🏫-강의-&-자격증.html","pathToRoot":"..","createdTime":1740115400228,"modifiedTime":1743137460415,"sourceSize":1301,"sourcePath":"lectur/🏫 강의 & 자격증.md","exportPath":"lectur/🏫-강의-&-자격증.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/1.-객체-지향-설계와-스프링.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/1.-객체-지향-설계와-스프링.html","pathToRoot":"..","createdTime":1740116090884,"modifiedTime":1741163322925,"sourceSize":11487,"sourcePath":"lectur/1. 객체 지향 설계와 스프링.md","exportPath":"lectur/1.-객체-지향-설계와-스프링.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.-스프링-핵심-원리-이해.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.-스프링-핵심-원리-이해.html","pathToRoot":"..","createdTime":1741159406082,"modifiedTime":1742192958548,"sourceSize":549,"sourcePath":"lectur/2. 스프링 핵심 원리 이해.md","exportPath":"lectur/2.-스프링-핵심-원리-이해.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.1-스프링-프로젝트-생성.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.1-스프링-프로젝트-생성.html","pathToRoot":"..","createdTime":1741831186118,"modifiedTime":1741831267035,"sourceSize":1189,"sourcePath":"lectur/2.1 스프링 프로젝트 생성.md","exportPath":"lectur/2.1-스프링-프로젝트-생성.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.2-회원-도메인-설계-및-개발.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의","#설계","#도메인"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.2-회원-도메인-설계-및-개발.html","pathToRoot":"..","createdTime":1741831314600,"modifiedTime":1742192740067,"sourceSize":6905,"sourcePath":"lectur/2.2 회원 도메인 설계 및 개발.md","exportPath":"lectur/2.2-회원-도메인-설계-및-개발.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.3-주문과-할인-도메인-설계-및-개발.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의","#설계","#도메인"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.3-주문과-할인-도메인-설계-및-개발.html","pathToRoot":"..","createdTime":1741848373535,"modifiedTime":1742192748419,"sourceSize":6092,"sourcePath":"lectur/2.3 주문과 할인 도메인 설계 및 개발.md","exportPath":"lectur/2.3-주문과-할인-도메인-설계-및-개발.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.4-새로운-할인-정책-개발.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의","#객체지향"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.4-새로운-할인-정책-개발.html","pathToRoot":"..","createdTime":1741852943044,"modifiedTime":1742192939409,"sourceSize":10149,"sourcePath":"lectur/2.4 새로운 할인 정책 개발.md","exportPath":"lectur/2.4-새로운-할인-정책-개발.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.4.1-전체-흐름-정리.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.4.1-전체-흐름-정리.html","pathToRoot":"..","createdTime":1742187815155,"modifiedTime":1742192945966,"sourceSize":1659,"sourcePath":"lectur/2.4.1 전체 흐름 정리.md","exportPath":"lectur/2.4.1-전체-흐름-정리.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의","#객체지향"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html","pathToRoot":"..","createdTime":1742188139435,"modifiedTime":1742192952043,"sourceSize":2171,"sourcePath":"lectur/2.5 좋은 객체지향 설계의 5가지 원칙의 적용.md","exportPath":"lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의","#IoC","#DI","#의존성"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html","pathToRoot":"..","createdTime":1742188420779,"modifiedTime":1742192960282,"sourceSize":6980,"sourcePath":"lectur/2.6 IoC, DI 그리고 컨테이너 - 스프링으로 전환.md","exportPath":"lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/3.-스프링-컨테이너와-스프링-빈.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/3.-스프링-컨테이너와-스프링-빈.html","pathToRoot":"..","createdTime":1742192855164,"modifiedTime":1742193022634,"sourceSize":177,"sourcePath":"lectur/3. 스프링 컨테이너와 스프링 빈.md","exportPath":"lectur/3.-스프링-컨테이너와-스프링-빈.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/3.1-스프링-컨테이너-생성.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의","#컨테이너","#Bean","#빈"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/lectur/3.1-스프링-컨테이너-생성.html","pathToRoot":"..","createdTime":1742192705182,"modifiedTime":1747382415769,"sourceSize":2963,"sourcePath":"lectur/3.1 스프링 컨테이너 생성.md","exportPath":"lectur/3.1-스프링-컨테이너-생성.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html":{"title":"","icon":"","description":"","aliases":[],"tags":["excalidraw"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","pathToRoot":"../..","createdTime":1739843285680,"modifiedTime":1739844018493,"sourceSize":57706,"sourcePath":"project/hello Batch/✏ Chunk_Partitioning Batch 구조 드로잉.md","exportPath":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#Batch","#Partitioning","#Chunk","#성능개선"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","pathToRoot":"../..","createdTime":1739842773924,"modifiedTime":1747794768708,"sourceSize":20975,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#Batch","#Partitioning","#Chunk"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","pathToRoot":"../..","createdTime":1739842890772,"modifiedTime":1741249020914,"sourceSize":6664,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링 부록.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#AOP"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","pathToRoot":"../..","createdTime":1739783488509,"modifiedTime":1740733843766,"sourceSize":3178,"sourcePath":"project/hello marketing/👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출.md","exportPath":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#DB","#SPRING","#AOP"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","pathToRoot":"../..","createdTime":1739783337843,"modifiedTime":1747796836004,"sourceSize":18525,"sourcePath":"project/hello marketing/👩‍👧‍👦 marketing Analytics 공통모듈 제작기.md","exportPath":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#Hosting","#Obsidian","#CI/CD"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","pathToRoot":"../..","createdTime":1739783693575,"modifiedTime":1741573960767,"sourceSize":6394,"sourcePath":"project/note CI_CD/👻 Obsidian 정적호스팅 CICD 과정.md","exportPath":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/💻-프로젝트.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#모음"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/💻-프로젝트.html","pathToRoot":"..","createdTime":1740028413454,"modifiedTime":1746688892802,"sourceSize":877,"sourcePath":"project/💻 프로젝트.md","exportPath":"project/💻-프로젝트.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/🔫-이슈-분석-&-트러블슈팅.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#이슈","#트러블슈팅","#모음"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/🔫-이슈-분석-&-트러블슈팅.html","pathToRoot":"..","createdTime":1742893128385,"modifiedTime":1747632701562,"sourceSize":777,"sourcePath":"project/🔫 이슈 분석 & 트러블슈팅.md","exportPath":"project/🔫-이슈-분석-&-트러블슈팅.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#키워드","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html","pathToRoot":"../../..","createdTime":1744340376399,"modifiedTime":1744704553295,"sourceSize":2913,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 기타문제.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#키워드","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","pathToRoot":"../../..","createdTime":1739777477564,"modifiedTime":1745199600167,"sourceSize":88562,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 키워드.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#프로그래밍","#정리","#구조체"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html","pathToRoot":"../../..","createdTime":1741767948125,"modifiedTime":1744362555823,"sourceSize":2644,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-구조체(structuer).md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#프로그래밍","#정리","#함수"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html","pathToRoot":"../../..","createdTime":1741826891033,"modifiedTime":1744686662463,"sourceSize":5120,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-사용자 정의 함수.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#프로그래밍","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html","pathToRoot":"../../..","createdTime":1741575459595,"modifiedTime":1744622335076,"sourceSize":6534,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-제어문.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#프로그래밍","#정리","#포인터"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html","pathToRoot":"../../..","createdTime":1741757870834,"modifiedTime":1744686850974,"sourceSize":4429,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-포인터.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#SQL","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","pathToRoot":"../../..","createdTime":1740464273334,"modifiedTime":1744964416232,"sourceSize":14299,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 SQL 문제.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946883587,"sourceSize":21325,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 1과목 - 소프트웨어 설계.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946885204,"sourceSize":11745,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 2과목 - 소프트웨어 개발.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946886923,"sourceSize":11355,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 3과목 - 데이터베이스 구축.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946888780,"sourceSize":25268,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 4과목 - 프로그래밍 언어 활용.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","pathToRoot":"../../..","createdTime":1739783043089,"modifiedTime":1739946892799,"sourceSize":21328,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 5과목 - 정보시스템 구축관리.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/커리큘럼/🆕-dev-커리큘럼.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#개발","#초보","#기초"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/커리큘럼/🆕-dev-커리큘럼.html","pathToRoot":"../..","createdTime":1740017929179,"modifiedTime":1740027066919,"sourceSize":69,"sourcePath":"study/커리큘럼/🆕 Dev 커리큘럼.md","exportPath":"study/커리큘럼/🆕-dev-커리큘럼.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/coding-test/👽-algorithm.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Coding","#Test","#알고리즘"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/coding-test/👽-algorithm.html","pathToRoot":"../..","createdTime":1740031282530,"modifiedTime":1740107593302,"sourceSize":140,"sourcePath":"study/Coding Test/👽 Algorithm.md","exportPath":"study/coding-test/👽-algorithm.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/coding-test/🤠-coding-test-풀이-모음.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Coding","#Test","#모음"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/coding-test/🤠-coding-test-풀이-모음.html","pathToRoot":"../..","createdTime":1740030994816,"modifiedTime":1740032047241,"sourceSize":673,"sourcePath":"study/Coding Test/🤠 Coding Test 풀이 모음.md","exportPath":"study/coding-test/🤠-coding-test-풀이-모음.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/☕-java-,-oop.html":{"title":"☕ JAVA , OOP","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:Java\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Java</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:OOP\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#OOP</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:Java\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Java\">#Java</a> <a href=\"https://lts.kr?query=tag:OOP\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#OOP\">#OOP</a><br><a data-href=\"오버로딩 &amp; 오버라이딩\" href=\"https://lts.kr/짧은-키워드/오버로딩-&amp;-오버라이딩.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">오버로딩 &amp; 오버라이딩</a><br><a data-href=\"상속과 합성\" href=\"https://lts.kr/짧은-키워드/상속과-합성.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">상속과 합성</a><br><a data-href=\"객체지향설계 5원칙 S.O.L.I.D\" href=\"https://lts.kr/짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">객체지향설계 5원칙 S.O.L.I.D</a><br><a data-href=\"🛬 JDK와 JRE, JVM\" href=\"https://lts.kr/study/cs/🛬-jdk와-jre,-jvm.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🛬 JDK와 JRE, JVM</a><br><a data-href=\"🐰 Java의 String과 SpringBuffer\" href=\"https://lts.kr/study/cs/🐰-java의-string과-springbuffer.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🐰 Java의 String과 SpringBuffer</a><br><a data-href=\"데코레이션 패턴 vs 프록시 패턴\" href=\"https://lts.kr/짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">데코레이션 패턴 vs 프록시 패턴</a><br><a data-href=\"JPA의 지연로딩\" href=\"https://lts.kr/짧은-키워드/jpa의-지연로딩.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">JPA의 지연로딩</a><br><a data-href=\"Java의 리플렉션이란\" href=\"https://lts.kr/짧은-키워드/java의-리플렉션이란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Java의 리플렉션이란</a><br><a data-href=\"Java의 람다란\" href=\"https://lts.kr/짧은-키워드/java의-람다란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Java의 람다란</a><br><a data-href=\"Static 키워드에 대하여\" href=\"https://lts.kr/짧은-키워드/static-키워드에-대하여.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Static 키워드에 대하여</a><br><a data-href=\"JVM의 Stack과 Heap\" href=\"https://lts.kr/짧은-키워드/jvm의-stack과-heap.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">JVM의 Stack과 Heap</a><br><a data-href=\"JPQL과 QueryDSL 비교\" href=\"https://lts.kr/짧은-키워드/jpql과-querydsl-비교.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">JPQL과 QueryDSL 비교</a><br><a data-href=\"JPA에서 BooleanBuilder 와 BooleanExpression 이란\" href=\"https://lts.kr/짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">JPA에서 BooleanBuilder 와 BooleanExpression 이란</a><br><a data-href=\"JPAQueryFactory란\" href=\"https://lts.kr/짧은-키워드/jpaqueryfactory란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">JPAQueryFactory란</a><br><a data-href=\"예외처리(Exception)\" href=\"https://lts.kr/짧은-키워드/예외처리(exception).html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">예외처리(Exception)</a><br><a data-href=\"Equals() 와 HashCode() 재정의\" href=\"https://lts.kr/짧은-키워드/equals()-와-hashcode()-재정의.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Equals() 와 HashCode() 재정의</a><br><a data-href=\"Java에서 String을 선언하는 두 가지 방법\" href=\"https://lts.kr/짧은-키워드/java에서-string을-선언하는-두-가지-방법.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Java에서 String을 선언하는 두 가지 방법</a>","aliases":[],"tags":["#공부","#Java","#OOP"],"headers":[{"heading":"☕ JAVA , OOP","level":1,"id":"☕ JAVA , OOP"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:Java","?query=tag:OOP","짧은-키워드/오버로딩-&-오버라이딩.html","짧은-키워드/상속과-합성.html","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html","study/cs/🛬-jdk와-jre,-jvm.html","study/cs/🐰-java의-string과-springbuffer.html","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html","짧은-키워드/jpa의-지연로딩.html","짧은-키워드/java의-리플렉션이란.html","짧은-키워드/java의-람다란.html","짧은-키워드/static-키워드에-대하여.html","짧은-키워드/jvm의-stack과-heap.html","짧은-키워드/jpql과-querydsl-비교.html","짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html","짧은-키워드/jpaqueryfactory란.html","짧은-키워드/예외처리(exception).html","짧은-키워드/equals()-와-hashcode()-재정의.html","짧은-키워드/java에서-string을-선언하는-두-가지-방법.html","study/cs/☕-java-,-oop.html#☕ JAVA , OOP"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/☕-java-,-oop.html","pathToRoot":"../..","createdTime":1739844224869,"modifiedTime":1747811016203,"sourceSize":634,"sourcePath":"study/CS/☕ JAVA , OOP.md","exportPath":"study/cs/☕-java-,-oop.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🌩-cloud-native-architecture-분석.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#구조","#설계","#MSA","#CloudNative"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🌩-cloud-native-architecture-분석.html","pathToRoot":"../..","createdTime":1745990547472,"modifiedTime":1746150874525,"sourceSize":5490,"sourcePath":"study/CS/🌩 Cloud-Native Architecture 분석.md","exportPath":"study/cs/🌩-cloud-native-architecture-분석.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🍃-spring.html":{"title":"🍃 Spring","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:FRAMWORK\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#FRAMWORK</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\"https://lts.kr?query=tag:FRAMWORK\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#FRAMWORK\">#FRAMWORK</a><br><a data-href=\"Bean이란 무엇인가\" href=\"https://lts.kr/짧은-키워드/bean이란-무엇인가.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Bean이란 무엇인가</a><br><a data-href=\"@ 어노테이션이란 무엇인인가\" href=\"https://lts.kr/짧은-키워드/@-어노테이션이란-무엇인인가.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">@ 어노테이션이란 무엇인인가</a><br><a data-href=\"@Component\" href=\"https://lts.kr/짧은-키워드/@component.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">@Component</a><br><a data-href=\"Spring 어노테이션@ 간단설명모음\" href=\"https://lts.kr/짧은-키워드/spring-어노테이션@-간단설명모음.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring 어노테이션@ 간단설명모음</a><br><a data-href=\"빌더패턴을 왜쓰는가\" href=\"https://lts.kr/짧은-키워드/빌더패턴을-왜쓰는가.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">빌더패턴을 왜쓰는가</a><br><a data-href=\"Lombok 사용시 주의사항\" href=\"https://lts.kr/짧은-키워드/lombok-사용시-주의사항.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Lombok 사용시 주의사항</a><br><a data-href=\"Spring에서의 의존성 주입 방법\" href=\"https://lts.kr/짧은-키워드/spring에서의-의존성-주입-방법.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring에서의 의존성 주입 방법</a><br><a data-href=\"데이터 검증 (Validation)\" href=\"https://lts.kr/짧은-키워드/데이터-검증-(validation).html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">데이터 검증 (Validation)</a><br><a data-href=\"Entity와 DTO를 분리해야하는 이유\" href=\"https://lts.kr/짧은-키워드/entity와-dto를-분리해야하는-이유.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Entity와 DTO를 분리해야하는 이유</a><br><a data-href=\"Spring의 EntityManager는 무엇일까\" href=\"https://lts.kr/짧은-키워드/spring의-entitymanager는-무엇일까.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring의 EntityManager는 무엇일까</a><br><a data-href=\"DB의 저장 프로시저 (SP - Stored Procedure)란\" href=\"https://lts.kr/짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">DB의 저장 프로시저 (SP - Stored Procedure)란</a><br><a data-href=\"Spring AOP\" href=\"https://lts.kr/짧은-키워드/spring-aop.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring AOP</a><br><a data-href=\"Spring Batch란\" href=\"https://lts.kr/짧은-키워드/spring-batch란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring Batch란</a><br><a data-href=\"Batch 용어 설명\" href=\"https://lts.kr/짧은-키워드/batch-용어-설명.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Batch 용어 설명</a><br><a data-href=\"Spring Batch에서의 파티셔닝(Partitioning)\" href=\"https://lts.kr/짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring Batch에서의 파티셔닝(Partitioning)</a><br><a data-href=\"APP - SERVICE - API 통신 플로우\" href=\"https://lts.kr/짧은-키워드/app-service-api-통신-플로우.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">APP - SERVICE - API 통신 플로우</a><br><a data-href=\"Spring WebFlux란\" href=\"https://lts.kr/짧은-키워드/spring-webflux란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring WebFlux란</a><br><a data-href=\"DispatcherServlet의 역할\" href=\"https://lts.kr/짧은-키워드/dispatcherservlet의-역할.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">DispatcherServlet의 역할</a><br><a data-href=\"HTTP Method - Mapping\" href=\"https://lts.kr/짧은-키워드/http-method-mapping.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">HTTP Method - Mapping</a><br><a data-href=\"Spring Integration이란\" href=\"https://lts.kr/짧은-키워드/spring-integration이란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring Integration이란</a><br><a data-href=\"Spring MVC의 Service와 ServiceImpl 구조\" href=\"https://lts.kr/짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Spring MVC의 Service와 ServiceImpl 구조</a><br><a data-href=\"Netty란\" href=\"https://lts.kr/짧은-키워드/netty란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Netty란</a>","aliases":[],"tags":["#공부","#SPRING","#FRAMWORK"],"headers":[{"heading":"🍃 Spring","level":1,"id":"🍃 Spring"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:SPRING","?query=tag:FRAMWORK","짧은-키워드/bean이란-무엇인가.html","짧은-키워드/@-어노테이션이란-무엇인인가.html","짧은-키워드/@component.html","짧은-키워드/spring-어노테이션@-간단설명모음.html","짧은-키워드/빌더패턴을-왜쓰는가.html","짧은-키워드/lombok-사용시-주의사항.html","짧은-키워드/spring에서의-의존성-주입-방법.html","짧은-키워드/데이터-검증-(validation).html","짧은-키워드/entity와-dto를-분리해야하는-이유.html","짧은-키워드/spring의-entitymanager는-무엇일까.html","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","짧은-키워드/spring-aop.html","짧은-키워드/spring-batch란.html","짧은-키워드/batch-용어-설명.html","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html","짧은-키워드/app-service-api-통신-플로우.html","짧은-키워드/spring-webflux란.html","짧은-키워드/dispatcherservlet의-역할.html","짧은-키워드/http-method-mapping.html","짧은-키워드/spring-integration이란.html","짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html","짧은-키워드/netty란.html","study/cs/🍃-spring.html#🍃 Spring"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🍃-spring.html","pathToRoot":"../..","createdTime":1739844578975,"modifiedTime":1747810637978,"sourceSize":819,"sourcePath":"study/CS/🍃 Spring.md","exportPath":"study/cs/🍃-spring.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🍊-spring의-의존성-주입(di).html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#SPRING","#FRAMWORK","#DI","#의존성주입"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🍊-spring의-의존성-주입(di).html","pathToRoot":"../..","createdTime":1741913374127,"modifiedTime":1741913768344,"sourceSize":2713,"sourcePath":"study/CS/🍊 Spring의 의존성 주입(DI).md","exportPath":"study/cs/🍊-spring의-의존성-주입(di).html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🍎-redis로-key관리하기.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Redis","#Cash","#memory","#다중서버","#NoSql"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🍎-redis로-key관리하기.html","pathToRoot":"../..","createdTime":1743055471417,"modifiedTime":1745997831344,"sourceSize":9922,"sourcePath":"study/CS/🍎 Redis로 Key관리하기.md","exportPath":"study/cs/🍎-redis로-key관리하기.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🎩-devops.html":{"title":"🎩 DevOps","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:DevOps\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DevOps</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:CI/CD\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#CI/CD</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:DevOps\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DevOps\">#DevOps</a> <a href=\"https://lts.kr?query=tag:CI/CD\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#CI/CD\">#CI/CD</a><br><a data-href=\"컨테이너란 무엇일까\" href=\"https://lts.kr/짧은-키워드/컨테이너란-무엇일까.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">컨테이너란 무엇일까</a><br><a data-href=\"젠킨스의 간단한 설명\" href=\"https://lts.kr/짧은-키워드/젠킨스의-간단한-설명.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">젠킨스의 간단한 설명</a><br><a data-href=\"Docker에 대한 간단한 설명\" href=\"https://lts.kr/짧은-키워드/docker에-대한-간단한-설명.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Docker에 대한 간단한 설명</a><br><a data-href=\"k8s(쿠버네티스)에 대한 간단한 설명\" href=\"https://lts.kr/짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">k8s(쿠버네티스)에 대한 간단한 설명</a><br><a data-href=\"GitOps란\" href=\"https://lts.kr/짧은-키워드/gitops란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">GitOps란</a><br><a data-href=\"Argo CD란\" href=\"https://lts.kr/짧은-키워드/argo-cd란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Argo CD란</a><br><a data-href=\"쿠버네티스의 매니페스트 파일이란\" href=\"https://lts.kr/짧은-키워드/쿠버네티스의-매니페스트-파일이란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">쿠버네티스의 매니페스트 파일이란</a><br><a data-href=\"현재 HF서비스의 CICD과정\" href=\"https://lts.kr/짧은-키워드/현재-hf서비스의-cicd과정.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">현재 HF서비스의 CICD과정</a><br><a data-href=\"Git Lab(깃랩) Git Hub(깃허브) 차이\" href=\"https://lts.kr/짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Git Lab(깃랩) Git Hub(깃허브) 차이</a><br><a data-href=\"Grafana Loki 란\" href=\"https://lts.kr/짧은-키워드/grafana-loki-란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Grafana Loki 란</a>","aliases":[],"tags":["#공부","#DevOps","#CI/CD"],"headers":[{"heading":"🎩 DevOps","level":1,"id":"🎩 DevOps"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:DevOps","?query=tag:CI/CD","짧은-키워드/컨테이너란-무엇일까.html","짧은-키워드/젠킨스의-간단한-설명.html","짧은-키워드/docker에-대한-간단한-설명.html","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html","짧은-키워드/gitops란.html","짧은-키워드/argo-cd란.html","짧은-키워드/쿠버네티스의-매니페스트-파일이란.html","짧은-키워드/현재-hf서비스의-cicd과정.html","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html","짧은-키워드/grafana-loki-란.html","study/cs/🎩-devops.html#🎩 DevOps"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🎩-devops.html","pathToRoot":"../..","createdTime":1739844345143,"modifiedTime":1747810832160,"sourceSize":394,"sourcePath":"study/CS/🎩 DevOps.md","exportPath":"study/cs/🎩-devops.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🐞-etc.html":{"title":"🐞 etc","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:기타\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#기타</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:기타\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#기타\">#기타</a><br><a data-href=\"Service의 순환참조를 막는 방법\" href=\"https://lts.kr/짧은-키워드/service의-순환참조를-막는-방법.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Service의 순환참조를 막는 방법</a><br><a data-href=\"Maven VS Gradle\" href=\"https://lts.kr/짧은-키워드/maven-vs-gradle.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Maven VS Gradle</a><br><a data-href=\"Multi Thread환경에서의 Singleton\" href=\"https://lts.kr/짧은-키워드/multi-thread환경에서의-singleton.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Multi Thread환경에서의 Singleton</a>","aliases":[],"tags":["#공부","#기타"],"headers":[{"heading":"🐞 etc","level":1,"id":"🐞 etc"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:%EA%B8%B0%ED%83%80","짧은-키워드/service의-순환참조를-막는-방법.html","짧은-키워드/maven-vs-gradle.html","짧은-키워드/multi-thread환경에서의-singleton.html","study/cs/🐞-etc.html#🐞 etc"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🐞-etc.html","pathToRoot":"../..","createdTime":1739844790888,"modifiedTime":1747811032434,"sourceSize":142,"sourcePath":"study/CS/🐞 etc.md","exportPath":"study/cs/🐞-etc.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🐡-spring-security와-filter.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#Security","#Filter"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🐡-spring-security와-filter.html","pathToRoot":"../..","createdTime":1742883041247,"modifiedTime":1745917858201,"sourceSize":5951,"sourcePath":"study/CS/🐡 Spring Security와 Filter.md","exportPath":"study/cs/🐡-spring-security와-filter.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🐰-java의-string과-springbuffer.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#String","#StringBuffer"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🐰-java의-string과-springbuffer.html","pathToRoot":"../..","createdTime":1741830727845,"modifiedTime":1741830788314,"sourceSize":4946,"sourcePath":"study/CS/🐰 Java의 String과 SpringBuffer.md","exportPath":"study/cs/🐰-java의-string과-springbuffer.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🐹-msa(microservices-architecture).html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#구조","#설계","#MSA","#CloudNative"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🐹-msa(microservices-architecture).html","pathToRoot":"../..","createdTime":1745976058758,"modifiedTime":1746666164696,"sourceSize":13784,"sourcePath":"study/CS/🐹 MSA(Microservices Architecture).md","exportPath":"study/cs/🐹-msa(microservices-architecture).html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/📔-database.html":{"title":"📔 DataBase","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:DB\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DB</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:DataBase\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DataBase</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:DB\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DB\">#DB</a> <a href=\"https://lts.kr?query=tag:DataBase\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DataBase\">#DataBase</a><br><a data-href=\"DB의 저장 프로시저 (SP - Stored Procedure)란\" href=\"https://lts.kr/짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">DB의 저장 프로시저 (SP - Stored Procedure)란</a><br><a data-href=\"DB Connection이란 무엇일까\" href=\"https://lts.kr/짧은-키워드/db-connection이란-무엇일까.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">DB Connection이란 무엇일까</a><br><a data-href=\"DataBase 정규화 과정\" href=\"https://lts.kr/짧은-키워드/database-정규화-과정.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">DataBase 정규화 과정</a><br><a data-href=\"Dual 테이블이란\" href=\"https://lts.kr/짧은-키워드/dual-테이블이란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Dual 테이블이란</a><br><a data-href=\"엘라스틱서치 인덱스와 샤드 분할\" href=\"https://lts.kr/짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">엘라스틱서치 인덱스와 샤드 분할</a><br><a data-href=\"많이쓰이는 DB용어\" href=\"https://lts.kr/짧은-키워드/많이쓰이는-db용어.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">많이쓰이는 DB용어</a><br><a data-href=\"Lock ( 데이터베이스 락 ) 이란\" href=\"https://lts.kr/짧은-키워드/lock-(-데이터베이스-락-)-이란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Lock ( 데이터베이스 락 ) 이란</a>","aliases":[],"tags":["#공부","#DB","#DataBase"],"headers":[{"heading":"📔 DataBase","level":1,"id":"📔 DataBase"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:DB","?query=tag:DataBase","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","짧은-키워드/db-connection이란-무엇일까.html","짧은-키워드/database-정규화-과정.html","짧은-키워드/dual-테이블이란.html","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html","짧은-키워드/많이쓰이는-db용어.html","짧은-키워드/lock-(-데이터베이스-락-)-이란.html","study/cs/📔-database.html#📔 DataBase"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/📔-database.html","pathToRoot":"../..","createdTime":1739844411985,"modifiedTime":1747810943288,"sourceSize":322,"sourcePath":"study/CS/📔 DataBase.md","exportPath":"study/cs/📔-database.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/📭-server.html":{"title":"📭 Server","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:Server\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Server</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:Server\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Server\">#Server</a><br><a data-href=\"Load Balancer란\" href=\"https://lts.kr/짧은-키워드/load-balancer란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">Load Balancer란</a><br><a data-href=\"CND(Content Delivery Network)란\" href=\"https://lts.kr/짧은-키워드/cnd(content-delivery-network)란.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">CND(Content Delivery Network)란</a><br><a data-href=\"REST 기반의 트랜잭션\" href=\"https://lts.kr/짧은-키워드/rest-기반의-트랜잭션.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">REST 기반의 트랜잭션</a>","aliases":[],"tags":["#공부","#Server"],"headers":[{"heading":"📭 Server","level":1,"id":"📭 Server"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:Server","짧은-키워드/load-balancer란.html","짧은-키워드/cnd(content-delivery-network)란.html","짧은-키워드/rest-기반의-트랜잭션.html","study/cs/📭-server.html#📭 Server"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/📭-server.html","pathToRoot":"../..","createdTime":1739844706654,"modifiedTime":1747810966714,"sourceSize":128,"sourcePath":"study/CS/📭 Server.md","exportPath":"study/cs/📭-server.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🤲분산-환경에서의-cache-선택하기.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Redis","#Cash","#memory","#다중서버","#인메모리"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🤲분산-환경에서의-cache-선택하기.html","pathToRoot":"../..","createdTime":1744356329718,"modifiedTime":1744361927965,"sourceSize":6011,"sourcePath":"study/CS/🤲분산 환경에서의 Cache 선택하기.md","exportPath":"study/cs/🤲분산-환경에서의-cache-선택하기.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🪕-jpa-관련-용어-정리.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#JPA","#DB","#SPRING"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🪕-jpa-관련-용어-정리.html","pathToRoot":"../..","createdTime":1739950614572,"modifiedTime":1742969789251,"sourceSize":9944,"sourcePath":"study/CS/🪕 JPA 관련 용어 정리.md","exportPath":"study/cs/🪕-jpa-관련-용어-정리.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🛬-jdk와-jre,-jvm.html":{"title":"🛬 JDK와 JRE, JVM","icon":"","description":"<a class=\"tag\" href=\"https://lts.kr/?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:Java\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Java</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:JDK\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#JDK</a> <a class=\"tag\" href=\"https://lts.kr/?query=tag:JVM\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#JVM</a> <br> <a href=\"https://lts.kr?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\"https://lts.kr?query=tag:Java\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Java\">#Java</a> <a href=\"https://lts.kr?query=tag:JDK\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#JDK\">#JDK</a> <a href=\"https://lts.kr?query=tag:JVM\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#JVM\">#JVM</a><br>\n<br>자바 개발 키트의 약자로, 개발자들이 자바로 개발하는데 사용되는 SDK키트라고 생각하면 된다.\n<br>자바 개발시 필요한 라이브러리와, javac, javadoc 등의 개발도구를 포함한다.\n<br>자바 실행 프로그램인 JRE도 포함한다. (JRE에는 JVM이 들어가있다.)\n<br>- 대표적으로, 안드로이드 스튜디오 등이 있다.\n<br>\n<br>Java SE(standard edition) : 가장 기본이 되는 표준 에디션의 자바 플랫폼.\n<br>Java EE(enterprise edition) : 대규모 기업용 에디션. SE의 확장판\n<br>Java ME(micro edition) : 피쳐폰/셋톱박스/프린터 와 같은 작은 임베디드 기기를 다루는데 이용하는 에디션\n<br>Java FX : 가볍고 예쁜 그래픽 사용자 인터페이스를 제공하는 에디션\n<br>\n<br>JRE는 자바 실행환경의 약자로서, JVM과 자바 프로그램을 실행시킬 때 필요한 라이브러리 API를 함께 묶어서 배포되는 패키지.\n<br>또한, 자바 런타임 환경에서 사용하는 프로퍼티 세팅과 리소스(jar)파일을 가지고 있다.\n<br>JRE는 기본적으로 JDK에 포함되어있기 때문에 JDK를 설치하면 함께 설치된다.\n<img alt=\"Pasted image 20250110101642.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250110101642.png\" target=\"_self\">\n<br>\n<br>JVM은 자바 가상머신의 약자로서, 직역하면 자바를 실행하는 머신, 자바를 돌리는 프로그램이다.\n<br>자바로 작성된 모든 프로그램은 JVM에서만 실행될 수 있으므로, 자바 프로그램을 실행하기 위해서는 바늗시 자바 가상머신의 설치가 선행되어야 한다.\n<br>\n<br>java는 OS에 종속적이지 않다는 특징을 가지고 있다.\n<br>\n<br>\n소스코드를 컴파일하여 기계어를 만드는 과정에서, window/mac/linux가 각기 다르게 컴파일을 시킨다. <br>\n때문에 각 OS별로 상이한 문법을 사용하게 되는 일이 벌어진다. <br>\n이러한 언어를 \"이식성이 낮다\" 라고 표한다. <br>\n하지만 java는 jvm를 거쳐서 OS와 상호작용 하기때문에, OS에 구애받지 않게 된다. <br>\n<br>위에서 c언어는 컴파일을 거치면 기계어가 된다고 했는데,\n<br>java는 JVM을 거쳐 바이트 코드로 변환되게 된다. <br>이는 가상 머신이 이해할 수 있는 중간 레벨의 언어로, 반쪽짜리 컴파일 결과물 이라고 할 수 있다.\n<br>이는 어떠한 환경에 종속적이지 않고 실행될 수 있다.\n<br>즉, 재컴파일 할 필요없이 기계가 바로 읽고 실행 할 수 있는 코드를 만들어 주는것이다.\n<br>하지만 자바 프로그램과 달리 JVM은 각 운영체제에 종속적이므로, 각 운영체제에 맞는 JVM을 알맞게 설치해주어야한다.<br>\n<br>위의 설명과 같이 java는 일반 프로그램보다 JVM이라는 단계를 한 단계 더 거치기 때문에, 상대적으로 실행속도가 느리다는 단점을 내포하고 있다.\n<br>이를 보환하기 위해, 필요한 부분만을 기계어로 바꾸어 속도를 향상시키는 JIT 컴파일러 같은 내부 프로그램이 있지만, 그럼에도 여전히 느리다.\n<br><img alt=\"Pasted image 20250110103409.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250110103409.png\" target=\"_self\"><br>위 그림에서 Compiler는 javac.exe에 해당되고 JVM은 java.exe에 해당된다.\n<br>소스코드(MyPrograme.java)를 작성한다.\n<br>컴파일러(Compiler)는 자바 소스코드를 이용하여 클래스 파일(MyProgram.class)을 생성한다. 컴파일 된 클래스 파일은 JVM(Java Virtual Machine)이 인식할 수 있는 바이트 코드 파일이다.\n<br>JVM은 클래스 파일의 바이트 코드를 해석하여 바이너리 코드로 변환하고 프로그램을 수행한다.\n<br>MyProgram 수행 결과가 컴퓨터에 반영된다\n<br>\n<br>c또는 c++등으로 작성된 프로그램은 최종 결과물로 exe파일을 만들어낸다.\n<br>java도 exe파일을 만들 수 있지만, class파일로 굳이 만들어내는 이유는 다음과 같다 <br>JVM이 exe에 포함되는 형식으로 가능하기 때문에 exe파일이 무척 커지게 되는 단점이 있다.\n<br>때문에 보통의 경우 일부러 생성하지 않는것이다.","aliases":[],"tags":["#공부","#Java","#JDK","#JVM"],"headers":[{"heading":"🛬 JDK와 JRE, JVM","level":1,"id":"🛬 JDK와 JRE, JVM"},{"heading":"JDK와 JRE","level":1,"id":"JDK와_JRE"},{"heading":"JDK - Java Development Kit","level":2,"id":"JDK_-_Java_Development_Kit"},{"heading":"** SDK란? : Software Development Kit로 하트웨어플랫폼, 운영체제 또는 프로그래밍 언어 제작사가 제공하는 툴.","level":5,"id":"**_SDK란?__Software_Development_Kit로_하트웨어플랫폼,_운영체제_또는_프로그래밍_언어_제작사가_제공하는_툴."},{"heading":"JDK 버전","level":2,"id":"JDK_버전"},{"heading":"사람들이 JAVA를 설치한다고 하는것은 JDK를 설치한다고 할 수 있다.","level":4,"id":"사람들이_JAVA를_설치한다고_하는것은_JDK를_설치한다고_할_수_있다."},{"heading":"JDK자체는 오픈소스이지만, 또다른 JDK버전을 여러회사에서 출시했고, 지금의 JDK환경이 갖춰졋다.","level":5,"id":"JDK자체는_오픈소스이지만,_또다른_JDK버전을_여러회사에서_출시했고,_지금의_JDK환경이_갖춰졋다."},{"heading":"JRE - Java Runtime Environment","level":2,"id":"JRE_-_Java_Runtime_Environment"},{"heading":"java로 프로그램을 직접 개발하려면 JDK가 필요하고,","level":3,"id":"java로_프로그램을_직접_개발하려면_JDK가_필요하고,"},{"heading":"컴파일된 java프로그램을 실행시키려면 JRE가 필요하다.","level":3,"id":"컴파일된_java프로그램을_실행시키려면_JRE가_필요하다."},{"heading":"JVM - Java Virtual Machine","level":2,"id":"JVM_-_Java_Virtual_Machine"},{"heading":"JVM을 사용함으로써 얻는 가장 큰 이득은 자바프로그램을 모든 플랫폼에서 제약없이 동작시킬 수 있는 부분이다.","level":4,"id":"JVM을_사용함으로써_얻는_가장_큰_이득은_==자바프로그램을_모든_플랫폼에서_제약없이_동작==시킬_수_있는_부분이다."},{"heading":"JVM이 왜 필요할까?","level":2,"id":"JVM이_왜_필요할까?"},{"heading":"c언어를 예로 든다면,","level":3,"id":"c언어를_예로_든다면,"},{"heading":"JVM은 어떤 방식으로 동작하는가?","level":2,"id":"JVM은_어떤_방식으로_동작하는가?"},{"heading":"JVM의 단점","level":2,"id":"JVM의_단점"},{"heading":"Java소스 컴파일 과정","level":2,"id":"Java소스_컴파일_과정"},{"heading":"왜 컴파일을 마친 프로그램이 exe가 아니라, class파일일까?","level":5,"id":"왜_컴파일을_마친_프로그램이_exe가_아니라,_class파일일까?"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:Java","?query=tag:JDK","?query=tag:JVM","study/cs/🛬-jdk와-jre,-jvm.html#🛬 JDK와 JRE, JVM","study/cs/🛬-jdk와-jre,-jvm.html#JDK와_JRE","study/cs/🛬-jdk와-jre,-jvm.html#JDK_-_Java_Development_Kit","study/cs/🛬-jdk와-jre,-jvm.html#**_SDK란?__Software_Development_Kit로_하트웨어플랫폼,_운영체제_또는_프로그래밍_언어_제작사가_제공하는_툴.","study/cs/🛬-jdk와-jre,-jvm.html#JDK_버전","study/cs/🛬-jdk와-jre,-jvm.html#사람들이_JAVA를_설치한다고_하는것은_JDK를_설치한다고_할_수_있다.","study/cs/🛬-jdk와-jre,-jvm.html#JDK자체는_오픈소스이지만,_또다른_JDK버전을_여러회사에서_출시했고,_지금의_JDK환경이_갖춰졋다.","study/cs/🛬-jdk와-jre,-jvm.html#JRE_-_Java_Runtime_Environment","study/cs/🛬-jdk와-jre,-jvm.html#java로_프로그램을_직접_개발하려면_JDK가_필요하고,","study/cs/🛬-jdk와-jre,-jvm.html#컴파일된_java프로그램을_실행시키려면_JRE가_필요하다.","study/cs/🛬-jdk와-jre,-jvm.html#JVM_-_Java_Virtual_Machine","study/cs/🛬-jdk와-jre,-jvm.html#JVM을_사용함으로써_얻는_가장_큰_이득은_==자바프로그램을_모든_플랫폼에서_제약없이_동작==시킬_수_있는_부분이다.","study/cs/🛬-jdk와-jre,-jvm.html#JVM이_왜_필요할까?","study/cs/🛬-jdk와-jre,-jvm.html#c언어를_예로_든다면,","study/cs/🛬-jdk와-jre,-jvm.html#JVM은_어떤_방식으로_동작하는가?","study/cs/🛬-jdk와-jre,-jvm.html#JVM의_단점","study/cs/🛬-jdk와-jre,-jvm.html#Java소스_컴파일_과정","study/cs/🛬-jdk와-jre,-jvm.html#왜_컴파일을_마친_프로그램이_exe가_아니라,_class파일일까?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🛬-jdk와-jre,-jvm.html","pathToRoot":"../..","createdTime":1741830360116,"modifiedTime":1747808468961,"sourceSize":5131,"sourcePath":"study/CS/🛬 JDK와 JRE, JVM.md","exportPath":"study/cs/🛬-jdk와-jre,-jvm.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250110101642.png","사진-및-문서/pasted-image-20250110103409.png"]},"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#세미나","#이슈","#JPA","#Java","#Mybatis","#DeadLock"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html","pathToRoot":"../..","createdTime":1741932822852,"modifiedTime":1747796923839,"sourceSize":8048,"sourcePath":"study/Dev Seminar/🍂 JPA, Mybatis , Dead Lock이슈.md","exportPath":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#DB","#DataBase","#설계"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","pathToRoot":"../..","createdTime":1739950797888,"modifiedTime":1739951081414,"sourceSize":6184,"sourcePath":"study/Dev Seminar/📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가.md","exportPath":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🔹-tdd에-대하여.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#TDD","#Test"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/dev-seminar/🔹-tdd에-대하여.html","pathToRoot":"../..","createdTime":1739950748159,"modifiedTime":1739951382850,"sourceSize":13216,"sourcePath":"study/Dev Seminar/🔹 TDD에 대하여.md","exportPath":"study/dev-seminar/🔹-tdd에-대하여.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Hello","#Redis","#Cash","#설계"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","pathToRoot":"../..","createdTime":1739950696311,"modifiedTime":1743060669590,"sourceSize":7084,"sourcePath":"study/Dev Seminar/🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성.md","exportPath":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#SPRING","#Security","#Tokken","#Session","#Cookie"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","pathToRoot":"../..","createdTime":1739950706177,"modifiedTime":1740127908434,"sourceSize":9716,"sourcePath":"study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md","exportPath":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/📕-공부.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#모음"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/📕-공부.html","pathToRoot":"..","createdTime":1740028632740,"modifiedTime":1747632701593,"sourceSize":1309,"sourcePath":"study/📕 공부.md","exportPath":"study/📕-공부.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#AWS","#Amazon","#Cloud","#Docker","#Redis","#EC2"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1740361077682,"sourceSize":9994,"sourcePath":"Tools/aws/🌥 aws(EC2)셋팅부터 배포까지.md","exportPath":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/aws/🍊-aws-ec2란.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#AWS","#Amazon","#Cloud","#EC2"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/aws/🍊-aws-ec2란.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1740361069051,"sourceSize":3324,"sourcePath":"Tools/aws/🍊 aws EC2란.md","exportPath":"tools/aws/🍊-aws-ec2란.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/aws/🍌-elastic-ip(탄력적-ip)란.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#AWS","#Amazon","#Cloud","#EC2"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/aws/🍌-elastic-ip(탄력적-ip)란.html","pathToRoot":"../..","createdTime":1740361053654,"modifiedTime":1740646202048,"sourceSize":1519,"sourcePath":"Tools/aws/🍌 Elastic IP(탄력적 IP)란.md","exportPath":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/docker/🐋-docker-란.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#도커","#Docker"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/docker/🐋-docker-란.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1745221184011,"sourceSize":3101,"sourcePath":"Tools/docker/🐋 docker 란.md","exportPath":"tools/docker/🐋-docker-란.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/docker/📘-springboot-&-docker-+-reids-연동.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#도커","#Docker","#SPRING","#Boot","#Redis"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/docker/📘-springboot-&-docker-+-reids-연동.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1745221182456,"sourceSize":10950,"sourcePath":"Tools/docker/📘 SpringBoot & Docker + Reids 연동.md","exportPath":"tools/docker/📘-springboot-&-docker-+-reids-연동.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/jenkins/👔-jenkins란.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#도커","#Docker"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/jenkins/👔-jenkins란.html","pathToRoot":"../..","createdTime":1745220988073,"modifiedTime":1745389856171,"sourceSize":6544,"sourcePath":"Tools/Jenkins/👔 Jenkins란.md","exportPath":"tools/jenkins/👔-jenkins란.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/kubernetes/🚢kubernetes(k8s)란.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#Kubernetes","#k8s"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/kubernetes/🚢kubernetes(k8s)란.html","pathToRoot":"../..","createdTime":1745387153440,"modifiedTime":1745399649359,"sourceSize":5878,"sourcePath":"Tools/Kubernetes/🚢Kubernetes(k8s)란.md","exportPath":"tools/kubernetes/🚢kubernetes(k8s)란.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/🎵-obsidian.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#메모","#Obsidian"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/🎵-obsidian.html","pathToRoot":"..","createdTime":1739863713458,"modifiedTime":1739954777611,"sourceSize":5657,"sourcePath":"Tools/🎵 Obsidian.md","exportPath":"tools/🎵-obsidian.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/🪓-도구.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#모음","#도구"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/tools/🪓-도구.html","pathToRoot":"..","createdTime":1740028927813,"modifiedTime":1745455770280,"sourceSize":807,"sourcePath":"Tools/🪓 도구.md","exportPath":"tools/🪓-도구.html","showInTree":true,"treeOrder":0,"attachments":[]},"🏠-taesung's-blog.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#home","#index","#blog","#공부"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/🏠-taesung's-blog.html","pathToRoot":"","createdTime":1739779810544,"modifiedTime":1747728146886,"sourceSize":1921,"sourcePath":"🏠 taesung's Blog.md","exportPath":"🏠-taesung's-blog.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/melometer-project/✈mm_클라우드-마이그레이션.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#Cloud","#CloudNative","#CI/CD"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/melometer-project/✈mm_클라우드-마이그레이션.html","pathToRoot":"../..","createdTime":1746163531597,"modifiedTime":1746603628278,"sourceSize":3874,"sourcePath":"project/MeloMeter Project/✈MM_클라우드 마이그레이션.md","exportPath":"project/melometer-project/✈mm_클라우드-마이그레이션.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/🚞-java-대용량-excel-리펙토링.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#JAVA","#Excel","#엑셀","#성능개선","#리펙토링"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/project/🚞-java-대용량-excel-리펙토링.html","pathToRoot":"..","createdTime":1746688893573,"modifiedTime":1747385811195,"sourceSize":13174,"sourcePath":"project/🚞 Java 대용량 Excel 리펙토링.md","exportPath":"project/🚞-java-대용량-excel-리펙토링.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/영속성-컨텍스트.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/영속성-컨텍스트.html","pathToRoot":"..","createdTime":1747636635791,"modifiedTime":1747792885511,"sourceSize":6209,"sourcePath":"짧은 키워드/영속성 컨텍스트.md","exportPath":"짧은-키워드/영속성-컨텍스트.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SQL","#JPA","#이슈","#log","#로그"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html","pathToRoot":"..","createdTime":1747361142049,"modifiedTime":1747794366628,"sourceSize":7480,"sourcePath":"Issue_TroubleShooting/🍧 JPA의 영속성 상태와 데이터 Log 이슈.md","exportPath":"issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🌋-osiv란-무엇인가.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#JPA","#OSIV","#영속성컨텍스트"],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/study/cs/🌋-osiv란-무엇인가.html","pathToRoot":"../..","createdTime":1741932822851,"modifiedTime":1747632704139,"sourceSize":5226,"sourcePath":"study/CS/🌋 OSIV란 무엇인가.md","exportPath":"study/cs/🌋-osiv란-무엇인가.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/프록시.html":{"title":"","icon":"","description":"","aliases":[],"tags":[],"headers":[],"backlinks":[],"links":[],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/프록시.html","pathToRoot":"..","createdTime":1747796612640,"modifiedTime":1747796648601,"sourceSize":801,"sourcePath":"짧은 키워드/프록시.md","exportPath":"짧은-키워드/프록시.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/@-어노테이션이란-무엇인인가.html":{"title":"@ 어노테이션이란 무엇인인가?","icon":"","description":"<br><br>1. 컴파일러에게 코드작성 문법에러를 체크하도록 정보 제공\n2. 빌드나 배치시 코드를 자동으로 생성할수 있도록 정보 제공\n3. 실행시 특정 기능을 수행하도록 정보 제공\n<br>","aliases":[],"tags":[],"headers":[{"heading":"@ 어노테이션이란 무엇인인가?","level":1,"id":"@ 어노테이션이란 무엇인인가?"}],"backlinks":[],"links":["짧은-키워드/@-어노테이션이란-무엇인인가.html#@ 어노테이션이란 무엇인인가?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/@-어노테이션이란-무엇인인가.html","pathToRoot":"..","createdTime":1747809832261,"modifiedTime":1747809832272,"sourceSize":275,"sourcePath":"짧은 키워드/@ 어노테이션이란 무엇인인가.md","exportPath":"짧은-키워드/@-어노테이션이란-무엇인인가.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/@component.html":{"title":"@Component는 내가 만든 클래스에 Bean을 주입하는역할을 한다.","icon":"","description":"<br><br>이때 객체가 생성된다면 싱글톤 패턴으로 생성이 된다. ** Spring Framework의 도움을 받으면 단점을 줄이고 장점을 사용할 수 있다.\n<br>*@Controller / @Service / @Repository 등의 어노테이션을 포함한다.\n싱글톤패턴?<br>\n<br>인스턴스(객체)가 오직 한개만 생성된다\n<br>장점 : 메모리낭비를 방지한다.\n이미 생성된 객체를 재사용하기 때문에 속도가 빠르며\n전역으로 사용되는 인스턴스이기 때문에 데이터공유가 쉽다.\n<br>단점 : 테스트에 어려움이있다.\n자식클래스를 만들수없다.\n내부의 상태를 변경하기 어렵다.\n<br><br> - 컴포넌트와 컨트롤러 모두 Bean객체를 등록하지만\n컨트롤러는 url과 클래스를 이어주는 역할을 할 수 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"@Component는 내가 만든 클래스에 Bean을 주입하는역할을 한다.","level":1,"id":"@Component는 내가 만든 클래스에 Bean을 주입하는역할을 한다."},{"heading":"이때, @Component와 @Controller의 차이점은 무엇일까?","level":3,"id":"이때,_@Component와_@Controller의_차이점은_무엇일까?"}],"backlinks":[],"links":["짧은-키워드/@component.html#@Component는 내가 만든 클래스에 Bean을 주입하는역할을 한다.","짧은-키워드/@component.html#이때,_@Component와_@Controller의_차이점은_무엇일까?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/@component.html","pathToRoot":"..","createdTime":1747809852702,"modifiedTime":1747809852705,"sourceSize":956,"sourcePath":"짧은 키워드/@Component.md","exportPath":"짧은-키워드/@component.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html":{"title":"객체지향설계 5원칙 S.O.L.I.D","icon":"","description":"<br><br><br>\n<br>객체지향 설계시 지켜야 하는 5가지 원칙들의 앞글자를 딴것이다.\n<br>순서는 노상관이다.\n<br><br>책임 = 기능 이다. 수정시 영향도를 낮추는 주요한 원칙이다.\n<br><br>- 추상화 사용을 통한 관계를 구축하기를 권장하는 의미이다.\n- 추상클래스,인터페이스를 통한 관계를 구축하여 확장은 쉽고, 변경에는 영향도가 없어지도록 분리해라?\n<br><br>- 코드에는 문제가 없더라도, 부모타입의 설계 목적에도 부합하도록 설계해라. -&gt; 부모의 동작의도대로 흘러가도록 설계해라\n- Map a = new HashMap(); 같이 구현해서, 사용해도 문제 없도록 하는거다\n- &gt; 변수는 Map타입으로, Map메서드만 사용가능하지만 객체는 HashMap이기 때문에 각각의 기능으로 수행되고, 수정시에도 Map을 상속받는 다른 클래스로 변경이 쉬워진다.\n<br><br>- 인터페이스의 단일책임과 비슷하다. 기능별로 잘 분리하고, 수정을 최소화할수 있도록 처음부터 생각하라.\n<br><br>- 리스코프 치환의 원칙을 따라 설계했다면, 의존성 역전의 원칙을 따르기 쉬워진다.\n- 의존관계를 맺을때, 변화기 쉬운것 보다, 변화하기 어려운 것에 의존하라는 것이다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"객체지향설계 5원칙 S.O.L.I.D","level":1,"id":"객체지향설계 5원칙 S.O.L.I.D"},{"heading":"이녀석들은 뭐하는 애들인가","level":2,"id":"이녀석들은_뭐하는_애들인가"},{"heading":"1. 단일 책임의 원칙 - 클래스 하나에 너무 많은 책임을 넣지마라. 근데 기준은 너가 정한다.","level":3,"id":"1._단일_책임의_원칙_-_클래스_하나에_너무_많은_책임을_넣지마라._근데_기준은_너가_정한다."},{"heading":"2. 개방 폐쇄의 원칙 - 확장에는 열려있게, 변경에는 닫혀있게 설계해라.","level":3,"id":"2._개방_폐쇄의_원칙_-_확장에는_열려있게,_변경에는_닫혀있게_설계해라."},{"heading":"3. 리스코프 치환의 원칙 - 하위타입은 언제나 상위타입으로 전환이 가능해야한다.","level":3,"id":"3._리스코프_치환의_원칙_-_하위타입은_언제나_상위타입으로_전환이_가능해야한다."},{"heading":"4. 인터페이스 분리의 원칙 - 인터페이스를 기능별로 잘 분리하고, 수정하지 말아라","level":3,"id":"4._인터페이스_분리의_원칙_-_인터페이스를_기능별로_잘_분리하고,_수정하지_말아라"},{"heading":"5. 의존성 역전의 원칙 - 어떤 클래스를 참조할때, 직접참조하지 말고 상위 인터페이스나 추상클래스를 참조해라.","level":3,"id":"5._의존성_역전의_원칙_-_어떤_클래스를_참조할때,_직접참조하지_말고_상위_인터페이스나_추상클래스를_참조해라."}],"backlinks":[],"links":["짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#객체지향설계 5원칙 S.O.L.I.D","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#이녀석들은_뭐하는_애들인가","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#1._단일_책임의_원칙_-_클래스_하나에_너무_많은_책임을_넣지마라._근데_기준은_너가_정한다.","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#2._개방_폐쇄의_원칙_-_확장에는_열려있게,_변경에는_닫혀있게_설계해라.","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#3._리스코프_치환의_원칙_-_하위타입은_언제나_상위타입으로_전환이_가능해야한다.","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#4._인터페이스_분리의_원칙_-_인터페이스를_기능별로_잘_분리하고,_수정하지_말아라","짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html#5._의존성_역전의_원칙_-_어떤_클래스를_참조할때,_직접참조하지_말고_상위_인터페이스나_추상클래스를_참조해라."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html","pathToRoot":"..","createdTime":1747808359435,"modifiedTime":1747808359458,"sourceSize":1977,"sourcePath":"짧은 키워드/객체지향설계 5원칙 S.O.L.I.D.md","exportPath":"짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/데이터-검증-(validation).html":{"title":"데이터 검증 (Validation)","icon":"","description":"<br><br>Spring에서의 데이터 검증(Validation)은 여러 계층에 거쳐서 발생한다.\n여기서, 가장 기본적인 검증 방법은 Bean Validation이다.<br>\n<br>'필드'에 특정 어노테이션을 적용하여 필드가 갖는 제약 조건을 정의하는 구조로 이루어진 검사다.\nvalidator가 그 클래스로 생성된 객체의 유효성 여부를 확인한다.\n이때, 어떠한 비즈니스로직에 대한 검증이 아닌, 객체 자체 필드에 대한 검증을 한다.\n<br>\t@RestController @AllArgsConstructor public class BookController { private BookService bookService; @PostMapping(\"/books\") public void save(@RequestBody @Valid AddBookRequestDto addBookRequestDto, BindingResult bindingResult) { if(bindingResult.hasErrors()) { bindingResult.getAllErrors() .forEach(objectError-&gt;{ System.err.println(\"code : \" + objectError.getCode()); System.err.println(\"defaultMessage : \" + objectError.getDefaultMessage()); System.err.println(\"objectName : \" + objectError.getObjectName()); }); return; } bookService.save(addBookRequestDto.toEntity()); }\n<br>-&gt; 여기서@Valid 어노테이션이 Request에 있는 방인된 객체(dto)의 유효성을 확인하고\n유효하지 않은객체라면 BindingResult 파라미터에 들어가게 된다.<br>그렇다면, @PathVariable과 @RequestParam은 어떻게 유효성 검사를 진행할까?<br>\n<br>\n클래스에 @Validated 어노테이션을 등록해 주면 된다.\n@RestController\n@Validated\npublic class UserController {\n} <br>","aliases":[],"tags":[],"headers":[{"heading":"데이터 검증 (Validation)","level":1,"id":"데이터 검증 (Validation)"}],"backlinks":[],"links":["짧은-키워드/데이터-검증-(validation).html#데이터 검증 (Validation)"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/데이터-검증-(validation).html","pathToRoot":"..","createdTime":1747810044462,"modifiedTime":1747810044532,"sourceSize":1714,"sourcePath":"짧은 키워드/데이터 검증 (Validation).md","exportPath":"짧은-키워드/데이터-검증-(validation).html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html":{"title":"데코레이션 패턴 vs 프록시 패턴","icon":"","description":"<br><br><br>\n<br>클라이언트에서 서버를 직접 호출하고, 처리결과를 받는다. -&gt; 직접호출\n<br>클라이언트에서 서버를 직접 호출하지 않고, 대리자를 통해 간접적으로 서버에 요청 -&gt; 간접호출\n<br><br><br>\n<br> <br>권한에 따른 접근 차단, 지연로딩을 수행하는 접근 제어 <br> <br>서버의 기능에 다른 기능을 추가해주는 부가 기능 추가 ex) 로그, 가공 <br> <br>대리자가 또 다른 대리자를 호출하는 프록시 체인 <br><br>\n<br> <br>아무 객체나 프록시가 되는것은 아니다. <br> <br>클라이언트는 서버에 요청한지, 프록시에게 요청한지 몰라야한다. <br>즉, 클라이언트의 코드를 건드리지 않고 프록시 추가와 런타임 객체 의존 관계 주입만 변경하여야 한다.\n<br><br>\n<br>두 패턴 모두 프록시를 사용하는 방법이다.\n<br>또한, 둘 모두 원본 객체를 건드리지 않고, 추가 기능을 실행 할 수 있다.\n<br>하지만 GOF 디자인 패턴에서는 이 둘을 의도(Intent)에 따라서 구분한다.\n프록시 패턴 : 접근 제어가 목적\n데코레이터 패턴 : 새로운 기능 추가가 목적\n<br><br><br>1.객체들이 사용하는 코드를 훼손하지 않으면서 런타임에 추가 행동들을 객체들에 할당할 때 사용.<br>\n<br>상속을 사용하여 객체의 행동을 호가장하는 것이 어색하거나, 불가능할 때 사용할 수 있다.\n-만일 final 키워드가 기입된 클래스의 경우는 데코레이터 패턴을 통해 래핑하여 재사용 할 수 있다.\n<br>ex)\n택스트 편집기\n- 택스트 편집기에서 굵게, 이텔릭체, 밑줄 등과 같은 다양한 텍스트 포맷을 지원한다.\nSpring\n- HttpServletRequestWrapper : Sevlet에서 제공하는 Wrapper로 데코레이터 패턴을 지원한다.<br><br>\n<br>\n가상 프록시, 지연 로딩이 필요한 경우 <br>부담되는 서비스 객체를 바로 초기화 한다면 리소스 낭비가 발생 할 수 있으므로, 프록시 객체를 통해 객체를 초기화 할 수 있다. <br>\n보호 프록시, 접근 제어가 필요한 경우 <br>특정 클라이언트에 대해서만 서비스 객체를 이용할 수 있도록 하려는 경우 프록시 객체를 통해서 처리할 수 있다. <br>\n원격 프록시, 원격 서비스의 로컬 실행이 필요한 경우 <br>서비스 객체가 원격 서버에 있는 경우에는 네트워크를 통해 클라이언트의 요청을 전달하여 처리할 수 있다. <br>\n로깅 프록시, 서비스 객체에 대한 로깅이 필요한 경우 <br>프록시 객체에서 서비스에 전달하기 전과 후로 로깅을 진행할 수 있다. <br>\n캐싱 프록시, 요청 결과를 캐시하고 생명주기를 관리해야 하는 경우 <br>ex) Spring JAP<br>\n<br>JPA의 지연 로딩의 경우, 가상 프록시를 적용하여 실제로 객체를 조회하기 이전까지 프록시 객체로 Entity를 대신하여 제공한다.\nex) Spring AOP\n<br>Spring AOP는 프록시 패턴을 사용하여 트렌젝션 관리, 로깅, 보안 등의 작업을 프록시에서 처리한다.\n<br>\npublic void write(char cbuf[], int off, int len) throws IOException { synchronized (lock) { ensureOpen(); if ((off &lt; 0) || (off &gt; cbuf.length) || (len &lt; 0) || ((off + len) &gt; cbuf.length) || ((off + len) &lt; 0)) { throw new IndexOutOfBoundsException(); } else if (len == 0) { return; } if (len &gt;= nChars) { /* If the request length exceeds the size of the output buffer, flush the buffer and then write the data directly. In this way buffered streams will cascade harmlessly. */ flushBuffer(); out.write(cbuf, off, len); return; } int b = off, t = off + len; while (b &lt; t) { int d = min(nChars - nextChar, t - b); System.arraycopy(cbuf, b, cb, nextChar, d); b += d; nextChar += d; if (nextChar &gt;= nChars) flushBuffer(); } }\n} ","aliases":[],"tags":[],"headers":[{"heading":"데코레이션 패턴 vs 프록시 패턴","level":1,"id":"데코레이션 패턴 vs 프록시 패턴"},{"heading":"프록시란?","level":2,"id":"프록시란?"},{"heading":"여기서, 간접호출하는 대상을 프록시 라고 한다.","level":4,"id":"여기서,_간접호출하는_대상을_==프록시==_라고_한다."},{"heading":"프록시는 클라이언트와 서버의 중간에 위치하기 때문에, 여러가지 일을 수행할 수 있다.","level":2,"id":"프록시는_클라이언트와_서버의_중간에_위치하기_때문에,_여러가지_일을_수행할_수_있다."},{"heading":"프록시는 대체 가능해야 한다.","level":2,"id":"프록시는_대체_가능해야_한다."},{"heading":"프록시 패턴과 데코레이터 패턴","level":2,"id":"프록시_패턴과_데코레이터_패턴"},{"heading":"데코레이터 패턴","level":3,"id":"데코레이터_패턴"},{"heading":"프록시 패턴","level":3,"id":"프록시_패턴"}],"backlinks":[],"links":["짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#데코레이션 패턴 vs 프록시 패턴","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#프록시란?","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#여기서,_간접호출하는_대상을_==프록시==_라고_한다.","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#프록시는_클라이언트와_서버의_중간에_위치하기_때문에,_여러가지_일을_수행할_수_있다.","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#프록시는_대체_가능해야_한다.","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#프록시_패턴과_데코레이터_패턴","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#데코레이터_패턴","짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html#프록시_패턴"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html","pathToRoot":"..","createdTime":1747808642807,"modifiedTime":1747808642812,"sourceSize":5341,"sourcePath":"짧은 키워드/데코레이션 패턴 vs 프록시 패턴.md","exportPath":"짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/많이쓰이는-db용어.html":{"title":"많이쓰이는 DB용어","icon":"","description":"<br><br><br>트렌젝션\n- 데이터베이스의 상태를 변화시키기 위해 수행하는 작업의 단위<br>트렌젝션매니저\n- Spring에서 제공하는 트렌젝션 관리 기능과 JPA를 연결하는 역할을 수행.<br>@Transactional\n- 클래스나 메서드에 삽입하면, AOP레벨(프록시를 사용하여)에서 트렌젝션매니저를 이용한 동작을 공통으로 적용.<br>앤티티매니저\n- 영속성 컨텍스트를 관리하는 인터페이스\n- 엔티티의 저장/수정/삭제/조회 작업을 수행\n- 스레드 세이프하지 않으므로 한트레젝션 내에서만 사용\n- 앤티티매니저펙토리는 스레드세이프하므로 공유 가능<br>영속성컨텍스트\n- JPA의 엔티티를 관리하는 1차 캐시 역할을 하는 메모리 공간\n- 엔티티와 DB데이터간의 상태 동기화를 책임\n- 1차캐싱 / 변경 감지 / 지연 로딩 의 특징을 갖는다\n- 지연로딩 : 관계된 엔티티를 실제로 필요할때만 가져오며, 변경점을 한번만 commit한다<br>스냅샷\n- DB스냅샷 :\n- 트렌젝션이 시작될때 생성된다.\n- 독립적인 데이터베이스 복사본으로, 원본데이터 변경과 무관하다.\n- 고급 격리 수준(REPEATABLE READ, SERIALIZABLE)에서 MVCC(Multi-Version Concurrency Control)를 구현할 때 사용한다.\n- 물리적인 복사본이 아닌, 논리적으로 매 쿼리마다 동적으로 가공이 되는 방식이다.\n- 앤티티매니저_스냅샷 :\n- 엔티티가 영속성 컨텍스트에 로드될 때 생성된다.\n- 엔티티의 초기 상태를 저장하여 변경 감지에 사용된다.<br>","aliases":[],"tags":[],"headers":[{"heading":"많이쓰이는 DB용어","level":1,"id":"많이쓰이는 DB용어"},{"heading":"각각의 정의","level":2,"id":"각각의_정의"}],"backlinks":[],"links":["짧은-키워드/많이쓰이는-db용어.html#많이쓰이는 DB용어","짧은-키워드/많이쓰이는-db용어.html#각각의_정의"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/많이쓰이는-db용어.html","pathToRoot":"..","createdTime":1747810931270,"modifiedTime":1747810931293,"sourceSize":1688,"sourcePath":"짧은 키워드/많이쓰이는 DB용어.md","exportPath":"짧은-키워드/많이쓰이는-db용어.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/빌더패턴을-왜쓰는가.html":{"title":"빌더패턴을 왜쓰는가?","icon":"","description":"<br><br><br>\n<br>생성자의 파라미터가 많은 경우 가독성이 떨어진다. <br>빌더패턴으로 생성하는 경우 각 값들이 함수로 셋팅이되고, 각각 무슨값들이 어떠한 것을을 의미하는지 파악하기가 수월하다.\nex)\nBag bag = new Bag(\"name\", 1000, \"memo\", \"20\", \"30\");\nvs\nBag bag = Bag.builder()\n,name(\"name\")\n,money(1000)\n,memo(\"memo\")\n,won(20)\n,dolor(30)\n,build(); <br>어떠한 값을 먼저 넣더라도 상관없다(순서x) <br>생성자의 경우 정해진 파라미터대로 값을 입력해야 정해진 값에 매핑이 되지만, 빌더패던의 경우 필드 이름을 기준으로 값을 삽입하게 때문에 순서를 생각하지 않아도 된다. <br><br>\n<br>@NoArgsConstructor로 기본 생성자의 생성을 방지하고, @Builder를 이용하여 객체의 생성에 유연성을 준다.\n이때, 이 2개의 어노테이션을 함께 사용하기 위해서는 @AllArgsConstructor 어노테이션이 필요하다.\n<br>이유 : @Build는 위에서 설명한 바와 같이 생성자가 없다면 모든 파라미터를 갖는 생성자를 생성하지만, @NoArgsConstructor로 인해 아무런 생성자를 생성하지 않는다. 이때 build메서드를 사용하여 모든파라미터를 받는 메서드(생성자)를 동작시키면 매칭되는 생성자가 없기때문에 오류를 야기한다.\n따라서 @AllArgsConstructor 어노테이션을 추가로 작성하여 해결할 수 있다.<br>더 깔끔한 방법으로는 직접 생성자를 생성해주고, 빌더 패턴에서 해당 생성자를 사용하도록 하는 방법도 있다.<br>","aliases":[],"tags":[],"headers":[{"heading":"빌더패턴을 왜쓰는가?","level":1,"id":"빌더패턴을 왜쓰는가?"},{"heading":"빌더패턴의 장점","level":4,"id":"빌더패턴의_장점"},{"heading":"빌더패턴 구현","level":4,"id":"빌더패턴_구현"}],"backlinks":[],"links":["짧은-키워드/빌더패턴을-왜쓰는가.html#빌더패턴을 왜쓰는가?","짧은-키워드/빌더패턴을-왜쓰는가.html#빌더패턴의_장점","짧은-키워드/빌더패턴을-왜쓰는가.html#빌더패턴_구현"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/빌더패턴을-왜쓰는가.html","pathToRoot":"..","createdTime":1747809910075,"modifiedTime":1747809910079,"sourceSize":1692,"sourcePath":"짧은 키워드/빌더패턴을 왜쓰는가.md","exportPath":"짧은-키워드/빌더패턴을-왜쓰는가.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/상속과-합성.html":{"title":"상속과 합성","icon":"","description":"<br><br><br><br>Java는 다중 상속을 지원하지 않는다.(부모가 2명 이상인것)\n<br><br>다중 상속 처럼 여러개를 상속받을 수 있다. 부모의 메서드를 사용하며, 동작이 의도대로 흘러가도록 강제할 수 있으나, 구현은 자식 클래스에서 하기때문에 결합도를 낮출 수 있다.\n<br><br><br>\n<br>상속은 부모 클래스의 내부 구현에 대해 상세히 알아야 하기 때문에, 자식과 부모 사이의 결합도가 높아질 수 밖에 없다.\n<br>또한, 부모의 쓸모없는 기능까지 모두 받게 될 가능성이 있다.\n<br>부모 클래스가 수정되면, 자식클래스도 동시에 수정해야하는 경우가 생긴다.\n<br>단일 상속만 가능하기 때문에, 결국 인터페이스를 또 사용하게 된다.\n<br><br>\n<br>합성은 구현에 의존하지 않는 점에서 상속과 다르다. <br>합성을 이용했을 때는, 객체의 내부는 공개되지 않고 인터페이스를 통해 코드를 재사용하기 때문에,\n구현에 대한 의존성을 인터페이스에 대한 의존성으로 변경하여 결합도를 낮출 수 있다.\n<br>합성 관계는 실행 시점에 동적으로 변경될수 있다.(런타임) <br>public class Phone { private RatePolicy ratePolicy; // 클래스 합성 private List&lt;Call&gt; calls = new ArrayList&lt;&gt;(); // 클래스 합성 public Phone(RatePolicy ratePolicy) { this.ratePolicy = ratePolicy; } public List&lt;Call&gt; getCalls() { return Collections.unmodifiableList(calls); }\n}\n<br><br>","aliases":[],"tags":[],"headers":[{"heading":"상속과 합성","level":1,"id":"상속과 합성"},{"heading":"상속의 개념","level":4,"id":"상속의_개념"},{"heading":"- extends : 부모에서 선언 및 전의를 모두 마치며, 자식은 메서드 / 변수를 그대로 사용 가능한 형태","level":5,"id":"-_extends__부모에서_선언_및_전의를_모두_마치며,_자식은_메서드_/_변수를_그대로_사용_가능한_형태"},{"heading":"- impliments : interface구현. 부모 객체는 선언만 하며, 정의는 자식에서 오버라이딩 하여 사용하는 형태","level":5,"id":"-_impliments__interface구현._부모_객체는_선언만_하며,_정의는_자식에서_오버라이딩_하여_사용하는_형태"},{"heading":"- abstract : extends와 impliments의 혼합. extends는 하되, 부모의 몇 개는 추상 메서드로 구현되어있는 형태","level":5,"id":"-_abstract__extends와_impliments의_혼합._extends는_하되,_부모의_몇_개는_추상_메서드로_구현되어있는_형태"},{"heading":"상속의 단점","level":2,"id":"상속의_단점"},{"heading":"'합성' 이란?","level":2,"id":"'합성'_이란?"},{"heading":"결론은 다형성을 이용하고 싶을때, 부모클래스를 정확히 이해하고 그대로 계승할것이 아니라면, extends 대신 impliments를 사용하여 결합도를 낮추는 것이 좋고, 그 외 모든 경우네는 합성을 이용하도록 권고하고있다.","level":4,"id":"결론은_다형성을_이용하고_싶을때,_부모클래스를_정확히_이해하고_그대로_계승할것이_아니라면,_extends_대신_impliments를_사용하여_결합도를_낮추는_것이_좋고,_그_외_모든_경우네는_==합성==을_이용하도록_권고하고있다."}],"backlinks":[],"links":["짧은-키워드/상속과-합성.html#상속과 합성","짧은-키워드/상속과-합성.html#상속의_개념","짧은-키워드/상속과-합성.html#-_extends__부모에서_선언_및_전의를_모두_마치며,_자식은_메서드_/_변수를_그대로_사용_가능한_형태","짧은-키워드/상속과-합성.html#-_impliments__interface구현._부모_객체는_선언만_하며,_정의는_자식에서_오버라이딩_하여_사용하는_형태","짧은-키워드/상속과-합성.html#-_abstract__extends와_impliments의_혼합._extends는_하되,_부모의_몇_개는_추상_메서드로_구현되어있는_형태","짧은-키워드/상속과-합성.html#상속의_단점","짧은-키워드/상속과-합성.html#'합성'_이란?","짧은-키워드/상속과-합성.html#결론은_다형성을_이용하고_싶을때,_부모클래스를_정확히_이해하고_그대로_계승할것이_아니라면,_extends_대신_impliments를_사용하여_결합도를_낮추는_것이_좋고,_그_외_모든_경우네는_==합성==을_이용하도록_권고하고있다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/상속과-합성.html","pathToRoot":"..","createdTime":1747808334317,"modifiedTime":1747808334321,"sourceSize":2327,"sourcePath":"짧은 키워드/상속과 합성.md","exportPath":"짧은-키워드/상속과-합성.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html":{"title":"엘라스틱서치 인덱스와 샤드 분할","icon":"","description":"<br><br>인덱스 : 단일데이터 단위인 도큐먼트(document)를 모아놓은 집합을 인덱스(index)라고 한다.\n색인 : 데이터를 Elasticsearch에 저장하는 행위\n샤드 : 인덱스는 기본적으로 샤드(shard)라는 단위로 분리되고, 각 노드에 분산되어 저장된다 (검색의 기본단위는 샤드이다.)\n<img alt=\"Pasted image 20240828104032.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240828104032.png\" target=\"_self\"><br>\n<br>데이터를 범위나 카테고리로 나누어 관리하는 기법을 파티셔닝 이라고 한다.\n<br><br>\n<br>\n인덱스를 생성할 때, 처음 생성된 샤드를 프라이머리 샤드, 복제본은 리플리카 라고 부른다. <br>\n예를 들어 한 인덱스가 5개의 샤드로 구성되어있고, 클러스터가 4개의 노드로 구성되어있다고 가정하면,\n각각 5개의 프라이머리 샤드와 복제본, 총 10개의 샤드들이 전체 노드에 골고루 분산되어 저장된다.\n<img alt=\"Pasted image 20240828104728.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240828104728.png\" target=\"_self\">\n노드가 1개만 존재한다면 복제본은 생성되지 않는다. Elasticsearch는 아무리 작은 클러스터라도 최소 3개의 노드로 구성할 것을 권장하고 있다. <br>\n이렇게 프라이머리 샤드와 리플리카를 통해 Elasticsearch는 운영 중에 노드가 유실되어도 데이터를 잃어버리지 않고, 데이터 가용성과 무결성을 보장하게 된다. <br><br>샤드는 여러 서버에 분산되어 병렬 및 병행으로 검색되므로, 인덱스가 같던 다르던 상관이 없다.\n검색의 기본 단위는 샤드이기 때문이다. 따라서 인덱스를 나누는 것은 운영의 편의성을 고려할 때 선택하는 방법이다.\n<br><br>전체색인을 할 경우 인덱스 1개가 7억건 이라면 색인이 모두 끝날때 까지 몇시간이 걸리게 된다.\n그 와중에 데이터에 변경이 있게 된다면 전체 색인 후 일괄적용이 들어가게 될텐데, 대기시간이 길어질 수록 일괄적용 시간도 함께 늘어나게 된다.\n결국 더 빠른 색인을 위해서는 하나의 인덱스를 여러개로 나누너 병행처리를 시키도록 해야한다. 다나와 에서는 상품DB특성상 카테고리군 별로 인덱스를 나누고 있다. 이때의 장점은 특정 카테고리만 검색할때 해당 인덱스만 검색하면 되므로, 검색 속도가 현저히 감소하게 된다.\n<br><br>\n<br>일반적인 시스템 로그와 같은 로그성 문서는 색인을 하고 나면 수정이 필요없는 정적 컨텐츠인 반면\n상품문서같은 경우 색인이 끝나도 계속 갱신되어야 하는 살아있는 동적 컨텐츠이다. 따라서 동적색인에 원할하고, 검색성능도 높은 설계를 요구한다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"엘라스틱서치 인덱스와 샤드 분할","level":1,"id":"엘라스틱서치 인덱스와 샤드 분할"},{"heading":"프라이머리 샤드와 복제본(Replica)","level":2,"id":"프라이머리_샤드와_복제본(Replica)"},{"heading":"검색시 샤드와 인덱스","level":3,"id":"검색시_샤드와_인덱스"},{"heading":"색인시 인덱스","level":3,"id":"색인시_인덱스"},{"heading":"결론","level":2,"id":"결론"}],"backlinks":[],"links":["짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html#엘라스틱서치 인덱스와 샤드 분할","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html#프라이머리_샤드와_복제본(Replica)","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html#검색시_샤드와_인덱스","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html#색인시_인덱스","짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html#결론"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html","pathToRoot":"..","createdTime":1747810900167,"modifiedTime":1747810900319,"sourceSize":2833,"sourcePath":"짧은 키워드/엘라스틱서치 인덱스와 샤드 분할.md","exportPath":"짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240828104032.png","사진-및-문서/pasted-image-20240828104728.png"]},"짧은-키워드/예외처리(exception).html":{"title":"예외처리(Exception)","icon":"","description":"<br><br><br>1. e.getMessage() : 에러 메시지의 정보를 받음\n2. e.getExceptionCode() : 에러 메시지 발생 코드를 받음\n3. e.getStatus() : 에러 메시지의 발생 상태를 받음\n4. HttpStatus(enum 클래스)를 받아 해당 value(Code) 와 getReasonPhrase(message)를 얻을 수 있음\n<br><br>1. 체크 예외 발생한 예외를 잡아서(catch) 체크 후 예외를 복구 or 회피 하도록 만드는 구체적인 처리를 필요로 하는 예외이다. try catch가 강제된다. 컴파일 시점에서 에러의 확인이 가능하다. try catch를 할 수 없다면 예외를 밖으로 던지는 Throw 예외를 필수로 선언해 주어야 한다.\n2. 언체크 예외 예외를 잡아서 해당 예외에 대한 처리가 필요 없는 예외. RuntimeException을 상속 받은 예외들이 이에 포함된다.\n<br><br><br><br><br>UncheckedException으로 처리\n<br><br>try { 예외가 생길 가능성이 있는 코드\n} catch (예외종류){ 예외처리 코드\n} finaly { 예외와 상관없이 항상 실행시킬 코드(선택사항)\n}\n<br>자바에서는 Exception클래스에서 상속받은 다양한 Exception클래스를 갖고 있기 때문에, 여러가지 에러 발생 가능성에 대해서 예외 구문을 처리해 줄 수 있다.<br><br>자신을 호출하는 메서드에 예외처리의 책임을 떠넘기는 것이다.\n단, throws를 사용하려면 반드시 호출한 메서드에 try-catch 구문을 사용하여 예외를 처리해 주어야 한다.<br>public class ThrowTest { public static void main(String[] args) { int n1, n2; n1=12; n2=0; try { throwTest(n1, n2); } catch (ArithmeticException e) { // n1/n2 라면 발생했을 것 System.out.println(\"ArithmeticException: \" + e.getMessage()); } } public static void throwTest(int a, int b) throws ArithmeticException{ System.out.println(\"throw a/b: \"+ a/b); }\n}\n<br><br>throw와 throws는 큰 차이가 있다.\nthrow는 개발자가 직접 예외를 발생시키고싶을 떄 사용하는 것이다.\n주로 RuntimeException처리를 위해 사용한다.<br>**checkedException에서도 사용이 가능하다.<br>throw new IOException(\"IO Exception occurred\");\n<br>사용예제<br>public class ThrowTest { public static void main(String[] args) { int n1, n2; n1=12; n2=0; try { throwTest(n1, n2); } catch (ArithmeticException e) { // n1/n2 라면 발생했을 것 System.out.println(\"ArithmeticException: \" + e.getMessage()); } } public static void throwTest(int a, int b) throws ArithmeticException{ throw new ArithmeticException(); }\n}\n<br>해당 코드의 익셉션 메세지는 null 로 뜨게 된다.\nthrow는 Exception을 던질 때, 예외 내용을 함께 던져 주지 않기 때문이다.\n그래서 개발자가 Exception을 따로 커스터마이징해서 만들고, 그 안에 메세지를 넣어서 던져주는 방식이다.<br><br>\n<br>\nCheckedException =&gt; try ~ catch 문, throws(의존관계) 로 처리! <br>\nUnCheckedException(RuntimeException) =&gt; 기본적으로 복구 불가능한 예외(발생시 런타임 중지)로, CheckedExceptoin이어도 더 구체적인 UnCheckedException으로 발생시켜! throw로 exception을 던지고, ExceptionHandler로 처리! <br>\n언체크드익셉션(런타입익셉션) -&gt; 기본적으로 복구 불가능한 예외(발생시 런타임 중지)로, 체크드익셉션이어도 더 구체적인 언체크드익셉션으로 발생시켜 쓰로우로 익셉션을 던지고, 익셉션핸들러로 처리 <br>","aliases":[],"tags":[],"headers":[{"heading":"예외처리(Exception)","level":1,"id":"예외처리(Exception)"},{"heading":"0. 에러 메세지로 부터 정보를 받는 메서드","level":3,"id":"0._에러_메세지로_부터_정보를_받는_메서드"},{"heading":"1. 체크 예외(Checked Exception)와 언체크 예외(UnChecked Exception)","level":3,"id":"1.__체크_예외(Checked_Exception)와_언체크_예외(UnChecked_Exception)"},{"heading":"2. 예외처리 방법 3가지","level":3,"id":"2._예외처리_방법_3가지"},{"heading":"1. try~catch : 다른 작업 흐름으로 유도한다. checkedException으로 처리","level":4,"id":"1._try~catch__다른_작업_흐름으로_유도한다._checkedException으로_처리"},{"heading":"2. throws~ : 호출한 쪽(부모)에게 예외 처리를 위힘한다.","level":4,"id":"2._throws~__호출한_쪽(부모)에게_예외_처리를_위힘한다."},{"heading":"3. throw~ : 명확한 의미의 예외로 바로처리, 개발자들이 비즈니스 로직에서 처리하는 방식","level":4,"id":"3._throw~__명확한_의미의_예외로_바로처리,_개발자들이_비즈니스_로직에서_처리하는_방식"},{"heading":"1. try-catch","level":2,"id":"1._try-catch"},{"heading":"2. throws","level":2,"id":"2._throws"},{"heading":"3. throw","level":2,"id":"3._throw"},{"heading":"결론","level":3,"id":"결론"}],"backlinks":[],"links":["짧은-키워드/예외처리(exception).html#예외처리(Exception)","짧은-키워드/예외처리(exception).html#0._에러_메세지로_부터_정보를_받는_메서드","짧은-키워드/예외처리(exception).html#1.__체크_예외(Checked_Exception)와_언체크_예외(UnChecked_Exception)","짧은-키워드/예외처리(exception).html#2._예외처리_방법_3가지","짧은-키워드/예외처리(exception).html#1._try~catch__다른_작업_흐름으로_유도한다._checkedException으로_처리","짧은-키워드/예외처리(exception).html#2._throws~__호출한_쪽(부모)에게_예외_처리를_위힘한다.","짧은-키워드/예외처리(exception).html#3._throw~__명확한_의미의_예외로_바로처리,_개발자들이_비즈니스_로직에서_처리하는_방식","짧은-키워드/예외처리(exception).html#1._try-catch","짧은-키워드/예외처리(exception).html#2._throws","짧은-키워드/예외처리(exception).html#3._throw","짧은-키워드/예외처리(exception).html#결론"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/예외처리(exception).html","pathToRoot":"..","createdTime":1747810416612,"modifiedTime":1747810416616,"sourceSize":4242,"sourcePath":"짧은 키워드/예외처리(Exception).md","exportPath":"짧은-키워드/예외처리(exception).html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/오버로딩-&-오버라이딩.html":{"title":"오버로딩 &amp; 오버라이딩","icon":"","description":"<br><br><br>- 컴파일 다형성\n- 이름이 같지만, 매개변수의 타입/개수/순서 를 다르게 정의하여 사용하는 방법\n- 어떤 메서드가 호출될지 컴파일 시점에서 결정\n- 코드를 직관적이게 만드는데 사용\n<br><br>- 런타임 다형성\n- 부모클래스 또는 인터페이스에 정의된 메서드를 하위 클래스에서 재정의하여 사용하는 방법\n- 어떤 메서드가 호출될지 런타임 시점에 결정된다.\n<br>Map&lt;String, Integer&gt; map1 = new HashMap&lt;&gt;();\nMap&lt;String, Integer&gt; map2 = new TreeMap&lt;&gt;();\n<br>해당 형태로 map1 / 2를 구현했다면.\n객체 타입은 각각 HashMap/TreeMap 이 되며,\n변수 타입은 모두 Map이 된다.\n- 즉 map1.add / map2.add 등 Map인터페이스가 가진 함수만을 사용할 수 있으며,\nHashMap이나 TreeMap가 가진 고유메서드는 사용할 수 없다.\n하지만, 오버라이딩(런타임 다형성)으로 재정의한 각각의 메서드로 해당 동작이\n구현체의 특성에 맞게 실행되게 된다.<br>","aliases":[],"tags":[],"headers":[{"heading":"오버로딩 & 오버라이딩","level":1,"id":"오버로딩 &amp; 오버라이딩"},{"heading":"오버로딩","level":2,"id":"오버로딩"},{"heading":"오버라이딩","level":2,"id":"오버라이딩"}],"backlinks":[],"links":["짧은-키워드/오버로딩-&-오버라이딩.html#오버로딩 &amp; 오버라이딩","짧은-키워드/오버로딩-&-오버라이딩.html#오버로딩","짧은-키워드/오버로딩-&-오버라이딩.html#오버라이딩"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/오버로딩-&-오버라이딩.html","pathToRoot":"..","createdTime":1747808310371,"modifiedTime":1747808310392,"sourceSize":1112,"sourcePath":"짧은 키워드/오버로딩 & 오버라이딩.md","exportPath":"짧은-키워드/오버로딩-&-오버라이딩.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/젠킨스의-간단한-설명.html":{"title":"젠킨스의 간단한 설명","icon":"","description":"<br><br><br>- 젠킨스는 지속적 통합(CI)및 지속적 배포(CD)도구로, 개발 프로세스의 빌드, 테스트, 배포 등을 자동화하고 관리해주는 도구이다.\n<br><br>\n<br>개발자들이 작성한 코드를 중앙 저장소에 자주 통합하고, 자동화된 빌드와\n테스트를 통해 문제를 빠르게 발견하고 해결할 수 있게 해주는것.\n<br><br>\n<br>모든 변경사항을 자동화된 테스트와 빌드를 거친 후 실제 서버에 자동으로\n배포하는 기술. ( 현제 HF서비스에서는 ArgoCD를 사용하여 진행한다. )\n<br><br><br><br>\n<br>이러한 구조를 통해 다양한 환경에서 동시에 빌드와 테스트를 수행할 수 있으며,\n부하 분삭 및 확장성을 제공한다.\n<br><br>\n<br>젠킨스는 소스코드관리(SCM)시스템과 통합하여 변경사항이 발견될때\n자동으로 빌드 및 테스트를 실행할 수 있다.\n웹훅이나 폴링 방식을 사용하여 scm시스템에서 변경사항을 감지하고\n해당작업을 트리거한다.\n<br><br>\n<br>젠킨스는 빌드 및 테스트작업이 완료되면 해당결과와 로그를 저장한다.\n이를 통해 빌드 실패의 원인을 찾거나 테스트 결과를 검토할수 있다.\n<br><br>\n<br>젠킨스는 빌드, 테스트 및 배포 과정에서 발생하는 로그와 메트릭을 수집하고\n분석하여 성능문제, 장애, 최적화 포인트 등을 식별할 수 있다.\n<br><br><br>\n<br>\n개발자가 소스코드 변경사항을 SCM 시스템에 푸시한다. <br>\n젠킨스는 웹훅이나 폴링 방식을 통해 변경사항을 감지하고 Jenkinsfile에 정의된 파이프라인을 실행한다. <br>\n젠킨스는 마스터노드에서 슬레이브 노드로 작업을 할당하고 슬레이브 노드에서 빌드, 테스트 , 배포 작업을 수행한다. <br>\n각 단계에서 필요의 경우, 플러그인을 사용하여 다양한 도구와 통합하여작업을 수행할 수 있다. <br>\n작업이 완료되면 젠킨스는 결과와 로그를 저장하고 개발자에게 알림을 전송한다. <br>","aliases":[],"tags":[],"headers":[{"heading":"젠킨스의 간단한 설명","level":1,"id":"젠킨스의 간단한 설명"},{"heading":"젠킨스(Jenkins)는 정확히 무엇을 도와주는 녀석일까?","level":2,"id":"젠킨스(Jenkins)는_정확히_무엇을_도와주는_녀석일까?"},{"heading":"CI(Continuous Integration) 지속적인 통합","level":3,"id":"CI(Continuous_Integration)_지속적인_통합"},{"heading":"CD(Continuous Deployment) 지속적인 배포","level":3,"id":"CD(Continuous_Deployment)_지속적인_배포"},{"heading":"젠킨스의 주요 기능","level":2,"id":"젠킨스의_주요_기능"},{"heading":"1. 젠킨스는 마스터노드와 슬레이브노드로 구성된다","level":2,"id":"1._젠킨스는_마스터노드와_슬레이브노드로_구성된다"},{"heading":"2. SCM트리거 및 웹훅","level":2,"id":"2._SCM트리거_및_웹훅"},{"heading":"3. 결과 및 로그저장","level":2,"id":"3._결과_및_로그저장"},{"heading":"4. 로그 및 메트릭 수집 및 분석","level":2,"id":"4._로그_및_메트릭_수집_및_분석"},{"heading":"젠킨스의 동작원리","level":2,"id":"젠킨스의_동작원리"}],"backlinks":[],"links":["짧은-키워드/젠킨스의-간단한-설명.html#젠킨스의 간단한 설명","짧은-키워드/젠킨스의-간단한-설명.html#젠킨스(Jenkins)는_정확히_무엇을_도와주는_녀석일까?","짧은-키워드/젠킨스의-간단한-설명.html#CI(Continuous_Integration)_지속적인_통합","짧은-키워드/젠킨스의-간단한-설명.html#CD(Continuous_Deployment)_지속적인_배포","짧은-키워드/젠킨스의-간단한-설명.html#젠킨스의_주요_기능","짧은-키워드/젠킨스의-간단한-설명.html#1._젠킨스는_마스터노드와_슬레이브노드로_구성된다","짧은-키워드/젠킨스의-간단한-설명.html#2._SCM트리거_및_웹훅","짧은-키워드/젠킨스의-간단한-설명.html#3._결과_및_로그저장","짧은-키워드/젠킨스의-간단한-설명.html#4._로그_및_메트릭_수집_및_분석","짧은-키워드/젠킨스의-간단한-설명.html#젠킨스의_동작원리"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/젠킨스의-간단한-설명.html","pathToRoot":"..","createdTime":1747810701182,"modifiedTime":1747810701185,"sourceSize":2469,"sourcePath":"짧은 키워드/젠킨스의 간단한 설명.md","exportPath":"짧은-키워드/젠킨스의-간단한-설명.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/컨테이너란-무엇일까.html":{"title":"컨테이너란 무엇일까?","icon":"","description":"<br><br>\n<br>애플리케이션을 실행하는데 필요한 모든 구성 요소와 기능을 갖춘 소프트웨어이다.\n<br>전체 실행(runtime)환경에서 애플리케이션을 패키징하고 격리할 수 있는 기술이다.\n<br>\n<br>\n컨테이너화 된 애플리케이션은 환경(개발/테스트/프로덕션)에 쉽게 이동할 수 있다. <br>\n컨테이너 파이프라인에 보안을 구축하고 인프라를 보호하여 컨테이너의 안정성, 확장성, 신뢰성을 보장할 수 있다. <br>\n일관된 행동과 기능으로, 퍼블릭/프라이빗/클라우드 간에 쉽게 이동이 가능하다. <br><br>\n<br>담당 영역을 분리하여 개발 팀과 운영 팀간의 충돌을 줄일 수 있다.\n<br>오픈기술을 기반으로 하기 때문에, 최신 기술을 활용하여 다양하고 강력한 기술의 제품을 채택할 수 있다.\nex) docker / k8s 등등\n<br>클라우드 네이티브 개발 방식에 필요한 기반 기술을 제공한다.\n<br><br>\n<br>전사적으로 배포를 관리할 수 있는 방법이다.\n<br>k8s(쿠버네티스)는 컨테이너 작업을 자동화하는 오픈소스 플랫폼이다.\n<br>컨테이너화 된 애플리케이션을 배포하고 확장하는데 수동 프로세스를 필요로 하지 않는다.\n<br><br>docker는 전통적인 LXC와 다르다. docker도 처음에는 LXC기반으로 개발되었지만 이후, 이러한 종속관계에서 벗어났다.\nLXC는 경량/가상화 기술은 뛰어났지만 사용자환경은 그에 미치지 못햇다.\n하지만 docker는 컨테이너를 실행하는 것 이상의 다양한 생성/구축/이미지전송 등의 프로세스 관리를 용이하게 해준다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"컨테이너란 무엇일까?","level":1,"id":"컨테이너란 무엇일까?"},{"heading":"장점","level":2,"id":"장점"},{"heading":"컨테이너 오케스트레이션이란?","level":2,"id":"컨테이너_오케스트레이션이란?"},{"heading":"Docker와 Linux Container 의 차이?","level":2,"id":"Docker와_Linux_Container_의_차이?"}],"backlinks":[],"links":["짧은-키워드/컨테이너란-무엇일까.html#컨테이너란 무엇일까?","짧은-키워드/컨테이너란-무엇일까.html#장점","짧은-키워드/컨테이너란-무엇일까.html#컨테이너_오케스트레이션이란?","짧은-키워드/컨테이너란-무엇일까.html#Docker와_Linux_Container_의_차이?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/컨테이너란-무엇일까.html","pathToRoot":"..","createdTime":1747810659195,"modifiedTime":1747810659238,"sourceSize":1786,"sourcePath":"짧은 키워드/컨테이너란 무엇일까.md","exportPath":"짧은-키워드/컨테이너란-무엇일까.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/쿠버네티스의-매니페스트-파일이란.html":{"title":"쿠버네티스의 매니페스트 파일이란?","icon":"","description":"<br><br>\n<br>쿠버네티스는 클러스터 안에서 컨테이너 애플리케이션이나 네트워크 설정, 배치 실행을 하는 Job등\n리소스를 작성한다. 이와 같은 구체적인 설정 정보를 파일로 관리하는데,\n이것이 매니페스트파일(manifest file)이라고 한다.\n<br>JSON이나 YALM 파일로 작성되며, 오브젝트를 생성하기 위해 필요한 파일이기도 하다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"쿠버네티스의 매니페스트 파일이란?","level":1,"id":"쿠버네티스의 매니페스트 파일이란?"}],"backlinks":[],"links":["짧은-키워드/쿠버네티스의-매니페스트-파일이란.html#쿠버네티스의 매니페스트 파일이란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/쿠버네티스의-매니페스트-파일이란.html","pathToRoot":"..","createdTime":1747810746298,"modifiedTime":1747810746306,"sourceSize":468,"sourcePath":"짧은 키워드/쿠버네티스의 매니페스트 파일이란.md","exportPath":"짧은-키워드/쿠버네티스의-매니페스트-파일이란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/현재-hf서비스의-cicd과정.html":{"title":"현재 HF서비스의 CI/CD과정","icon":"","description":"<br><br><br> local브랜치에서 작업 후 각(dev/stg/prod)프로젝트로 소스를 통합(merge)한다.\n<br><br>jar, 메니페스트 file 등 소스,배포에 필요한 파일들 이미지 화\n<br><br> Jenkin에서 이미지화된 배포에 필요한 파일,소스들을 ArgoCD로 Pull한다.\n<br><br> Jenkins에서 받은 이미지파일과 매니패스트파일을 기반으로 실제 서버에 배포한다.\n<br><br><br><br><img alt=\"Pasted image 20240531162124.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531162124.png\" target=\"_self\"><br><br><br><br><br> local브랜치에서 작업 후 각(dev/stg/prod)프로젝트로 소스를 통합(merge)한다.\n<br><br>jar, 메니페스트 file 등 소스,배포에 필요한 파일들 이미지 화\n<br><br> Jenkin에서 이미지화된 배포에 필요한 파일,소스들을 ArgoCD로 Pull한다.\n<br><br> Jenkins에서 받은 이미지파일과 매니패스트파일을 기반으로 실제 서버에 배포한다.\n<br><br><br><br><img alt=\"Pasted image 20240531162124.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531162124.png\" target=\"_self\"><br><br><br><br><img alt=\"Pasted image 20240722180706.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240722180706.png\" target=\"_self\"><br>","aliases":[],"tags":[],"headers":[{"heading":"현재 HF서비스의 CI/CD과정","level":1,"id":"현재 HF서비스의 CI/CD과정"},{"heading":"1. Git에서 Commit / push하여 소스통합","level":2,"id":"1._Git에서_Commit_/_push하여_소스통합"},{"heading":"2. Jenkins에서 Git 소스 Build,Test&Publish 후 이미지화 (CI)","level":2,"id":"2._Jenkins에서_Git_소스_Build,Test&Publish_후_이미지화_(CI)"},{"heading":"3. Docker에서 이미지 정보 받은 후 ArgoCD로 이미지 Pull","level":2,"id":"3._Docker에서_이미지_정보_받은_후_ArgoCD로_이미지_Pull"},{"heading":"4. ArgoCD로 이미지파일 K8S에 배포 (CD)","level":2,"id":"4._ArgoCD로_이미지파일_K8S에_배포_(CD)"},{"heading":"5. K8S(쿠버네티스)에서 이미지파일 Docker를 통해 실행(서버실행)","level":2,"id":"5._K8S(쿠버네티스)에서_이미지파일_Docker를_통해_실행(서버실행)"},{"heading":"각 과정에서 오류 및 예외 사항들을 찾고 대응 할 수 있도록","level":3,"id":"각_과정에서_오류_및_예외_사항들을_찾고_대응_할_수_있도록"},{"heading":"로그를 제공한다.","level":3,"id":"로그를_제공한다."},{"heading":"elastic 에서도 동작중인 서버의 모든 로그를 검색, 필터링 할 수 있다. 하나의 trace_id로 묶인 트렌젝션 단위를 기준으로 오류를 찾고 대응할 수 있다.","level":4,"id":"elastic_에서도_동작중인_서버의_모든_로그를_검색,_필터링_할_수_있다._하나의_trace_id로_묶인_트렌젝션_단위를_기준으로_오류를_찾고_대응할_수_있다."},{"heading":"현재 HF서비스의 CICD과정","level":1,"id":"현재_HF서비스의_CICD과정"},{"heading":"1. Git에서 Commit / push하여 소스통합","level":2,"id":"1._Git에서_Commit_/_push하여_소스통합"},{"heading":"2. Jenkins에서 Git 소스 Build,Test&Publish 후 이미지화 (CI)","level":2,"id":"2._Jenkins에서_Git_소스_Build,Test&Publish_후_이미지화_(CI)"},{"heading":"3. Docker에서 이미지 정보 받은 후 ArgoCD로 이미지 Pull","level":2,"id":"3._Docker에서_이미지_정보_받은_후_ArgoCD로_이미지_Pull"},{"heading":"4. ArgoCD로 이미지파일 K8S에 배포 (CD)","level":2,"id":"4._ArgoCD로_이미지파일_K8S에_배포_(CD)"},{"heading":"5. K8S(쿠버네티스)에서 이미지파일 Docker를 통해 실행(서버실행)","level":2,"id":"5._K8S(쿠버네티스)에서_이미지파일_Docker를_통해_실행(서버실행)"},{"heading":"각 과정에서 오류 및 예외 사항들을 찾고 대응 할 수 있도록","level":3,"id":"각_과정에서_오류_및_예외_사항들을_찾고_대응_할_수_있도록"},{"heading":"로그를 제공한다.","level":3,"id":"로그를_제공한다."},{"heading":"elastic 에서도 동작중인 서버의 모든 로그를 검색, 필터링 할 수 있다. 하나의 trace_id로 묶인 트렌젝션 단위를 기준으로 오류를 찾고 대응할 수 있다.","level":4,"id":"elastic_에서도_동작중인_서버의_모든_로그를_검색,_필터링_할_수_있다._하나의_trace_id로_묶인_트렌젝션_단위를_기준으로_오류를_찾고_대응할_수_있다."},{"heading":"Hello CI-CD","level":1,"id":"Hello_CI-CD"}],"backlinks":[],"links":["짧은-키워드/현재-hf서비스의-cicd과정.html#현재 HF서비스의 CI/CD과정","짧은-키워드/현재-hf서비스의-cicd과정.html#1._Git에서_Commit_/_push하여_소스통합","짧은-키워드/현재-hf서비스의-cicd과정.html#2._Jenkins에서_Git_소스_Build,Test&Publish_후_이미지화_(CI)","짧은-키워드/현재-hf서비스의-cicd과정.html#3._Docker에서_이미지_정보_받은_후_ArgoCD로_이미지_Pull","짧은-키워드/현재-hf서비스의-cicd과정.html#4._ArgoCD로_이미지파일_K8S에_배포_(CD)","짧은-키워드/현재-hf서비스의-cicd과정.html#5._K8S(쿠버네티스)에서_이미지파일_Docker를_통해_실행(서버실행)","짧은-키워드/현재-hf서비스의-cicd과정.html#각_과정에서_오류_및_예외_사항들을_찾고_대응_할_수_있도록","짧은-키워드/현재-hf서비스의-cicd과정.html#로그를_제공한다.","짧은-키워드/현재-hf서비스의-cicd과정.html#elastic_에서도_동작중인_서버의_모든_로그를_검색,_필터링_할_수_있다._하나의_trace_id로_묶인_트렌젝션_단위를_기준으로_오류를_찾고_대응할_수_있다.","짧은-키워드/현재-hf서비스의-cicd과정.html#현재_HF서비스의_CICD과정","짧은-키워드/현재-hf서비스의-cicd과정.html#1._Git에서_Commit_/_push하여_소스통합","짧은-키워드/현재-hf서비스의-cicd과정.html#2._Jenkins에서_Git_소스_Build,Test&Publish_후_이미지화_(CI)","짧은-키워드/현재-hf서비스의-cicd과정.html#3._Docker에서_이미지_정보_받은_후_ArgoCD로_이미지_Pull","짧은-키워드/현재-hf서비스의-cicd과정.html#4._ArgoCD로_이미지파일_K8S에_배포_(CD)","짧은-키워드/현재-hf서비스의-cicd과정.html#5._K8S(쿠버네티스)에서_이미지파일_Docker를_통해_실행(서버실행)","짧은-키워드/현재-hf서비스의-cicd과정.html#각_과정에서_오류_및_예외_사항들을_찾고_대응_할_수_있도록","짧은-키워드/현재-hf서비스의-cicd과정.html#로그를_제공한다.","짧은-키워드/현재-hf서비스의-cicd과정.html#elastic_에서도_동작중인_서버의_모든_로그를_검색,_필터링_할_수_있다._하나의_trace_id로_묶인_트렌젝션_단위를_기준으로_오류를_찾고_대응할_수_있다.","짧은-키워드/현재-hf서비스의-cicd과정.html#Hello_CI-CD"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/현재-hf서비스의-cicd과정.html","pathToRoot":"..","createdTime":1747810752183,"modifiedTime":1747810825782,"sourceSize":2285,"sourcePath":"짧은 키워드/현재 HF서비스의 CICD과정.md","exportPath":"짧은-키워드/현재-hf서비스의-cicd과정.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240531162124.png","사진-및-문서/pasted-image-20240722180706.png"]},"짧은-키워드/app-service-api-통신-플로우.html":{"title":"APP - SERVICE - API 통신 플로우","icon":"","description":"<br><br>투자신청기록쪽 api -&gt; API레스폰스모델\n웹플럭스(비동기 기반)을 사용해서 service프로젝트와 (내부)통신한다.<br>내부통신을 위해 필요한 헤더, url등을 생성해야하기 때문에 senderutils 클래스를 공통(빈)을 정의해서 만들어 통신.<br>retrieve ** 중요\n웹클라이언트 클래스 객체를 사용해서 uri 콘텐츠 등등 헤더와 바디(데이타)를 정의한다<br>","aliases":[],"tags":[],"headers":[{"heading":"APP - SERVICE - API 통신 플로우","level":1,"id":"APP - SERVICE - API 통신 플로우"}],"backlinks":[],"links":["짧은-키워드/app-service-api-통신-플로우.html#APP - SERVICE - API 통신 플로우"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/app-service-api-통신-플로우.html","pathToRoot":"..","createdTime":1747810335402,"modifiedTime":1747810335419,"sourceSize":479,"sourcePath":"짧은 키워드/APP - SERVICE - API 통신 플로우.md","exportPath":"짧은-키워드/app-service-api-통신-플로우.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/argo-cd란.html":{"title":"Argo CD란?","icon":"","description":"<br><br>- GitOps를 구현하기 위한 도구 중 하나로, k8s애플리케이션의 자동배포(CD)를 위한 오픈소스 도구 이다.\nk8s클러스터에 배포된 애플리케이션의 CD를 담당한다.\n- Git저장소에서 변경사항을 감지하여 자동으로 k8s클러스터에 애플리케이션을 배포한다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Argo CD란?","level":1,"id":"Argo CD란?"}],"backlinks":[],"links":["짧은-키워드/argo-cd란.html#Argo CD란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/argo-cd란.html","pathToRoot":"..","createdTime":1747810740457,"modifiedTime":1747810740463,"sourceSize":347,"sourcePath":"짧은 키워드/Argo CD란.md","exportPath":"짧은-키워드/argo-cd란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/batch-용어-설명.html":{"title":"Batch 용어 설명","icon":"","description":"<br><br><br>\n<br>독립적으로 실행할 수 있는 고유하며 순서가 지정된 스텝의 목록\n<br>애플리케이션 실행시 Job으로 인식되는 bean들이 자동으로 실행된다.\n<br>1개 이상의 Step을 포함하여 원하는 동작을 실행시킬 수 있다\n<br>배치 처리 과정 중 전체 계층의 최상단에 위치도\n<br><br>\n<br>job의 구성요소로 자체적인 입력/출력/처리를 가질 수 있다.\n<br>tasklet 또는 Chunk기반 처리를 포함하여 step안에서 수행될 기능들을 명시할 수 있다.\n<br>트렌젝션은 step내에서 이루어진다. 때문에, 독립되도록 의도적으로 설계된 것이다.\n<br><br>\n<br>Step의 작업 단위를 Tasklet으로 정의\n<br>주로 간단한 작업(단일 데이터 처리, 파일 삭제 등)에 적합하다.\n<br>@Component\npublic class SimpleTasklet implements Tasklet { @Override public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception { System.out.println(\"Tasklet 방식으로 작업 수행\"); return RepeatStatus.FINISHED; }\n} @Bean\npublic Step step1(StepBuilderFactory stepBuilderFactory) { return stepBuilderFactory.get(\"step1\") .tasklet(new SimpleTasklet()) .build();\n} @Bean\npublic Job job(JobBuilderFactory jobBuilderFactory, Step step1) { return jobBuilderFactory.get(\"job\") .start(step1) .build();\n} <br><br>\n<br>대량 데이터를 일정 크기(chunk)로 나누어 처리한다.\n<br>Reader / Processor / Writer로 구성된다.\n<br>@Bean\npublic FlatFileItemReader&lt;String&gt; reader() { return new FlatFileItemReaderBuilder&lt;String&gt;() .name(\"fileReader\") .resource(new ClassPathResource(\"input.txt\")) .lineMapper(new DefaultLineMapper&lt;String&gt;() { { setLineTokenizer(new DelimitedLineTokenizer()); setFieldSetMapper(new PassThroughFieldSetMapper()); } }) .build();\n} @Bean\npublic ItemProcessor&lt;String, String&gt; processor() { return item -&gt; \"Processed \" + item;\n} @Bean\npublic FlatFileItemWriter&lt;String&gt; writer() { return new FlatFileItemWriterBuilder&lt;String&gt;() .name(\"fileWriter\") .resource(new FileSystemResource(\"output.txt\")) .lineAggregator(new PassThroughLineAggregator&lt;&gt;()) .build();\n} @Bean\npublic Step step(StepBuilderFactory stepBuilderFactory) { return stepBuilderFactory.get(\"step\") .&lt;String, String&gt;chunk(10) .reader(reader()) .processor(processor()) .writer(writer()) .build();\n} @Bean\npublic Job job(JobBuilderFactory jobBuilderFactory, Step step) { return jobBuilderFactory.get(\"job\") .start(step) .build();\n} <br><br>\n<br>잡 리스너를 이용해서 스프링batch 생명주기의 여러로직을 추가할 수 있다.\nex) beforeJob , afterJob 등등\n<br><br>=&gt; 스케줄러는 Jenkins에서 SSH스크립트를 통해 주기적으로 실행한다. Controller에 POST주소가 맵핑되어있는 이유는 테스트로 직접 실행하기 위함이다.<br>","aliases":[],"tags":[],"headers":[{"heading":"Batch 용어 설명","level":1,"id":"Batch 용어 설명"},{"heading":"Job","level":3,"id":"Job"},{"heading":"Step","level":3,"id":"Step"},{"heading":"tasklet","level":3,"id":"tasklet"},{"heading":"Chunk","level":3,"id":"Chunk"},{"heading":"Job Listener","level":3,"id":"Job_Listener"},{"heading":"hfbatJobScheduler(스케줄러)가 Job으로 등록되어있는 녀석들을 순차적으로 실행될할 때 , 누가 트리거 역할을 하는지?","level":1,"id":"hfbatJobScheduler(스케줄러)가_Job으로_등록되어있는_녀석들을_순차적으로_실행될할_때_,_누가_트리거_역할을_하는지?"}],"backlinks":[],"links":["짧은-키워드/batch-용어-설명.html#Batch 용어 설명","짧은-키워드/batch-용어-설명.html#Job","짧은-키워드/batch-용어-설명.html#Step","짧은-키워드/batch-용어-설명.html#tasklet","짧은-키워드/batch-용어-설명.html#Chunk","짧은-키워드/batch-용어-설명.html#Job_Listener","짧은-키워드/batch-용어-설명.html#hfbatJobScheduler(스케줄러)가_Job으로_등록되어있는_녀석들을_순차적으로_실행될할_때_,_누가_트리거_역할을_하는지?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/batch-용어-설명.html","pathToRoot":"..","createdTime":1747810294778,"modifiedTime":1747810320081,"sourceSize":3298,"sourcePath":"짧은 키워드/Batch 용어 설명.md","exportPath":"짧은-키워드/batch-용어-설명.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/bean이란-무엇인가.html":{"title":"Bean이란 무엇인가?","icon":"","description":"<br><br>- Spring컨테이너에 의해 관리되는 재사용 가능한 컴포넌트이다.\n즉 스프링이 관리하는 자바 객체 이다.\n- getter/setter를 포함한다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Bean이란 무엇인가?","level":1,"id":"Bean이란 무엇인가?"}],"backlinks":[],"links":["짧은-키워드/bean이란-무엇인가.html#Bean이란 무엇인가?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/bean이란-무엇인가.html","pathToRoot":"..","createdTime":1747809839122,"modifiedTime":1747809839141,"sourceSize":204,"sourcePath":"짧은 키워드/Bean이란 무엇인가.md","exportPath":"짧은-키워드/bean이란-무엇인가.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/cnd(content-delivery-network)란.html":{"title":"CND(Content Delivery Network)란??","icon":"","description":"<br><br>\n<br>\n웹서버가 클라이언트의 요청에 의해 웹페이지에 대한 응답 결과를 돌려줬을때,\n클라이언트의 화면에는 랜더링해야하는 수많은 이미지가 필요하다.\n이 이미지를 웹서버가 전부 주려면 데이터의 용량이 무거워서 서버에 부하가 걸리게 되는데,,\n따라서 웹서버는 이미지를 대신 건내주는 CDN에게 요청한다는 개념이다. <br>\nCDN은 일반적으로 용량이 큰 컨텐츠 데이터를 빠른속도로 제공하기 위해 사용자와 가까운곳에 분산되어 있는 데이터 저장 서버이다. <br><br>\n<br>push CDN : 서버에서 컨텐츠가 업로드 되거나, 변경되었을 때 모두 반영하는 방식\n<br>pull CDN : 클라이언트가 요청할 때마다 컨텐츠가 CDN에 새로 저장되는 방식\n<br>두 방식 모두 장단점이 있다.\nPush방식은 모든 컨텐츠를 갖고 있기 때문에 웹서버에 요청할 일이 없지만 유지하는데 필요한 용량과 비용이 크고,\nPull방식은 요청이 들어왔을 때 컨텐츠가 있다면 즉각 응답하지만, 그렇지 않을때 웹서버에 요청해야하는 부담이 있다.<br>","aliases":[],"tags":[],"headers":[{"heading":"CND(Content Delivery Network)란??","level":1,"id":"CND(Content Delivery Network)란??"},{"heading":"동작 방식","level":3,"id":"동작_방식"}],"backlinks":[],"links":["짧은-키워드/cnd(content-delivery-network)란.html#CND(Content Delivery Network)란??","짧은-키워드/cnd(content-delivery-network)란.html#동작_방식"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/cnd(content-delivery-network)란.html","pathToRoot":"..","createdTime":1747810956864,"modifiedTime":1747810956868,"sourceSize":1218,"sourcePath":"짧은 키워드/CND(Content Delivery Network)란.md","exportPath":"짧은-키워드/cnd(content-delivery-network)란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/database-정규화-과정.html":{"title":"DataBase 정규화  과정","icon":"","description":"<br><br><br>\n<br>테이블 간에 중복된 데이터를 허용하지 않는다는 기본 목표를 갖는다. <br>중복된 데이터를 허용하지 않음으로 써 무결성 을 유지할 수 있다.\n<br><br>\n<br>DB의 저장 용량 또한 줄일 수 있다.\n<br>데이터 테이블을 분해하여 이상현상이 발생할 가능성을 줄이고, 확장/수정시 구조 변경을\n최소화 할 수 있다.\n<br><br>\n<br>\n릴레이션의 분해로 인해 Join연산이 늘어날 수 있다. <br>\n쿼리시 응답시간이 느려질 수 있다. 데이터의 중복속성을 최대한 제거하는 것 이기때문에, 속성이 하나의 테이블에 집약되므로\n데이터 용량이 최소화 되어 상황에따라 처리속도가 빨라질 수도 있고, 느려질 수도 있다.\n만약 조인이 만연하여 속도저하가 발생하게 된다면 반정규화를 통해 속도를 개선할 수 있다. <br><br>\n<br>테이블의 컬럼이 원자값(하나의 값)을 갖도록 테이블을 분해하는 것이다.\n<br>각 컬럼의 순서가 상관이 없어야한다.\n<br>하나의 컬럼은 같은 종류의 타입을 가져야 한다.\n<img alt=\"Pasted image 20240531103441.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531103441.png\" target=\"_self\">\n원자값을 갖도록 컬럼을 나눈다.\n<img alt=\"Pasted image 20240531103549.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531103549.png\" target=\"_self\">\n<br><br>\n<br>제 1 정규화를 진행한 테이블에 대해 \"완전 함수 종속\"을 만족하도록 테이블을 분해하는 것이다.\n<br>여기서 완전 함수 종속이란, 기본키의 부분집합이 결정자가 되어선 안된다는 것을 의미한다.\n즉, 부분적 종속을 없애는 것이다.\n<br><img alt=\"Pasted image 20240531105228.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531105228.png\" target=\"_self\">\n해당 테이블의 기본키는 (학생번호, 강좌이름)으로 복합키 이다.\n성적은 (학생번호, 강좌이름)인 기본키가 결정하지만,\n강의실은 기본키의 부분집합인 강좌이름이 결정하게 된다.<br>즉, 부분집합이 결정자가 되지 않도록 테이블을 분리시키는 것으로 완전 함수 종속을 만족시킬 수 있다.\n<img alt=\"Pasted image 20240531105241.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531105241.png\" target=\"_self\"><br><br>\n<br>제2 정규화를 진행한 테이블에 대해 \"이행적 종속\"을 없애도록 테이블을 분해하는 것이다.\n<br>여기서 이행적 종속이란 A -&gt; B , B -&gt; C 가 성립할때, A -&gt; C 가 성립되는 것을 의미한다.\n<img alt=\"Pasted image 20240531104351.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531104351.png\" target=\"_self\">\n다음의 경유 이행적 종속상태 로 말할 수 있다.\n<br>그 경우 테이블을 분리하여 데이터 변경시에 다른 데이터까지 변경되는 상황을 막을 수 있다.\n<img alt=\"Pasted image 20240531104418.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531104418.png\" target=\"_self\"><br><br>\n<br>제3 정규화를 좀 더 강화한 것이라 생각하면 된다.\n<br>BCNF정규화란 제3 정규화를 진행한 테이블에 대해 모든 결정자가 후보키가 되도록\n테이블을 분해하는 것을 말한다.\n<br><img alt=\"Pasted image 20240531104751.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531104751.png\" target=\"_self\">\n특수 수강 테이블에서 기본키는 (학생번호, 특강이름)이다. 그리고 기본키는 교수를 결정하고 있다.\n또한, 여기서 교수는 특강이름을 결정하고있다.<br>문제는 교수가 특강이름을 결정하는 결정자 이지만, 후보키가 아니다.\n그렇기 때문에 BCNF 정규화를 만족시키기 위해서는 테이블을 분해하여 아래와 같이 분리할 수 있다.<br><img alt=\"Pasted image 20240531104803.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240531104803.png\" target=\"_self\"><br><br>\n<br>컬럼값의 중복을 제거하는것이다.\n<br><br>\n<br>중복을 제거하기 위해 분해할 수 있을만큼 최대한 분해하는 것이다.\n<br><br> 그 이상 정규화를 진행하면 오히려 정규화의 단점이 더 커지기 때문이다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"DataBase 정규화 과정","level":1,"id":"DataBase 정규화  과정"},{"heading":"정규화란?","level":2,"id":"정규화란?"},{"heading":"장점","level":2,"id":"장점"},{"heading":"단점","level":2,"id":"단점"},{"heading":"제 1 정규화","level":3,"id":"제_1_정규화"},{"heading":"제 2 정규화","level":3,"id":"제_2_정규화"},{"heading":"제3 정규화","level":3,"id":"제3_정규화"},{"heading":"BCNF 정규화","level":3,"id":"BCNF_정규화"},{"heading":"제4 정규화는 다치 종속을 없애는것이다","level":3,"id":"제4_정규화는_다치_종속을_없애는것이다"},{"heading":"제5 정규화는 조인 종속을 없애는것이다.","level":3,"id":"제5_정규화는_조인_종속을_없애는것이다."},{"heading":"보통 정규화는 BCNF정규화 까지만 진행하는 경우가 많다.","level":4,"id":"보통_정규화는_BCNF정규화_까지만_진행하는_경우가_많다."}],"backlinks":[],"links":["짧은-키워드/database-정규화-과정.html#DataBase 정규화  과정","짧은-키워드/database-정규화-과정.html#정규화란?","짧은-키워드/database-정규화-과정.html#장점","짧은-키워드/database-정규화-과정.html#단점","짧은-키워드/database-정규화-과정.html#제_1_정규화","짧은-키워드/database-정규화-과정.html#제_2_정규화","짧은-키워드/database-정규화-과정.html#제3_정규화","짧은-키워드/database-정규화-과정.html#BCNF_정규화","짧은-키워드/database-정규화-과정.html#제4_정규화는_다치_종속을_없애는것이다","짧은-키워드/database-정규화-과정.html#제5_정규화는_조인_종속을_없애는것이다.","짧은-키워드/database-정규화-과정.html#보통_정규화는_BCNF정규화_까지만_진행하는_경우가_많다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/database-정규화-과정.html","pathToRoot":"..","createdTime":1747810884314,"modifiedTime":1747810884386,"sourceSize":3807,"sourcePath":"짧은 키워드/DataBase 정규화  과정.md","exportPath":"짧은-키워드/database-정규화-과정.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240531103441.png","사진-및-문서/pasted-image-20240531103549.png","사진-및-문서/pasted-image-20240531105228.png","사진-및-문서/pasted-image-20240531105241.png","사진-및-문서/pasted-image-20240531104351.png","사진-및-문서/pasted-image-20240531104418.png","사진-및-문서/pasted-image-20240531104751.png","사진-및-문서/pasted-image-20240531104803.png"]},"짧은-키워드/db-connection이란-무엇일까.html":{"title":"DB Connection이란 무엇일까?","icon":"","description":"<br><br>- 커넥션이란 어플리케이션과 데이터베이스 서버간의 통신 링크를 뜻한다. 애플리케이션이 쿼리를 실행하고, 데이터를 검색하고, 데이터베이스에서 트랜젝션을 수행 할 수 있는 세션을\n설정하는데 사용된다.\n말그대로 애플리케이션과 DB를 연결하는 통신링크이며, 이가 모여있는것을 커넥션 풀 이라고 한다.\n매번 연결하고 끊고 하는것 보다 커넥션풀에 등록하는 것이 성능적인 향상을 기대할 수 있기 때문이다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"DB Connection이란 무엇일까?","level":1,"id":"DB Connection이란 무엇일까?"}],"backlinks":[],"links":["짧은-키워드/db-connection이란-무엇일까.html#DB Connection이란 무엇일까?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/db-connection이란-무엇일까.html","pathToRoot":"..","createdTime":1747810880658,"modifiedTime":1747810880662,"sourceSize":594,"sourcePath":"짧은 키워드/DB Connection이란 무엇일까.md","exportPath":"짧은-키워드/db-connection이란-무엇일까.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html":{"title":"DB의 저장 프로시저 (SP - Stored Procedure)란","icon":"","description":"<br><br>- 저장 프로시저는 각 DBMS에서 제공하는 기능으로, SQL문을 저장해놓고, 필요할 때마다 호출해서 사용하는 프로그래밍 기능이다.\n<br><br>\n<br>\nSQL의성능을 향상시킬수 있다. <br>SP를 실행하게 되면 최적화, 컴파일 단계를 거쳐, 결과가 캐시에 저장되게 되는데,\n이 후 해당 SP를 실행하게 되면 캐시에 있는것을 가져와 사용하므로 실행속도가 빠르다. <br>\n유지보수 및 재활용 측면에서 유리하다. <br>응용프로그램 내에서 직접 SQL문을 호출하지않고 SP이름을 호출하도록 설정하면\nSP파일만 수정하면 되기때문에 유지보수와 재활용 측면에서 유리하다 <br>\n보안이 강화될 수 있다. <br>사용자별로 테이블 권한을 부여하는것이 아닌, SP에만 접근 권한을 주는 방식으로 보안을 강화할 수 있다.\n실제 테이블에 접근하여 조작하는것이 위험하기 때문에 개발자에게는 SP권한만 주는 방식을 많이 사용한다. <br>또한, 일반적인 쿼리들은 Where의 조건이 조금만 달라져도, 최적화 컴파일을 다시 수행하여야 하지만,\n함수 형태의 SP로 생성하게 되면 매개변수만 변경하여 성능적인 측면을 크게 높일 수 있다.<br><br><br>1. DB에서 SP를 생성한다( 미리 작성되어있는 쿼리 모음 )\n2. SP의 리턴값을 저장하는 Entity클래스(@NamedStoredProcedureQuery어노테이션)으로 연결함.\n3. Repository에서 프로시저 객체를 생성한다. 이때, 2.에서 생성한 프로시저JPA의 파라미터를 설정한 후 execute한다.\n<br>궁금한점 : 저장 프로시저를 사용할경우 Entity는 테이블명으로 class와 연결하지 않아도 괜찮은것인가?<br>\n<br>@NamedStoredProcedureQuery어노테이션을 Entity에 적용하면 DBMS에 정의 되어있는 SP(저장 프로시저)\n와 연동하여 사용할 수 있다.\n<br><br><br>\n<br>간단히 설명하면 \"여러 쿼리를 한번에 실행하는 것\" 이다.\n<br>SQL의 Function과 비슷해 보이지만 차이가 있다.\nfunction : 클라이언트에서 처리, 리턴값 필수, 리턴값은 한개만 반환 가능\n프로시저 : 서버로 보내서 처리, 리턴값 선택, 리컨값 여러개 가능\n<br>속도면에서는 함수에 비해 프로시저가 더 빠르다.\n그렇기 때문에 프로시저같은 경우는 실행,처리를 할때 주로 사용하고, 함수는 간단한 계산이나 수치 결과를 나타낼 때 사용한다.<br><br>\n<br>하나의 요청으로 여러 SQL문을 실행 할 수 있음\n<br>네트워크 소요 시간을 줄일 수 있음(여러개의 쿼리를 처리하는 시점에서 네트워크 부하를 줄임)\n<br>보수성이 뛰어나다\n<br>개발 업무를 구분하여 개발할 수 있다.(DB관련 처리를 API처럼 만들어 사용가능)\n<br><br>\n<br>재사용성이 낮다(DB버전 별 구문/규칙과 호환성이 다르기 때문)\n<br>처리 성능이 좋지 않다(MySQL스토어드 프로그램 처리 성능이 낮다)\n<br><img alt=\"Pasted image 20240610171904.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240610171904.png\" target=\"_self\"><br>\n<br>파라미터 선언은 프로시저명() 안에서 선언하고, SQL문과 변수는 BEGIN - END 안에서 작성한다.\n<br>SELECT사용시 반드시, 조회한 컬럼의 값을 INTO로 변수 안에 넣어주어야 한다.\n<br>프로시저안에서 사용하는 SQL문은 세미콜론(;)으로 문장 끝을 맺어주어야 한다.\n<br>if, case, loop 문을 사용할 수 있다.\n<br>프로시저내에서 다른 프로시저를 호출 할 수 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"DB의 저장 프로시저 (SP - Stored Procedure)란","level":1,"id":"DB의 저장 프로시저 (SP - Stored Procedure)란"},{"heading":"사용하는 이유","level":3,"id":"사용하는_이유"},{"heading":"Spring에서의 저장 프로시저 동작원리","level":1,"id":"Spring에서의_저장_프로시저_동작원리"},{"heading":"프로시저란?","level":1,"id":"프로시저란?"},{"heading":"프로시저를 사용하는 이유","level":3,"id":"프로시저를_사용하는_이유"},{"heading":"프로시저의 단점","level":3,"id":"프로시저의_단점"}],"backlinks":[],"links":["짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html#DB의 저장 프로시저 (SP - Stored Procedure)란","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html#사용하는_이유","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html#Spring에서의_저장_프로시저_동작원리","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html#프로시저란?","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html#프로시저를_사용하는_이유","짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html#프로시저의_단점"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","pathToRoot":"..","createdTime":1747810187783,"modifiedTime":1747810843154,"sourceSize":3725,"sourcePath":"짧은 키워드/DB의 저장 프로시저 (SP - Stored Procedure)란.md","exportPath":"짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240610171904.png"]},"짧은-키워드/dispatcherservlet의-역할.html":{"title":"DispatcherServlet의 역할","icon":"","description":"<br><br>- 웹 애플리케이션 최전방에서 사용자의 요청을 접수하여 URL기주능로 요청을 처리할 controller를 찾고, 그 controller에 처리를 위임한 후, 결과를 받아서 사용자에게 처리 결과가 담긴 화면을 제공해준다.\n<br>\n<br>설정은 web.xml의 정보를 활용한다. 사용자 요청을 처리할 Controller목록과 사용자 에게 보여줄 화면을 찾는 ViewResolver가 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"DispatcherServlet의 역할","level":1,"id":"DispatcherServlet의 역할"}],"backlinks":[],"links":["짧은-키워드/dispatcherservlet의-역할.html#DispatcherServlet의 역할"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/dispatcherservlet의-역할.html","pathToRoot":"..","createdTime":1747810384731,"modifiedTime":1747810384735,"sourceSize":466,"sourcePath":"짧은 키워드/DispatcherServlet의 역할.md","exportPath":"짧은-키워드/dispatcherservlet의-역할.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/docker에-대한-간단한-설명.html":{"title":"Docker에 대한 간단한 설명","icon":"","description":"<br><br> Linux 컨테이너를 만들고 사용할 수 있도록 하는 컨테이너화 기술이다. 컨테이너를 매우 가벼운 모듈식 가상 머신처럼 다룰 수 있으며, 컨테이너를 구축, 배포, 복사, 이동 등 유연하게 사용할 수 있도록 도와준다. 애플리케이션을 클라우드에 최적화 하도록 지원한다.\n<br><br>\n<br>커널과 네임스페이스 등 Linux의 기능을 사용하여 프로세스를 분리함으로 써, 독립적으로 실행할 수 있도록 한다.\n<br>개별적으로 실행하여 인프라를 더 효과적으로 활용하고 개별시스템을 사용할 때와 동일한 보안을 유지할 수 있도록 한다.\n<br>이미지 기반 배포 모델을 제공하여, 여러 환경에서 종속 항목과 손쉽게 공유 할 수 있다.\n<br><br>\n<br>모듈성 <br>컨테이너화에 대한 docker의 접근방식은 전체 애플리케이션을 분해하지 않고도 업데이트 또는 복구를 가능하게 한다 <br>계층 및 이미지 버전제어 <br>docker의 이미지파일은 일련의 계층으로 구성되며 이러한 계층들은 단일 이미지로 결합된다.\n이러한 이미지 계층을 재사용하여 구축 속도가 빠르며, 각 계층화에는 버전 제어가 가능하다. <br>롤백 <br>롤백 기능을 제공하여 이전 이미지 버전으로 롤백이 가능하다. <br>신속한 배포 <br>이전에는 하드웨어 확보, 실행, 프로비저닝, 테스트 하는데에 몇일이 걸렸으나, docker기반의 컨테이너는 배포 시간을 몇 초로 줄일 수 있다. <br><br>\n<br>\n도커는 애플리케이션 뿐만 아니라, 실행에 필요한 시스템 환경을 모아서 컨테이너로 관리한다. 이것을 Docker Image라고 한다. <br>\n이 이미지로 만든 컨테이너는 도커가 설치된 곳이라면 어디든 똑같이 작동함을 보장한다. <br>\n개발자가 커밋할때마다, Jenkins와 같은 CI( 지속적 통합 )툴이 해당 소스를 도커 이미지로 빌드하고, 이미지 레파지토리에서 이미지를 버전별로 관리한다. <br>\n해당 이미지를 배포 하면, 독립적으로 동작하기 때문에 CD( 지속적인 배포 )또한 가능하게 된다. <br>\n이러한 특징은 MSA와도 잘 맞는데, 각각의 서비스를 컨테이너로 배포하는 것이다. <br>","aliases":[],"tags":[],"headers":[{"heading":"Docker에 대한 간단한 설명","level":1,"id":"Docker에 대한 간단한 설명"},{"heading":"docker컨테이너의 실행방식","level":2,"id":"docker컨테이너의_실행방식"},{"heading":"장점","level":3,"id":"장점"},{"heading":"Docker의 특징","level":2,"id":"Docker의_특징"}],"backlinks":[],"links":["짧은-키워드/docker에-대한-간단한-설명.html#Docker에 대한 간단한 설명","짧은-키워드/docker에-대한-간단한-설명.html#docker컨테이너의_실행방식","짧은-키워드/docker에-대한-간단한-설명.html#장점","짧은-키워드/docker에-대한-간단한-설명.html#Docker의_특징"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/docker에-대한-간단한-설명.html","pathToRoot":"..","createdTime":1747810716519,"modifiedTime":1747810716557,"sourceSize":2409,"sourcePath":"짧은 키워드/Docker에 대한 간단한 설명.md","exportPath":"짧은-키워드/docker에-대한-간단한-설명.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/dual-테이블이란.html":{"title":"Dual 테이블이란??","icon":"","description":"<br><br><br><br><br>","aliases":[],"tags":[],"headers":[{"heading":"Dual 테이블이란??","level":1,"id":"Dual 테이블이란??"},{"heading":"오라클 자체에서 제공되는 테이블","level":2,"id":"오라클_자체에서_제공되는_테이블"},{"heading":"간단하게 함수를 이용해서 계산결과값을 확인할 때 사용하는 테이블","level":2,"id":"간단하게_함수를_이용해서_계산결과값을_확인할_때_사용하는_테이블"},{"heading":"오직 한 행, 한 컬럼 만을 담고 있는 Dummy 테이블이다.","level":3,"id":"오직_한_행,_한_컬럼_만을_담고_있는_Dummy_테이블이다."}],"backlinks":[],"links":["짧은-키워드/dual-테이블이란.html#Dual 테이블이란??","짧은-키워드/dual-테이블이란.html#오라클_자체에서_제공되는_테이블","짧은-키워드/dual-테이블이란.html#간단하게_함수를_이용해서_계산결과값을_확인할_때_사용하는_테이블","짧은-키워드/dual-테이블이란.html#오직_한_행,_한_컬럼_만을_담고_있는_Dummy_테이블이다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/dual-테이블이란.html","pathToRoot":"..","createdTime":1747810896974,"modifiedTime":1747810896978,"sourceSize":249,"sourcePath":"짧은 키워드/Dual 테이블이란.md","exportPath":"짧은-키워드/dual-테이블이란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/entity와-dto를-분리해야하는-이유.html":{"title":"Entity와 DTO를 분리해야하는 이유","icon":"","description":"<br><br>- Entity와 관련된 코드들은 많은데 비해 Dto의 경우는 상대적으로 적다.\n그런 상황에서 Entity의 변경가능성은 Dto의 비해서 또 적다.\n만약 Entity를 Request나 Respons에 사용하게 된다면 변경 가능성이 높아지고,\n동시에 같이 변경되는 코드들이 늘어나기 때문에 코드 유지보수를 생각했을때 분리하는것이 옳다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Entity와 DTO를 분리해야하는 이유","level":1,"id":"Entity와 DTO를 분리해야하는 이유"}],"backlinks":[],"links":["짧은-키워드/entity와-dto를-분리해야하는-이유.html#Entity와 DTO를 분리해야하는 이유"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/entity와-dto를-분리해야하는-이유.html","pathToRoot":"..","createdTime":1747810139013,"modifiedTime":1747810139017,"sourceSize":454,"sourcePath":"짧은 키워드/Entity와 DTO를 분리해야하는 이유.md","exportPath":"짧은-키워드/entity와-dto를-분리해야하는-이유.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/equals()-와-hashcode()-재정의.html":{"title":"Equals() 와 HashCode() 재정의","icon":"","description":"<br><br>@Test\n@DisplayName(\"같은 객체를 equals 비교\")\nvoid equals() { //given Menu friedChicken = new Menu(\"후라이드치킨\", 16_000); Menu friedChicken2 = new Menu(\"후라이드치킨\", 16_000); //when &amp; then assertThat(friedChicken).isEqualTo(friedChicken2);\n}\n<br>헤당 코드와 같이 구현한다면, false를 출력한다.\n이유는 객체의 equals메서드는 주소값이 서로 다른 객체는 다른객체로 판단하기 때문이다.<br><br><br>이때, 왜 HashCode도 재정의 해야하나?<br><br><br>해당 규약으로 인하여, 서로다른 객체의 해쉬값을 통일시켜주어야 한다.","aliases":[],"tags":[],"headers":[{"heading":"Equals() 와 HashCode() 재정의","level":1,"id":"Equals() 와 HashCode() 재정의"},{"heading":"String은 equals 잘쓰잖아? => String은 String pool에서 중복생성을 막고, 같은 값을 생성한다면 재사용하기 때문~","level":4,"id":"String은_equals_잘쓰잖아?_=>_String은_String_pool에서_중복생성을_막고,_같은_값을_생성한다면_재사용하기_때문~"},{"heading":"재정의 해서, 객체가 아닌 내부 값을 비교하는 equals를 만들었다.","level":2,"id":"재정의_해서,_객체가_아닌_내부_값을_비교하는_equals를_만들었다."},{"heading":"HashCode의 규약에는 다음과 같은 사항이 존재한다.","level":3,"id":"HashCode의_규약에는_다음과_같은_사항이_존재한다."},{"heading":"- equals(object)가 두 객체를 같다고 판단했다면, 두 객체의 hashCode값은 항상 같아야한다","level":4,"id":"*_equals(object)가_두_객체를_같다고_판단했다면,_두_객체의_hashCode값은_항상_같아야한다"}],"backlinks":[],"links":["짧은-키워드/equals()-와-hashcode()-재정의.html#Equals() 와 HashCode() 재정의","짧은-키워드/equals()-와-hashcode()-재정의.html#String은_equals_잘쓰잖아?_=>_String은_String_pool에서_중복생성을_막고,_같은_값을_생성한다면_재사용하기_때문~","짧은-키워드/equals()-와-hashcode()-재정의.html#재정의_해서,_객체가_아닌_내부_값을_비교하는_equals를_만들었다.","짧은-키워드/equals()-와-hashcode()-재정의.html#HashCode의_규약에는_다음과_같은_사항이_존재한다.","짧은-키워드/equals()-와-hashcode()-재정의.html#*_equals(object)가_두_객체를_같다고_판단했다면,_두_객체의_hashCode값은_항상_같아야한다"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/equals()-와-hashcode()-재정의.html","pathToRoot":"..","createdTime":1747810479915,"modifiedTime":1747810479928,"sourceSize":1090,"sourcePath":"짧은 키워드/Equals() 와 HashCode() 재정의.md","exportPath":"짧은-키워드/equals()-와-hashcode()-재정의.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html":{"title":"Git Lab(깃랩) / Git Hub(깃허브) 차이","icon":"","description":"<br><br>\n<br>두가지 모두 소스코드 저장소 호스팅 플랫폼이며, 기술적 기반을 깃(Git)으로 삼는다는 점에서 비슷하다.\n<br>기본 기능은 같지만, 서비스의 초점이 조금 다른곳에 맞추어져 있다.\n<br><br>\n<br>깃허브와 깃랩의 가장 큰 차이점은 데브옵스 요소에 있다.\n<br><br><br>\n<br>즉 깃랩은 젠킨스와 아르고와 같은 CI/CD 도구들을 사용하지 않아도 자체적으로 파이프라인을 구성하여 간단하고 빠른 배포가 가능하다. 하지만 우리는 깃랩은 사용하지만, 깃랩CI/CD는 사용하고 있지 않은 상태이다.\n<br><br><br>\n<br>그덕에 신속한 배포가 가능하고, 문제 발생시 이전 버전으로 신속하게 복원할 수 있다.\n<br><br>\n<br>프로덕션과 스테이징의 분기가 최소한으로 있으며, 이러한 여러 다중 분기 접근방식은 여러단계의 테스트로 안정적인 유지가 가능하게 한다. 한편 이러한 이유로 병합및 수정시 코드 검토가 까다로워진다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Git Lab(깃랩) / Git Hub(깃허브) 차이","level":1,"id":"Git Lab(깃랩) / Git Hub(깃허브) 차이"},{"heading":"1. DevOps(데브옵스)","level":2,"id":"1._DevOps(데브옵스)"},{"heading":"깃랩은 지속적 통합(CI)/지속적 배포(CD)와 데브옵스 워크플로우를 내장하고 있다.","level":3,"id":"깃랩은_지속적_통합(CI)/지속적_배포(CD)와_데브옵스_워크플로우를_내장하고_있다."},{"heading":"반면, 깃허브는 사용작 원하는 CI/CD도구를 직접 통합해야한다.","level":3,"id":"반면,_깃허브는_사용작_원하는_CI/CD도구를_직접_통합해야한다."},{"heading":"2. 브랜치의 병합과 분리","level":2,"id":"2._브랜치의_병합과_분리"},{"heading":"깃허브에서는 브랜치 전략이라는 말이 있을만큼 새 브랜칭와 마스터 브랜치와의 병합이 용이하다.","level":3,"id":"깃허브에서는_브랜치_전략이라는_말이_있을만큼_새_브랜칭와_마스터_브랜치와의_병합이_용이하다."},{"heading":"깃랩의 워크플로우는 변경한 각 세트를 마스터 브랜치와 별도의 안정적인 브랜치로 생성한다.","level":3,"id":"깃랩의_워크플로우는_변경한_각_세트를_마스터_브랜치와_별도의_안정적인_브랜치로_생성한다."}],"backlinks":[],"links":["짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#Git Lab(깃랩) / Git Hub(깃허브) 차이","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#1._DevOps(데브옵스)","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#깃랩은_지속적_통합(CI)/지속적_배포(CD)와_데브옵스_워크플로우를_내장하고_있다.","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#반면,_깃허브는_사용작_원하는_CI/CD도구를_직접_통합해야한다.","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#2._브랜치의_병합과_분리","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#깃허브에서는_브랜치_전략이라는_말이_있을만큼_새_브랜칭와_마스터_브랜치와의_병합이_용이하다.","짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html#깃랩의_워크플로우는_변경한_각_세트를_마스터_브랜치와_별도의_안정적인_브랜치로_생성한다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html","pathToRoot":"..","createdTime":1747810808467,"modifiedTime":1747810808471,"sourceSize":1580,"sourcePath":"짧은 키워드/Git Lab(깃랩) Git Hub(깃허브) 차이.md","exportPath":"짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/gitops란.html":{"title":"GitOps란?","icon":"","description":"<br><br>- DevOps(개발과 운영을 통합하여 효율성,협력,안정성을 개선하는 개발/운영 방법론)의 실천 방법중 하나로, 애플리케이션 배포와 운영에 관련된 모든요소를 Git에서 관리(Opertation)한다는 뜻이다.\n- Git의 버전관리 시스템과 운영환경간의 일관성을 유지하여 소프트웨어간의 불일치 문제를\n해결할 수 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"GitOps란?","level":1,"id":"GitOps란?"}],"backlinks":[],"links":["짧은-키워드/gitops란.html#GitOps란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/gitops란.html","pathToRoot":"..","createdTime":1747810736384,"modifiedTime":1747810736387,"sourceSize":425,"sourcePath":"짧은 키워드/GitOps란.md","exportPath":"짧은-키워드/gitops란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/grafana-loki-란.html":{"title":"Grafana Loki 란?","icon":"","description":"<br><br><br>\n<br>ELK란 elastic / logstash / kibana 의 앞글자를 딴 시슷템으로\n데이터를 수집, 처리, 조회 하는데 특화되어있는 시스템이다.\n<br><br><br>\n<br>인덱스란 ? - 단일 데이터 단위를 도큐먼트라고 하며, 이 도큐먼트를 모아놓은 집합을 인덱스라고 한다.\n<br><br>\n<br>인덱스 용량이 증가함에 따라 운영부담과 비용이 크게 증가한다.\n<br>튜닝을 통한 안정화에 한계가 있다.\n<br><br>\n<br>\n수평 확장이 가능하다 <br>\n가용성 높은 다중 테넌트 로그 집계가 가능하다 <br>\n로그에 대한 메타데이터만 인덱싱한다. 즉 레이블을 기반으로 구축되어있다. <br>\n로그 내용을 색인화 하는것이 아닌, 레이블 세트를 색인화 하기 때문에 데이터 량을 감소시킬 수 있다. <br>\n검색시 레이블 기반으로만 조회하고, 레이블과 매칭된 압축된 로그 데이터를 가져와 사용한다. <br><br>\n<br>풀텍스트 검색시 기존 ELK대비 느리다.\n<br>쿼리언어를 새로이 학습해야한다.\n<br>레퍼런스가 부족하다.\n<br><br>","aliases":[],"tags":[],"headers":[{"heading":"Grafana Loki 란?","level":1,"id":"Grafana Loki 란?"},{"heading":"우리가 기존에 사용하던 ELK","level":2,"id":"우리가_기존에_사용하던_ELK"},{"heading":"Elastic search는 강력한 검색 및 쿼리 기능을 제공하여 다양한 조건으로 로그를 검색하고원하는 데이터를 쉽게 추출할 수 있다.","level":3,"id":"Elastic_search는_강력한_검색_및_쿼리_기능을_제공하여_다양한_조건으로_로그를_검색하고원하는_데이터를_쉽게_추출할_수_있다."},{"heading":"Logstash는 다양한 데이터 형식을 수집하고 변환할 수 있는 기능제공한다.","level":3,"id":"Logstash는_다양한_데이터_형식을_수집하고_변환할_수_있는_기능제공한다."},{"heading":"ELK 서비스의 한계점","level":2,"id":"ELK_서비스의_한계점"},{"heading":"Loki의 장점","level":2,"id":"Loki의_장점"},{"heading":"Loki의 한계","level":2,"id":"Loki의_한계"},{"heading":"결론 : 기존 ELK대비 높은 압출률을 가진 구조로, 로그를 오랫동안 보관하기에도 용의하며 확장에 유리하다.","level":4,"id":"결론__기존_ELK대비_높은_압출률을_가진_구조로,_로그를_오랫동안_보관하기에도_용의하며_확장에_유리하다."}],"backlinks":[],"links":["짧은-키워드/grafana-loki-란.html#Grafana Loki 란?","짧은-키워드/grafana-loki-란.html#우리가_기존에_사용하던_ELK","짧은-키워드/grafana-loki-란.html#Elastic_search는_강력한_검색_및_쿼리_기능을_제공하여_다양한_조건으로_로그를_검색하고원하는_데이터를_쉽게_추출할_수_있다.","짧은-키워드/grafana-loki-란.html#Logstash는_다양한_데이터_형식을_수집하고_변환할_수_있는_기능제공한다.","짧은-키워드/grafana-loki-란.html#ELK_서비스의_한계점","짧은-키워드/grafana-loki-란.html#Loki의_장점","짧은-키워드/grafana-loki-란.html#Loki의_한계","짧은-키워드/grafana-loki-란.html#결론__기존_ELK대비_높은_압출률을_가진_구조로,_로그를_오랫동안_보관하기에도_용의하며_확장에_유리하다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/grafana-loki-란.html","pathToRoot":"..","createdTime":1747810830526,"modifiedTime":1747810830530,"sourceSize":1604,"sourcePath":"짧은 키워드/Grafana Loki 란.md","exportPath":"짧은-키워드/grafana-loki-란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/http-method-mapping.html":{"title":"HTTP Method - Mapping","icon":"","description":"<br><br><br>#### PathVariable 방법 @RestController public class SecondController { @GetMapping(\"/second/{id}\") //PK(id)가 (변수)인 페이지를 찾고 싶다 public String getData(@PathVariable Integer id) { return \"id : \"+id; }\n#### QueryString 방법 @GetMapping(\"/second\") public String getData2(String title, String content) { return \"title:\"+title+\", content :\"+content; }\n<br><br>@PostMapping(\"/second\") public String postData(String title, String content) { return \"title:\"+title+\", content :\"+content; }\n<br><br><br><br>\t@PutMapping(\"/second\") public String putData(String title, String content) { return \"title:\"+title+\", content :\"+content; }\n<br>\n<br>PostMapping과 같은원리로 작동한다\n<br><br>\t@DeleteMapping(\"/second/{id}\") //쿼리스트링 해도 됨 public String deleteData(@PathVariable Integer id) { return id+\"delete ok\"; }\n<br><br><br>\n<br>데이터 전달이 필요한 경우 @RequestParam을 사용하거나\n@DeleteMapping 대신에 @PutMapping을 사용하도록 하자\n<br><br> 내생각에는 메서드를 명시적으로 작성 할 수 있기 때문에 더욱 가독성이 높아지는 장점이 있지 않을까 싶다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"HTTP Method - Mapping","level":1,"id":"HTTP Method - Mapping"},{"heading":"1. GetMapping","level":3,"id":"1._GetMapping"},{"heading":"2. PostMapping","level":3,"id":"2._PostMapping"},{"heading":"GetMapping은 PostMapping과 달리 http body값을 받는 메서드가 아니다. 따라서 GET요청에 Body값을 넣으면 null값이 나온다.","level":5,"id":"GetMapping은_PostMapping과_달리_http_body값을_받는_메서드가_아니다._따라서_GET요청에_Body값을_넣으면_null값이_나온다."},{"heading":"PostMapping에 body가 아닌 params에 값을 넣어도 값이 정상적으로 출력되는 이유는 params는 GET/POST/PUT/DELETE 모든 값이 나오기 때문이다. PostMapping을 원한다면 Body에 값을 넣어줘야한다","level":5,"id":"PostMapping에_body가_아닌_params에_값을_넣어도_값이_정상적으로_출력되는_이유는_params는_GET/POST/PUT/DELETE_모든_값이_나오기_때문이다._PostMapping을_원한다면_Body에_값을_넣어줘야한다"},{"heading":"3. PutMapping","level":3,"id":"3._PutMapping"},{"heading":"4. DeleteMapping","level":3,"id":"4._DeleteMapping"},{"heading":"DeleteMapping은 요청바디(@RequestBody)를 가지지 않는것이 일반적이다.","level":5,"id":"DeleteMapping은_요청바디(@RequestBody)를_가지지_않는것이_일반적이다."},{"heading":"그렇기에 @RequestBody를 사용하여 바디를 수신하는 것이 지원되지 않음","level":5,"id":"그렇기에_@RequestBody를_사용하여_바디를_수신하는_것이_지원되지_않음"},{"heading":"Get말고는 다들 비슷한 기능같은데 나누는 이유가 무었인지??","level":2,"id":"Get말고는_다들_비슷한_기능같은데_나누는_이유가_무었인지??"}],"backlinks":[],"links":["짧은-키워드/http-method-mapping.html#HTTP Method - Mapping","짧은-키워드/http-method-mapping.html#1._GetMapping","짧은-키워드/http-method-mapping.html#2._PostMapping","짧은-키워드/http-method-mapping.html#GetMapping은_PostMapping과_달리_http_body값을_받는_메서드가_아니다._따라서_GET요청에_Body값을_넣으면_null값이_나온다.","짧은-키워드/http-method-mapping.html#PostMapping에_body가_아닌_params에_값을_넣어도_값이_정상적으로_출력되는_이유는_params는_GET/POST/PUT/DELETE_모든_값이_나오기_때문이다._PostMapping을_원한다면_Body에_값을_넣어줘야한다","짧은-키워드/http-method-mapping.html#3._PutMapping","짧은-키워드/http-method-mapping.html#4._DeleteMapping","짧은-키워드/http-method-mapping.html#DeleteMapping은_요청바디(@RequestBody)를_가지지_않는것이_일반적이다.","짧은-키워드/http-method-mapping.html#그렇기에_@RequestBody를_사용하여_바디를_수신하는_것이_지원되지_않음","짧은-키워드/http-method-mapping.html#Get말고는_다들_비슷한_기능같은데_나누는_이유가_무었인지??"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/http-method-mapping.html","pathToRoot":"..","createdTime":1747810387605,"modifiedTime":1747810387643,"sourceSize":1951,"sourcePath":"짧은 키워드/HTTP Method - Mapping.md","exportPath":"짧은-키워드/http-method-mapping.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/java에서-string을-선언하는-두-가지-방법.html":{"title":"Java에서 String을 선언하는 두 가지 방법","icon":"","description":"<br><br>\t1. String x = \"abc\"; 2. String y = new String(\"abc\");\n<br>1번의 경우로 생성했을 때는 abc라는 문자열을 String 상수 pool에 저장하고,\n다음번에 동일 문자열이 선언될 때 이풀에서 꺼내의 재사용하게 된다.<br>2번의 경우엔 String을 인스턴스와 하여 새로운 객체를 생성하게 된다.\nString Class는 자신을 수정하는 기능을 제공하지 않기때문에,\n1번의 경우로 선언했을경우 한가지가 바뀌게 되면 나머지가 모두 바뀌게 된다.\n이러한 일을 방지하기 위해서는 생성자를 이용한 선언(2번)을 사용해야한다.<br>","aliases":[],"tags":[],"headers":[{"heading":"Java에서 String을 선언하는 두 가지 방법","level":1,"id":"Java에서 String을 선언하는 두 가지 방법"}],"backlinks":[],"links":["짧은-키워드/java에서-string을-선언하는-두-가지-방법.html#Java에서 String을 선언하는 두 가지 방법"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/java에서-string을-선언하는-두-가지-방법.html","pathToRoot":"..","createdTime":1747810997675,"modifiedTime":1747810997713,"sourceSize":699,"sourcePath":"짧은 키워드/Java에서 String을 선언하는 두 가지 방법.md","exportPath":"짧은-키워드/java에서-string을-선언하는-두-가지-방법.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/java의-람다란.html":{"title":"Java의 람다란?","icon":"","description":"<br><br>\n<br>\n람다 표현식(Lambda Expression)이란?\n함수형 프로그래밍을 구성하기 위한 함수식이며, 간단히 말해 자바의 메소드를 간결한 함수 식으로 표현한 것. <br>\n이름없는 함수, 익명 함수(anonymous function) 이라고도 한다. <br>int add(int x, int y) { return x + y;\n}\n<br>// 위의 메서드를 람다 표현식을 이용해 아래와 같이 단축 시킬수 있다. (메서드 반환 타입, 메서드 이름 생략)\n(int x, int y) -&gt; { return x + y;\n};\n<br>// 매개변수 타입도 생략 할 수 있다.\n(x, y) -&gt; { return x + y;\n};\n<br>// 함수에 리턴문 한줄만 있을 경우 더욱 더 단축 시킬 수 있다. (중괄호, return 생략)\n(x, y) -&gt; x + y;\n<br><br><br>\n<br>람다의 바디에서는 파라미터가 아닌 바디 외부에 있는 변수를 참조할 수 있다.\n<br>유사하게 로컬 클래스, 익명 클래스에서도 참조가 가능하다.\n<br>public class VariableCapture { private void run() { // 로컬 클래스, 익명 클래스, 람다에서 이 변수를 참조하면 effective final로 변경 int baseNumber = 10; // 람다 IntConsumer lambda = (i) -&gt; System.out.println(i + baseNumber); // i + 10 // 로컬 클래스 class LocalClass { void printBaseNumber() { System.out.println(baseNumber); // 10 } } // 익명 클래스 IntConsumer intConsumer = new IntConsumer() { @Override public void accept(int i) { System.out.println(i + baseNumber); // i + 10 } }; }\n}\n<br><br><br><br><br>\n<br>자유 변수는 final로 선언되어 있어야 한다.\n<br>final로 선언되지 않은 자유 변수는 final처럼 동작해야 한다. (effectively final)\n<br><br>\n<br>지역 변수는 JVM의 영역 중 stack영역에 생성된다.\n<br>쓰레드별로 해당 stack영역을 별로 갖는다.\n<br>즉, 쓰레드 끼리 공유가 되지 않는다.\n<br>반면 인스턴스 변수는 Heap영역에 생성된다.\n<br>즉, 인스턴스 변수는 공유가 가능하다.\n람다는 별도의 쓰레드에서 실행이 가능하다.\n따라서 지역 변수(자유 변수)가 있는 쓰레드가 사라졌을 때, 람다가 이 변수를 참조하고 있다면, 오류를 야기할 수 있는것이다.\n<br><br>\n<br>람다는 자유 변수를 참조할 때 직접 그 변수를 참조하는 것이 아닌,\n자유 변수를 자신의 stack영역에 복사하여 참조하는 방법으로 참조 오류를 해결했다.\n<br>이러한 이유로 자유 변수는 수정이 불가능하도록 final처럼 동작해야 하는 것이다.\n<br><br>\n<br>로컬 클래스 / 익명 클래스 / 람다 모두 자유 변수를 참조할 수 있다는 공통점이 있다.\n<br>하지만 로컬클래스 / 익명클래스와 다르게 람다에서는 자유 변수와 같은 이름의 변수를 선언할 수 없다.\n람다의 scope는 자유변수의 scope와 같기 때문이다.\n반면 로컬/익명 클래스는 내부에 생성된 변수의 스코프가 더 지엽적이기 때문에 선언이 가능하다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Java의 람다란?","level":1,"id":"Java의 람다란?"},{"heading":"자유변수","level":1,"id":"자유변수"},{"heading":"여기서, 람다 시그니처의 파라미터로 넘겨진 변수가 아닌, 외부에서 정의된 변수를","level":5,"id":"여기서,_람다_시그니처의_파라미터로_넘겨진_변수가_아닌,_외부에서_정의된_변수를"},{"heading":"자유 변수라고 한다. 또, 람다 바디에서 자유 변수를 참조하는 것을","level":5,"id":"==자유_변수==라고_한다._또,_람다_바디에서_자유_변수를_참조하는_것을"},{"heading":"람다 캡쳐링이라고 한다.","level":5,"id":"==람다_캡쳐링==이라고_한다."},{"heading":"제약조건","level":2,"id":"제약조건"},{"heading":"왜 final이어야 할까?","level":3,"id":"왜_`final`이어야_할까?"},{"heading":"어떻게 해결했을까?","level":3,"id":"어떻게_해결했을까?"},{"heading":"주의점","level":2,"id":"주의점"}],"backlinks":[],"links":["짧은-키워드/java의-람다란.html#Java의 람다란?","짧은-키워드/java의-람다란.html#자유변수","짧은-키워드/java의-람다란.html#여기서,_람다_시그니처의_파라미터로_넘겨진_변수가_아닌,_외부에서_정의된_변수를","짧은-키워드/java의-람다란.html#==자유_변수==라고_한다._또,_람다_바디에서_자유_변수를_참조하는_것을","짧은-키워드/java의-람다란.html#==람다_캡쳐링==이라고_한다.","짧은-키워드/java의-람다란.html#제약조건","짧은-키워드/java의-람다란.html#왜_`final`이어야_할까?","짧은-키워드/java의-람다란.html#어떻게_해결했을까?","짧은-키워드/java의-람다란.html#주의점"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/java의-람다란.html","pathToRoot":"..","createdTime":1747809573168,"modifiedTime":1747809573258,"sourceSize":3582,"sourcePath":"짧은 키워드/Java의 람다란.md","exportPath":"짧은-키워드/java의-람다란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/java의-리플렉션이란.html":{"title":"Java의 리플렉션이란?","icon":"","description":"<br><br>\n<br>구체적인 Class Type을 알지 못하더라도 해당 Class의 method, type, variable들에 접근할 수 있도록 해주는 JAVA의 API이다.\n<br>컴파일된 바이트 코드를 통해 Runtime에 동적으로 특정 Class의 정보를 추출할 수 있는 프로그래밍 기법\n<br><br>\n<br>프로그램에 사용된 구성 요소의 실제 값 또는 프로퍼티를 결정짓는 행위\n-즉 프로그램에서 사용되는 변수나 메서드 등 모든 것들이 결정되도록 연결해주는 것\n<br><br>- 컴파일 시점에 결정\n- 프로그램이 실행 돼도 변하지 않음\n- 오버로딩 : 컴파일 다형성, 메서드 타입,개수,순서 를 다르게 하여 정의하는 것\n- private, final, static이 붙은 메서드\n<br><br>- 런타임 시점에 결정\n- 오버라이딩 : 런타임 다형성, 부모,상위 클래스의 메서드를 하위 클래스가 재정의하여 사용하는 것\n- Java에서의 다형성, 상속이 가능한 이유\n<br><br>\n<br>\n클래스의 수정 없이 유연하게 확장 가능한 코드를 작성할 수 있다. <br>\n앞서 설명했던 것을 토대로 생각해보면, Reflection은 Runtime에 Class Type을 모르는채로 객체를 생성하고 이용하기 때문에 동적 바인딩을 제공한다. <br><br>\n<br>코드 작성 시점에서는 어떠한 Class를 사용해야할지 모르지만 Runtime에 Class를 가져와서 실행해야하는 경우 (Spring Annotation)\n<br><br>\n<br>private 변수를 변경하고 싶거나 private method를 테스트할 경우\n<br><br>\n<br>IDE 사용 시 Da 입력만해도 이와 관련된 Class 혹은 Method 목록들을 IDE가 먼저 확인하고 사용자에게 제공한다\n<br><br>\n<br>Reflection은 아래와 같은 정보를 가져올 수 있다.\n<br>\n<br>Class/Interface\n<br>Constructor\n<br>Method\n<br>Field\n<br>해당 정보들을 통해 (1) 객체 생성 (2) 메서드 호출 (3) 변수 값을 변경할 수 있다.<br>[1] Class / Interface<br>public static void main(String[] args) throws Exception { // 1. class를 알고 있을 경우 Class car = Car.class; // 2. class 이름만 알고 있을 경우 Class car = Class.forName(\"com.reflection.test.Car\"); // class.getName() -&gt; com.reflection.test.Car // 3. Default 생성자를 이용한 객체 생성 Car realCar = car.newInstance(); // 4. class에 구현된 interface 확인 Class[] interfaces = car.getInterfaces();\n}\n<br>[2] Constructor<br>public static void main(String[] args) throws Exception { Class car = Class.forName(\"com.reflection.test.Car\"); // 1. 인자가 없는 생성자 가져오기 Constructor constructor = car.getDeclaredConstructor(); // 2. String 인자를 가진 생성자 가져오기 Constructor constructor = car.getDeclaredConstructor(String.class); // 3. 모든 생성자 가져오기 Constructor constructors[] = car.getDeclaredConstructors(); // 4. public 생성자만 가져오기 Constructor constructors[] = car.getConstructors(); // public com.reflection.test.Car() // public com.reflection.test.Car(java.lang.String) // 5. 생성자를 이용한 객체 생성 Car realCar = constructor.newInstance();\n}\n<br>[3] Method<br>public static void main(String[] args) throws Exception { Class car = Class.forName(\"com.reflection.test.Car\"); // 1. 인자가 없는 method 가져오기 Method method = car.getDeclaredMethod(\"move\"); // 2. String 인자를 가진 method 가져오기 Method method = car.getDeclaredMethod(\"move\", String.class); // 3. 모든 method 가져오기 Method methods[] = car.getDeclaredMethods(); // 4. 상속받은 method와 public method 가져오기 Method methods[] = car.getMethods(); // public void com.reflection.test.Car.move() // public void com.reflection.test.Car.move(java.lang.String) // 5. method 호출 Class realCar = car.newInstance(); method.invoke(realCar, /*인자*/); // 6. 접근 제한자를 무시한 method 호출. method.setAccessible(true); method.invoke(realCar, /*인자*/);\n}\n<br>[4] Field<br>public static void main(String[] args) throws Exception { Class car = Class.forName(\"com.reflection.test.Car\"); // 1. car 객체에서 name 에 해당하는 field 가져오기 Field field = car.getDeclaredField(\"name\"); // 2. car + car super 객체를 포함하여 name에 해당하는 field 가져오기 Field field = car.getField(\"name\"); // 3. car 객체에 선언된 모든 field 가져오기 Field[] fields = car.getDeclaredFields(); // private java.lang.String com.reflection.test.Car.name // public java.lang.Integer com.reflection.test.Car.type // 4. car + car super 객체의 모든 public field 가져오기 Field[] fields = car.getFields(); // public java.lang.Integer com.reflection.test.Car.age\n}\n<br>[5] Field 값 변경<br>public static void main(String[] args) throws Exception { Class class = Class.forName(\"com.reflection.test.Car\"); Constructor constructor = class.getConstructor() Car car = constructor.newInstance() Field field = car.getField(\"name\"); // 1. public field 일 경우 field.set(car, \"아반떼\"); // 2. private field 일 경우 field.setAccessible(true); field.set(car, \"아반떼\");\n}\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Java의 리플렉션이란?","level":1,"id":"Java의 리플렉션이란?"},{"heading":"'바인딩'이란?","level":2,"id":"'바인딩'이란?"},{"heading":"정적 바인딩","level":3,"id":"정적_바인딩"},{"heading":"동적 바인딩","level":3,"id":"동적_바인딩"},{"heading":"Reflection 사용 이유","level":2,"id":"Reflection_사용_이유"},{"heading":"동적으로 Class를 사용 해야할 경우","level":3,"id":"동적으로_Class를_사용_해야할_경우"},{"heading":"Test Code 작성","level":3,"id":"Test_Code_작성"},{"heading":"자동 Mapping 기능 구현","level":3,"id":"자동_Mapping_기능_구현"},{"heading":"Reflection 사용 방법","level":2,"id":"Reflection_사용_방법"}],"backlinks":[],"links":["짧은-키워드/java의-리플렉션이란.html#Java의 리플렉션이란?","짧은-키워드/java의-리플렉션이란.html#'바인딩'이란?","짧은-키워드/java의-리플렉션이란.html#정적_바인딩","짧은-키워드/java의-리플렉션이란.html#동적_바인딩","짧은-키워드/java의-리플렉션이란.html#Reflection_사용_이유","짧은-키워드/java의-리플렉션이란.html#동적으로_Class를_사용_해야할_경우","짧은-키워드/java의-리플렉션이란.html#Test_Code_작성","짧은-키워드/java의-리플렉션이란.html#자동_Mapping_기능_구현","짧은-키워드/java의-리플렉션이란.html#Reflection_사용_방법"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/java의-리플렉션이란.html","pathToRoot":"..","createdTime":1747809342823,"modifiedTime":1747809342827,"sourceSize":5607,"sourcePath":"짧은 키워드/Java의 리플렉션이란.md","exportPath":"짧은-키워드/java의-리플렉션이란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html":{"title":"JPA에서 BooleanBuilder 와 BooleanExpression 이란?","icon":"","description":"<br><br>- 두 클래스 모두 JPA에서 동적쿼리를 제작할 때 사용한다.\nBooleanBuilder는 if문을 각 데이터 조건에 맞게 코드로 작성할 수 있도록 도와주는 역할을 한다.\n<br>BooleanExpression 는 메서드를 생성하여 where절 안에서 호출하여 구현할 수 있다.\n메서드 안에서 where절로 null이 반환되면 해당 조건이 무시되기 때문에 동적쿼리가 가능하다.\n(모든 조건이 NULL을 반환하면 전체 엔티티를 불러오는 점을 주의하자)\n메서드는 재사용이 가능하고, 메서드들 끼리 재조합도 가능하기 때문에 유지보수나, 재활용에 유리하다.<br>*동적쿼리 - 실행시점에서, 사용자나 프로그램의 사정에따라 쿼리의 조건이나 구조를 동적으로 결정할때 사용.<br>","aliases":[],"tags":[],"headers":[{"heading":"JPA에서 BooleanBuilder 와 BooleanExpression 이란?","level":1,"id":"JPA에서 BooleanBuilder 와 BooleanExpression 이란?"}],"backlinks":[],"links":["짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html#JPA에서 BooleanBuilder 와 BooleanExpression 이란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html","pathToRoot":"..","createdTime":1747810217633,"modifiedTime":1747810217637,"sourceSize":872,"sourcePath":"짧은 키워드/JPA에서 BooleanBuilder 와 BooleanExpression 이란.md","exportPath":"짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/jpa의-지연로딩.html":{"title":"JPA의 지연로딩","icon":"","description":"<br><br>\n<br>JPA에서 실제 데이터가 필요한 시점까지 데이터베이스 조회를 지연하는 기법\n<br>엔티티를 처음 조회할 때는 연관된 데이터를 즉시 로드하지 않고, 그 연관된 데이터가 실제로 사용될 때 데이터베이스에서 조회하는 방식\n<br>불필요한 데이터 조회를 줄여서 성능을 최적화하는데 유리하다.\n<br><br>\n<br>지연 로딩을 설정하면 연관된 엔티티나 컬렉션은 처음에 프록시 객체로 로드된다. <br>프록시는 실제 엔티티를 대신하는 객체로, DB조회가 필요할 때 프록시가 실제 데이터를 조회하여 값을 제공 <br>처음 부터 연관된 데이터를 모두 로드하는것이 아닌, 실제 접근 시점에 DB에서 로드되도록 지연 <br><br>\n<br>엔티티 A를 조회시 관련(Reference)되어 있는 엔티티 B를 한 번에 가져오지 않는다.\n<br>프록시를 맵핑하고 실제 B를 조회할 때 쿼리가 나간다.\n쿼리가 총 두 번 나간다. A조회시 한 번, B조회시 한 번\n<br>","aliases":[],"tags":[],"headers":[{"heading":"JPA의 지연로딩","level":1,"id":"JPA의 지연로딩"},{"heading":"지연로딩(Lazy Loading)의 기본동작.","level":2,"id":"지연로딩(Lazy_Loading)의_기본동작."},{"heading":"자신과 연관된 엔티티를 실제로 사용할 때 연관된 엔티티를 조회하는 방식","level":4,"id":"자신과_연관된_엔티티를_실제로_사용할_때_연관된_엔티티를_조회하는_방식"}],"backlinks":[],"links":["짧은-키워드/jpa의-지연로딩.html#JPA의 지연로딩","짧은-키워드/jpa의-지연로딩.html#지연로딩(Lazy_Loading)의_기본동작.","짧은-키워드/jpa의-지연로딩.html#자신과_연관된_엔티티를_실제로_사용할_때_연관된_엔티티를_조회하는_방식"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/jpa의-지연로딩.html","pathToRoot":"..","createdTime":1747808688809,"modifiedTime":1747808688814,"sourceSize":1212,"sourcePath":"짧은 키워드/JPA의 지연로딩.md","exportPath":"짧은-키워드/jpa의-지연로딩.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/jpaqueryfactory란.html":{"title":"JPAQueryFactory란?","icon":"","description":"<br><br>- SQL문법과 유사하게 복잡한 쿼리를 제작할 수 있게 도와주는 SPRING의 JPA지원 클래스이다.\n<br>ex)<br> private RemainDto firstList(DashBoardModel model) { return factory .select( Projections.fields( RemainDto.class, cfProductInvest.amount.sum().coalesce(0L).as(\"total\"), new CaseBuilder() .when(cfProduct.category.eq(\"2\")) .then(cfProductInvest.amount) .otherwise(0L).sum().coalesce(0L).as(\"estate\"), new CaseBuilder() .when(cfProduct.category.ne(\"2\")) .then(cfProductInvest.amount) .otherwise(0L).sum().coalesce(0L).as(\"noneEstate\") ) ) .from(cfProductInvest) .leftJoin(cfProduct) .on(cfProductInvest.productIdx.eq(cfProduct.idx)) .leftJoin(g5Member) .on(cfProductInvest.memberIdx.eq(g5Member.mbNo)) .where( g5Member.mbId.eq(model.getMbId()), cfProductInvest.investState.eq(\"Y\") ) .fetchOne(); }\n<br>","aliases":[],"tags":[],"headers":[{"heading":"JPAQueryFactory란?","level":1,"id":"JPAQueryFactory란?"}],"backlinks":[],"links":["짧은-키워드/jpaqueryfactory란.html#JPAQueryFactory란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/jpaqueryfactory란.html","pathToRoot":"..","createdTime":1747810286088,"modifiedTime":1747810286112,"sourceSize":1499,"sourcePath":"짧은 키워드/JPAQueryFactory란.md","exportPath":"짧은-키워드/jpaqueryfactory란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/jpql과-querydsl-비교.html":{"title":"JPQL과 QueryDSL 비교","icon":"","description":"<br><br><br>\tString username = \"java\"; String jpql = \"select m from Member m where m.username = :username\"; List&lt;Member&gt; result = em.createQuery(query, Member.class).getResultList()\n<br>jpql이란 JPA의 일부로, 쿼리를 Table이 아닌 객체 기준으로 작성하는 객체지향 쿼리 언어 이다.<br>문제점 : String형태 이기 때문에 개발자 의존적인 형태를 띈다.\n컴파일 단계에서 Type-Check가 불가능하다.\n런타임 단계에서 오류가 발생한다.(장애 리스크가 증가한다)<br><br><br>\tString username = \"java\"; List&lt;Member&gt; result = queryFactory .select(member) .from(member) .where(usernameEq(username)) .fetch();\n<br>QueryDSL은 해당 문제를 해결하기 위해서 나온 기능이다.<br>장점 : 문자가 아닌 코드로 쿼리를 작성할 수 있어 컴파일 시점에 문법오류 확인 가능.\nIDE의 자동완성 기능의 도움을 받을 수 있다.\n복잡한 쿼리나 동적 쿼리 작성이 편하다.\n쿼리 작성시 제약조건 등 메서드를 추출해서 재사용할 수 있다.<br>","aliases":[],"tags":[],"headers":[{"heading":"JPQL과 QueryDSL 비교","level":1,"id":"JPQL과 QueryDSL 비교"},{"heading":"JPQL","level":2,"id":"JPQL"},{"heading":"QueryDSL","level":2,"id":"QueryDSL"}],"backlinks":[],"links":["짧은-키워드/jpql과-querydsl-비교.html#JPQL과 QueryDSL 비교","짧은-키워드/jpql과-querydsl-비교.html#JPQL","짧은-키워드/jpql과-querydsl-비교.html#QueryDSL"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/jpql과-querydsl-비교.html","pathToRoot":"..","createdTime":1747810210270,"modifiedTime":1747810210274,"sourceSize":1193,"sourcePath":"짧은 키워드/JPQL과 QueryDSL 비교.md","exportPath":"짧은-키워드/jpql과-querydsl-비교.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/jvm의-stack과-heap.html":{"title":"JVM의 Stack과 Heap","icon":"","description":"<br><br><img alt=\"Pasted image 20250122111223.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250122111223.png\" target=\"_self\"><br><br>\n<br>int, long, booolean 등 기본 자료형을 생성할 때 저장하는 공간\n<br>임시적으로 사용되는 변수나 정보들이 저장되는 영역\n<br>메서드 호출 시 마다 스텍 프레임(그 메서드만을 위한 공간이 생성되고, 그 메서드 안에서\n사용되는 값들을 저장하고, 호출된 메서드의 매개변수, 지역변수, 리턴 값 등을 임시로 저장한다.<br>그리고 메서드의 수행이 끝나면 프레임별로 삭제된다.<br>단, 데이터 타입에 따라 스텍과 힙에 저장되는 방식이 다르다는 점을 유의해야한다.<br><br><br>위사진 참고<br><br><br>- 이를 넘어서면 StackOverFlowError를 발생한다.\n<br><br>\n<br>메서드 영역과 함께 모든 스레드가 공유한다.\n<br>JVM이 관리하는 프로그램 상에서 데이터를 저장하기 위해 런타임 시 동적으로 할당되어 사용되는 영역이다.\n<br>new연산자로 생성되는 클래스와 인스턴스 변수, 배열 타입 등 Reference Type이 저장된다.\n<br>메서드 영역에 저장된 클래스만이 힙영역에 생성이 되어 적재된다.\n힙영역에 더이상 아무도 참조하지않는 객체가 있다면, GC에 의해 제거된다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"JVM의 Stack과 Heap","level":1,"id":"JVM의 Stack과 Heap"},{"heading":"스택(Stack)영역","level":2,"id":"스택(Stack)영역"},{"heading":"1. 기본(원시)타입 변수는 스텍영역에 직접 값으로 저장된다.","level":4,"id":"1._기본(원시)타입_변수는_스텍영역에_직접_값으로_저장된다."},{"heading":"2. 참조타입(new연산자) 등은 힙영역이나 메소드 영역의 객체 주소를 가진다.","level":4,"id":"2._참조타입(new연산자)_등은_힙영역이나_메소드_영역의_객체_주소를_가진다."},{"heading":"스텍 영역은 각 스레드 마다 하나씩 존재한다.","level":3,"id":"스텍_영역은_각_스레드_마다_하나씩_존재한다."},{"heading":"스레드가 시작될 때 할당되며, 고정된 사이즈를 갖는다.","level":3,"id":"스레드가_시작될_때_할당되며,_고정된_사이즈를_갖는다."},{"heading":"힙(Heap)영역","level":2,"id":"힙(Heap)영역"}],"backlinks":[],"links":["짧은-키워드/jvm의-stack과-heap.html#JVM의 Stack과 Heap","짧은-키워드/jvm의-stack과-heap.html#스택(Stack)영역","짧은-키워드/jvm의-stack과-heap.html#1._기본(원시)타입_변수는_스텍영역에_직접_값으로_저장된다.","짧은-키워드/jvm의-stack과-heap.html#2._참조타입(new연산자)_등은_힙영역이나_메소드_영역의_객체_주소를_가진다.","짧은-키워드/jvm의-stack과-heap.html#스텍_영역은_각_스레드_마다_하나씩_존재한다.","짧은-키워드/jvm의-stack과-heap.html#스레드가_시작될_때_할당되며,_고정된_사이즈를_갖는다.","짧은-키워드/jvm의-stack과-heap.html#힙(Heap)영역"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/jvm의-stack과-heap.html","pathToRoot":"..","createdTime":1747809581981,"modifiedTime":1747809582016,"sourceSize":1655,"sourcePath":"짧은 키워드/JVM의 Stack과 Heap.md","exportPath":"짧은-키워드/jvm의-stack과-heap.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250122111223.png"]},"짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html":{"title":"k8s(쿠버네티스)에 대한 간단한 설명","icon":"","description":"<br><br>\n<br>쿠버네티스는 \"컨테이너화된 애플리케이션\"을 배포, 관리, 확장 할때 수반되는 다수의 \"수동 프로세스를 자동화\"하는 오픈소스 \"컨테이너 오케스트레이션 플랫폼\"이다.\n<br><br>1. 프로비저닝 및 배포\n2. 구성 및 일정 조정\n3. 리소스 할당\n4. 컨테이너 가용성 체크\n5. 로드밸런싱 기반 컨테이너 스케일링\n6. 트래픽 라우팅\n7. 컨테이너 상세 모니터링\n8. 컨테이너 간 상호작용 및 보안\n<br><br>\n<br>클러스터 <br>컨트롤 플레인 및 하나 이상의 컴퓨팅 머신 또는 노드를 뜻한다. <br>컨트롤 플레인 <br>쿠버네티스 노드를 제어하는 프로세스의 컬렉션. 여기에 모든 태스크 할당이 시작된다. <br>kubelet <br>노드에서 실행되며, 컨테이너 매니패스트를 읽고, 정의된 컨테이너가 실행중인지 확인한다. <br>포드(Pod) <br>단일 노드에 배포된 하나 이상의 컨테이너 그룹. 포드에 있는 모든 컨테이너는 IP주소.호스트 이름, 기타 리소스 등을 공유한다. <br><br> 작동 중인 쿠버네티스 배포를 클러스터라고 한다. 클러스터는 컨테이너를 실행하는 호스트 그룹으로, 컨트롤 플레인과 컴퓨팅머신의 2개 부분으로 시각화 할 수 있다.\n<br><br> Docker는 쿠버네티스가 오케스트레이션하는 컨테이너의 런타임으로 사용할 수 있다. 쿠버네티스가 노드에 대해 pod을 예약하면 해당 노드의 kubelet(각 컨테이너의 실행을 보장하는 서비스)가 지정된 컨테이너를 실행하도록 Docker에 명령한다. 이후, kubelet은 Docker로 부터, 지속적으로 상태를 수집하고 컨트롤 플레인에서 해당 정보를 집계한다.\n<br>** 한줄 요약 : docker는 k8s가 시키는데로(이미짜여진대로, 자동으로) 컨테이너를 실행한다.<br>","aliases":[],"tags":[],"headers":[{"heading":"k8s(쿠버네티스)에 대한 간단한 설명","level":1,"id":"k8s(쿠버네티스)에 대한 간단한 설명"},{"heading":"컨테이너 오케스트레이션이 하는일","level":4,"id":"컨테이너_오케스트레이션이_하는일"},{"heading":"쿠버네티스 주요 구성 요소","level":3,"id":"쿠버네티스_주요_구성_요소"},{"heading":"k8s클러스터란?","level":2,"id":"k8s클러스터란?"},{"heading":"K8S와 Docker의 관계","level":2,"id":"K8S와_Docker의_관계"}],"backlinks":[],"links":["짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html#k8s(쿠버네티스)에 대한 간단한 설명","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html#컨테이너_오케스트레이션이_하는일","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html#쿠버네티스_주요_구성_요소","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html#k8s클러스터란?","짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html#K8S와_Docker의_관계"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html","pathToRoot":"..","createdTime":1747810728089,"modifiedTime":1747810728308,"sourceSize":2078,"sourcePath":"짧은 키워드/k8s(쿠버네티스)에 대한 간단한 설명.md","exportPath":"짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/load-balancer란.html":{"title":"Load Balancer란??","icon":"","description":"<br><br>\n<br>서버에 일을 분산시켜주는 역할을 한다.\n<br> <br>Random 랜덤분배 <br> <br>Least loaded 가장 적은양의 작업을 처리하고 있는 서버에게 요청 할당 <br> <br>Round Robin 순서를 정하여 돌아가며 작업 분배 <br><br>\n<br>layer4 : 데이터의 내용을 보지 않고 IP주소 및 TCP/UDP정보에 따라 단순히 분배를 해준다\n<br>layer7 : 서버가 하는 역할이 분리되어 있는 환경에서 데이터의 내용을 보고 각기 맞는 역할을 하는 서버에게 분배\n<br>로드밸런서는 클라이언트가 요청을 보내야 할 서버를 골라야하는 부담을 덜어주며, 로드 밸런서에게 할당된 vIP(가상IP)로 요청을 보내기만 하면 로드 밸런서에서 알아서 작업을 나눠준다.\n서버에서는 적절한 로드 밸런서를 사용하면 들어오는 요청이 여러 장비에 분산되어 처리량이 늘어나고 응답 시간이 줄어드는 효과를 기대할 수 있다.<br>","aliases":[],"tags":[],"headers":[{"heading":"Load Balancer란??","level":1,"id":"Load Balancer란??"},{"heading":"많이 사용하는 로드 밸런서의 종류는 Layer4 와 Layer7이다.","level":3,"id":"많이_사용하는_로드_밸런서의_종류는_Layer4_와_Layer7이다."}],"backlinks":[],"links":["짧은-키워드/load-balancer란.html#Load Balancer란??","짧은-키워드/load-balancer란.html#많이_사용하는_로드_밸런서의_종류는_Layer4_와_Layer7이다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/load-balancer란.html","pathToRoot":"..","createdTime":1747810950892,"modifiedTime":1747810950897,"sourceSize":1064,"sourcePath":"짧은 키워드/Load Balancer란.md","exportPath":"짧은-키워드/load-balancer란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/lock-(-데이터베이스-락-)-이란.html":{"title":"Lock ( 데이터베이스 락 ) 이란?","icon":"","description":"<br><br>세션1이 트렌젝션을 시작하고 데이터를 수정하는 동안 아직 커밋을 수행하지 않았는데,\n세션2에서 동시에 같은 데이터를 수정하게 되면 여러가지 문제가 발생한다.<br>이런문제를 방지하기 위해, 세션이 트렌젝션을 시작하고 데이터를 수정하는 동안에 커밋이나 롤백 전까지\n다른세션에서 해당 데이터를 수정할 수 없게 막아야 한다. 이런 문제를 해결하기 위해 DB에서는\nLOCK 락 이라는 개념을 제공한다.<br>\n<br>락은 언제 사용하는가? : 트렌젝션 종료 시점까지 해당 데이터를 다른 곳에서 변경하지 못하도록 강제로 막아야 할 때 사용한다.\n<br>일반적인 조회는 락을 사용하지 않는다.\n<br>락 타임아웃(다른 세션이 데이터를 점유하고 있을때 대기시간이 초과된 경우)에는 익셉션이 발생하게 된다.\n<br><br>동시성 제어(Concurrency Control)란,&nbsp;여러 사용자나 프로세스가 데이터를 공유할 때 발생할 수 있는 문제를 해결하기 위해, 데이터베이스 시스템이 트랜잭션을 순서대로 실행하는 것이 아니라, 트랜잭션이 동시에 실행될 수 있도록 허용하면서도 데이터의 일관성과 무결성을 유지할 수 있도록 하는 기술이며, 데이터베이스 시스템에서 매우 중요한 개념 중 하나이다.<br><br>\n<br>여러 사용자가 DB에 접근하더라도&nbsp;데이터의 일관성을 보장하고 데이터의 무결성을 유지\n<br>위를 만족하며 데이터베이스 시스템의 성능과 효율성을 유지하는 것\n<br>\n<br>분실된 갱신(Lost Update) <br>두개의 트랜잭션이 같은 데이터를 갱신하는 작업을 진행하게 되면서 하나의 작업이 진행되지 않는 경우 <br>모순성(Inconsistency) <br>두개의 트랜잭션이 같은 데이터를 동시에 갱신하게되어 사용자가 원하는 결과와 일치하지 않은 상태가 되는 경우 <br>연쇄복귀(Cascading Rollback) <br>두개의 트랜잭션이 같은 데이터를 갱신하는 작업을 진행하는 과정에서 하나의 트랜잭션이 실패하면 원자성에 의해 두 트랜잭션 모두 복귀하는 경우 <br>비완료 의존성(Uncommitted Dependency) <br>한개의 트랜잭션이 실패하였을때, 이 트랜재션이 회복하기전에 다른 트랜잭션이 실패한 수행 결과를 참조하는 경우 <br><br><br>\n<br>Locking은 공유 자원에 대한 동시 액세스를 제어하는 전통적인 방법이다.\n<br>단일 스레드 또는 단일 프로세스에서만 동작하며, 한 번에 하나의 스레드만 공유 자원에 액세스할 수 있다.\n<br>신뢰성과 안전성이 높으며, 어떤 수준의 locking을 적용하느냐에 따라 교착 상태나 경쟁 조건과 같은 문제를 방지할 수 있다.\n<br>하지만 동시성 처리 속도가 저하될 수 있고, 대기 시간이 발생할 수 있다.\n<br>기본적으로 lock 연산과 unlock 연산을 사용한다.\n<br><br>\n<br>\n공유 잠금 (shared lock/s-lock): 데이터를 읽을 때 사용하는 락 <br>공유잠금을 설정한 트랜잭션은 데이터 항목에 대해&nbsp;읽기 연산(read)만 가능하다. <br>T1에서 x에 대해 S-lock을 설정했다면, T1은 read(x) 연산만 가능하다. <br>하나의 데이터 항목에 대해&nbsp;여러 개의 공유잠금이(S-lock) 가능하다. <br>T1에서 x에 대해 S-lock을 설정한 경우, 동시에 T2에서도 x에 대해 S-lock을 설정할 수 있다. <br>다른 트랜잭션도 읽기 연산(read) 만을 실행할 수 있다. <br>T1에서 x에 대해 S-lock을 설정했다면, T2에서도 T1이 S-lock(x)을 실행하는 동안 read(x) 연산만 가능하다. <br>\n배타 잠금 (exclusive lock/x-lock): 데이터를 변경할 때 사용하는 락 <br>배타잠금을 설정한 트랜잭션은 데이터 항목에 대해서&nbsp;읽기 연산(read)과 쓰기 연산(write) 모두 가능하다. <br>T1에서 x에 대해 S-lock을 설정했다면, T1은 read(x) 연산과 write(x) 연산 모두 가능하다. <br>하나의 데이터 항목에 대해서는&nbsp;하나의 배타잠금(X-lock)만 가능하다.\n<br>동시에 여러 개의 배타잠금은 불가능하다. <br>T1에서 x에 대해 X-lock을 설정했다면, T1에서 unlock(x)를 하기 전까지 T2에서 x에 대해 X-lock을 설정할 수 없다. <br>다른 트랜잭션은 읽기 연산(read)와 쓰기 연산(write) 모두 불가능하다. <br>T1에서 x에 대해 X-lock을 설정했다면, T2에서는 T1에서 unlock(x)를 하기 전까지 read(x), write(x) 연산이 모두 불가능하다. <br>\n추가) 교착상태 (deadlock) <br>모든 transaction이 대기 상태에 들어가 아무런 진행이 일어나지 않는 상태를 교착상태라고 한다. 교착상태에 빠지면 외부에서 강제로 트랜잭션을 중단하거나 잠금을 해제하지 않는 이상 무한정 대기 상태로 남게 된다. <br><br><br>\n<br>\n낙관적 락 (optimistic lock) <br>충돌이 발생할 가능성이 낮은 경우 사용되는 동시성 제어 기법이다.\n<br>충돌이 발생하면 재시도 또는 병합을 통해 충돌을 해결한다.\n<br>실제로 lock을 사용하지 않고&nbsp;version을 이용함으로서 정합성을 맞추는 방법이다. 데이터를 읽을 때 lock을 사용하지 않고, 업데이트 시&nbsp;내가 읽은 version이 맞는지 충돌 여부를 확인하여 처리한다.\n<br>즉, 자원에 lock을 직접 걸어서 선점하지 않고, 동시성 문제가 실제로 발생하면 그때가서 처리하는 방식이다. <br>\n비관적 락 (pessimistic lock) <br>충돌이 발생할 가능성이 높은 경우 사용되는 동시성 제어 기법이다.\n<br>데이터를 읽거나 수정하기 전에 lock을 획득하여 다른 사용자의 액세스를 차단하고, lock을 가진 스레드만 접근하도록 제어한다.\n<br>데이터에 대한 배타적인 액세스 권한을 보장하여 충돌을 방지한다.\n<br>실제로 데이터에 lock을 걸어서 정합성을 맞추는 방법으로, 자원 요청에 따른 동시성 문제가 발생할 것이라고 예상하고 lock을 걸어버리는 방법이다.\n<br>즉, 트랜젝션이 시작할 때 s-lock이나 x-lock을 실제로 걸고 시작한다. <br>\n낙관적 락 vs. 비관적 락\n<img alt=\"Pasted image 20250228150552.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20250228150552.png\" target=\"_self\"> <br>\n분산락 (distributed lock) <br>여러 컴퓨터 또는 프로세스 간에 공유된 자원에 대한 동시 액세스를 제어하기 위해 사용된다.\n<br>분산 시스템에서 동시성 문제를 해결하기 위해 사용되며,&nbsp;분산된 서버 또는 클러스터 간의 상호작용이 필요하다.\n<br>주로&nbsp;데이터베이스나 메시지 큐 등의 분산 시스템에서 사용된다.\n<br>대표적인 분산락 기법으로는 ZooKeeper, Redis 등이 있다.\n<br>Redis는 RedLock이라는 알고리즘을 제안하며 3가지 특성을 보장해야한다고 한다. <br>오직 한 순간에 하나의 작업자만이 락(lock) 을 걸 수 있다.\n<br>락 이후, 어떠한 문제로 인해 락을 풀지 못하고, 종료된 경우라도 다른 작업자가 락을 획득할 수 있어야합니다.\n<br>Redis 노드가 작동하는한, 모든 작업자는 락을 걸고 해체할 수 있어야합니다. <br>분산 락을 구현하기 위해 lock에 대한 정보를 Redis에 저장하고 있어야한다. 그리고 분산환경에서 여러대의 서버들은 공통된 Redis를 바라보며, 자신이 공유 자원에 접근할 수 있는지 확인한다. <br>\n스핀락 (spin lock) <br>자원에 대한 접근이 필요할 때 무한루프를 돌면서 반복적으로 확인하며, 다른 스레드가 lock을 해제할 때까지 대기한다.\n<br>경쟁 상태 (2개 이상의 프로세스가 공유 자원을 동시에 읽거나 쓰는 상황)가 짧고 자원 점유 시간이 길지 않은 경우에 효과적이다.\n<br>주로 멀티코어 시스템에서 사용되며, 락 획득을 위해 CPU를 계속 사용하므로 서버에 많은 부하를 주어 주의해야 한다.\n<br> <br>","aliases":[],"tags":[],"headers":[{"heading":"Lock ( 데이터베이스 락 ) 이란?","level":1,"id":"Lock ( 데이터베이스 락 ) 이란?"},{"heading":"1. 동시성 제어 정의","level":3,"id":"1._동시성_제어_정의"},{"heading":"2. 동시성 제어 목적","level":3,"id":"2._동시성_제어_목적"},{"heading":"3. 동시성 제어 방법","level":3,"id":"3._동시성_제어_방법"},{"heading":"Locking이란?","level":3,"id":"**Locking이란?**"},{"heading":"Locking의 종류","level":3,"id":"**Locking의_종류**"},{"heading":"Locking을 활용한 동시성 제어 기법","level":3,"id":"**Locking을_활용한_동시성_제어_기법**"}],"backlinks":[],"links":["짧은-키워드/lock-(-데이터베이스-락-)-이란.html#Lock ( 데이터베이스 락 ) 이란?","짧은-키워드/lock-(-데이터베이스-락-)-이란.html#1._동시성_제어_정의","짧은-키워드/lock-(-데이터베이스-락-)-이란.html#2._동시성_제어_목적","짧은-키워드/lock-(-데이터베이스-락-)-이란.html#3._동시성_제어_방법","짧은-키워드/lock-(-데이터베이스-락-)-이란.html#**Locking이란?**","짧은-키워드/lock-(-데이터베이스-락-)-이란.html#**Locking의_종류**","짧은-키워드/lock-(-데이터베이스-락-)-이란.html#**Locking을_활용한_동시성_제어_기법**"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/lock-(-데이터베이스-락-)-이란.html","pathToRoot":"..","createdTime":1747810937067,"modifiedTime":1747810937071,"sourceSize":8487,"sourcePath":"짧은 키워드/Lock ( 데이터베이스 락 ) 이란.md","exportPath":"짧은-키워드/lock-(-데이터베이스-락-)-이란.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250228150552.png"]},"짧은-키워드/lombok-사용시-주의사항.html":{"title":"Lombok 사용시 주의사항","icon":"","description":"<br><br><br>- 위 두개의 어노테이션을 편리하게 생성자를 자동으로 생성해 주지만, 주의를 요할 필요가 있다.\n<br>\n<br>어떠한 클래스에서 순서대로 인자를 받는 생성자가 있다고 했을 때, 개발자가 임의로 순서를 변경할 경우, 리펙토링은 전혀 작동하지 않고, lombok이 개발자가 인지하지 못하는 사이에 순서에 맞춰 두 필드를 변경해 버린다.\n<br>그렇기 때문에 순서의 구애받지 않는 @Builder 어노테이션을 사용한는 것을 권장하고 있다.\n<br><br> Mutable(변경가능한)객체에 아무런 파라미터 없이 그냥 사용하는 경우에 문제가 발생할 수 있다.\n<br>\n<br>동일한 객체임에도 불구하고 Set으로 필드값을 변경하게 되면, hashCode가 변경되면서 찾을 수 없게되는 부분이 있다. <br><br>- 위에서 설명한 @RequiredArgsConstructor 및 @EqualsAndHashCode를 포함하고 있기 때문에 사용을 피하는 것이 좋다.\n<br><br>- 불변 클래스를 생성해주는 @Value또한, @EqualsAndHashCode와 @AllArgsConstructor를 포함하고 있기 때문에 사용을 피하는것이 좋다. - 불변클래스 이기 때문에 @EqualsAndHashCode는 문제가 되지 않지만, AllArgsConstructor가 문제를 일으킬 가능성이 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Lombok 사용시 주의사항","level":1,"id":"Lombok 사용시 주의사항"},{"heading":"1. @AllArgsConstructor / @RequiredArgsConstructor 사용시","level":2,"id":"1._@AllArgsConstructor_/_@RequiredArgsConstructor_사용시"},{"heading":"2. 무분별한 @EqualsAndHashCode 사용","level":2,"id":"2._무분별한_@EqualsAndHashCode_사용"},{"heading":"3. @Data 사용금지","level":2,"id":"3._@Data_사용금지"},{"heading":"4. @Value 사용 금지","level":2,"id":"4._@Value_사용_금지"}],"backlinks":[],"links":["짧은-키워드/lombok-사용시-주의사항.html#Lombok 사용시 주의사항","짧은-키워드/lombok-사용시-주의사항.html#1._@AllArgsConstructor_/_@RequiredArgsConstructor_사용시","짧은-키워드/lombok-사용시-주의사항.html#2._무분별한_@EqualsAndHashCode_사용","짧은-키워드/lombok-사용시-주의사항.html#3._@Data_사용금지","짧은-키워드/lombok-사용시-주의사항.html#4._@Value_사용_금지"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/lombok-사용시-주의사항.html","pathToRoot":"..","createdTime":1747809947419,"modifiedTime":1747809947484,"sourceSize":1487,"sourcePath":"짧은 키워드/Lombok 사용시 주의사항.md","exportPath":"짧은-키워드/lombok-사용시-주의사항.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/maven-vs-gradle.html":{"title":"Maven VS Gradle","icon":"","description":"<br><br><br>\n<br>Apach에서 2004년 출시한 빌드 툴이다.\n<br>Ant를 사용하던 개발자들의 불편함을 해소 + 부가기능을 추가 하기위해 만들어졌다.\n<br><br>\n<br>Ant와 Maven의 장점을 모아 2012년 출시한 빌드 툴이다.\n<br>Gradel이 시기 상 늦게 출시된 만큼 사용성/성능 등 비교적 뛰어난 스펙을 갖고 있다.\n<br><br>\n<br>\nGradle의 Groovy를 이용해서 기존 XML로 작성되있던 요소들의 단점을 해소하고 있다. <br>XML의 경우 코드가 길어지면 가독성이 떨어진다.\n<br>의존관계가 복잡한 프로젝트 설정에 어려움이 있다. <br>\n특정 상황에서 Gradle의 속도는 Maven보다 훨씬 빠르다. <br>Gradle은 캐시를 사용하기 때문에 반복될 수록 속도 차이는 더욱 커진다. <br>","aliases":[],"tags":[],"headers":[{"heading":"Maven VS Gradle","level":1,"id":"Maven VS Gradle"},{"heading":"Maven","level":3,"id":"Maven"},{"heading":"Gradle","level":3,"id":"Gradle"},{"heading":"Gradle이 Maven보다 좋은점","level":2,"id":"Gradle이_Maven보다_좋은점"}],"backlinks":[],"links":["짧은-키워드/maven-vs-gradle.html#Maven VS Gradle","짧은-키워드/maven-vs-gradle.html#Maven","짧은-키워드/maven-vs-gradle.html#Gradle","짧은-키워드/maven-vs-gradle.html#Gradle이_Maven보다_좋은점"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/maven-vs-gradle.html","pathToRoot":"..","createdTime":1747811020832,"modifiedTime":1747811020860,"sourceSize":851,"sourcePath":"짧은 키워드/Maven VS Gradle.md","exportPath":"짧은-키워드/maven-vs-gradle.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/multi-thread환경에서의-singleton.html":{"title":"Multi Thread환경에서의 Singleton","icon":"","description":"<br><br>\n<br>\n일반적으로 하나의 인스턴스만 존재해야 할 경우 Singleton패턴을 사용하게 된다.\nsingle thread환경에서 사용되는 경우에는 아무런 문제가 없지만, Multi thread환경에서\nsingleton객체에 접근 시 초기화 관련하여 문제가 있다. <br>\n보통 Singleton객체를 얻는 Static메서드는 getInstance( )로 작명하는게 일반적이다. <br><br>\n<br>단순하게 문제를 해결하고자 한다면, 메서드에 synchronized 키워드만 추가해도 무방하다.\n하지만, 이는 하는 역할에 비해서 동기화 오버헤드가 심하다는 단점이 있다.\n<br><br>\n<br>간단하게 설명하면, 객체가 필요할 때로 초기화를 미루는 것이다.\n<br>public class Singleton { private Singleton() {} public static Singleton getInstance() { return LazyHolder.INSTANCE; } private static class LazyHolder { private static final Singleton INSTANCE = new Singleton(); }\n}\n<br>처음 singleton로딩 시에는 LazyHolder클래스의 변수가 없기 때문에 초기화 하지 않는다.\nLazyHolder클래스는 singleton클래스의 getInstance( ) 메서드가 참조되는 순간 class가 로딩되며 초기화 된다.<br>Class를 로딩하고 초기화하는 시점은 thread-safe가 보장되기 때문에, 성능과 안정성을 모두 보장하는 훌륭한 방법이다.","aliases":[],"tags":[],"headers":[{"heading":"Multi Thread환경에서의 Singleton","level":1,"id":"Multi Thread환경에서의 Singleton"},{"heading":"그렇다면 singleton객체를 생성하는 로직을 어떻게 thread safe하게 적용할 수 있을까?","level":5,"id":"그렇다면_singleton객체를_생성하는_로직을_어떻게_thread_safe하게_적용할_수_있을까?"},{"heading":"LazyHolder","level":3,"id":"LazyHolder"}],"backlinks":[],"links":["짧은-키워드/multi-thread환경에서의-singleton.html#Multi Thread환경에서의 Singleton","짧은-키워드/multi-thread환경에서의-singleton.html#그렇다면_singleton객체를_생성하는_로직을_어떻게_thread_safe하게_적용할_수_있을까?","짧은-키워드/multi-thread환경에서의-singleton.html#LazyHolder"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/multi-thread환경에서의-singleton.html","pathToRoot":"..","createdTime":1747811027573,"modifiedTime":1747811027576,"sourceSize":1534,"sourcePath":"짧은 키워드/Multi Thread환경에서의 Singleton.md","exportPath":"짧은-키워드/multi-thread환경에서의-singleton.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/netty란.html":{"title":"Netty란??","icon":"","description":"<br><br><br><br><br>\n<br>비동기 적으로 입출력처리를 관리하기 때문에 전송 작업이 성공했는지 실패했는지 알수 있다.\n<br>비동기식 작업에서 높은 성능을 유지할수 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Netty란??","level":1,"id":"Netty란??"},{"heading":"netty란 java기반의 네트워크 프레임워크이다.","level":2,"id":"netty란_java기반의_네트워크_프레임워크이다."},{"heading":"webClient도 Netty안에 포함되어 있다.","level":3,"id":"webClient도_Netty안에_포함되어_있다."},{"heading":"장점","level":2,"id":"장점"}],"backlinks":[],"links":["짧은-키워드/netty란.html#Netty란??","짧은-키워드/netty란.html#netty란_java기반의_네트워크_프레임워크이다.","짧은-키워드/netty란.html#webClient도_Netty안에_포함되어_있다.","짧은-키워드/netty란.html#장점"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/netty란.html","pathToRoot":"..","createdTime":1747810474560,"modifiedTime":1747810474578,"sourceSize":336,"sourcePath":"짧은 키워드/Netty란.md","exportPath":"짧은-키워드/netty란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/rest-기반의-트랜잭션.html":{"title":"REST 기반의 트랜잭션","icon":"","description":"<br><br><br><img alt=\"Pasted image 20240603173517.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240603173517.png\" target=\"_self\"><br>하지만, MSA의 경우 각 서비스마다 다른 데이터베이스를 사용하는 것이 일반적이고, 이를 하나의 데이터베이스 트렌젝션으로 처리하는 것은 기술적으로 어렵고, 처리한다 해도 긴 트렌젝션이 발생하기 때문에 효용도 적다.\n<img alt=\"Pasted image 20240603180042.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240603180042.png\" target=\"_self\"><br><br>\n<br>tcc는 분산된 REST 시스템들 간의 트랜젝션을 HTTP와 REST원칙으로 접근하여 해결하는 방법이다.\n<br>REST API 호출은 한 번에 끝내는 것이 아니라, 2번의 걸쳐서(Try / Confirm) 진행하게 된다.\n트렌젝션의 All-or-Nothing을 TCC의 REST API를 호출을 시도(Try)하고 전부 확정(Confirm)하거나 전부 취소(Cancel)하는 것으로 구현된다.<br>\n<br>Spring RestTemplate을 사용하여 HTTP 요청(POST)을 보냈을 때, try 요청의 경우 정상적인 HTTP응답(HttpStatus.CREATED)를 받으면 HTTP BODY에는 JSON형태로 Confirm하게 하거나 Cancel 할 수 있는 URL이 담겨 있다.\n<br><br>\n<br>여기서 Service에서 반환받은 값을 기준으로 Confirm 할지 Cancel할지 선택하게 된다.\n<br>중요한 것은 여기서 실제로 데이터베이스 테이블에 변경이 있는것 이 아닌, Confirm되었을때 그때 처리가 된다.\n<br><br>\n<br>여기서 받은 반환값을 토대로 Service에서는 resource 필드(JSON)을 역질렬화 하고 이를 사용하여 그때 실제로 데이터베이스에 있는 테이블을 변경하게 된다.\n<br><br>\n<br>\nTry는 리소스를 사용하기 전에 예약하는 것이다. 만약 4.구매 주문 생성에서 Try만 하고, 실패했다면 REST로 통신은 기다리고 있던(Try만 한 상태) 두 API에는 Confirm이 전달되지 않아 예약만 된 상태로 남아있게 된다. <br>\n예약된 상태는 특정 리소스를 점유하고 있다는 의미이며, 리소스를 점유하고 있는 동안에는 다른 API에서 해당 리소스를 사용하는 것은 제한된다. <br>\n따라서, 4. 행위에서 Try만 하고 실패했다면, 예약한 리소스까지 해제해주어야 한다. <br>\n분산된 환경에서 리소스를 해제하는 것은 쉬운 문제가 아닌데, TCC매커니즘에서는 Cancel과 Timeout 두가지 방법으로 예약된 리소스를 해제한다.\n<img alt=\"Pasted image 20240604102140.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240604102140.png\" target=\"_self\"> <br>REST커뮤니케이션 관전에서 자세하게 설명하면,<br>\n<br>TCC REST API Consumer(여기선 OrderService)가 Try요청\n<br>TCC REST API Provider (여기선 StockService/PaymentService)는 응답으로 Confirm하거나 Cancel할 수 있는 URI를 반환\n<br>이를 사용하여 API Consumer는 DELETE HTTP Method로 예약한 리소스에 대한 해제를 요청한다.\n<br><br><img alt=\"Pasted image 20240604144026.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240604144026.png\" target=\"_self\"><br>\n<br>클라이언트가 주문을하고, OrderService는 StockService와 PaymentService로 Try한다.\n그리고 구매 주문을 생성 후 Confirm하였다. StockService는 재고 처리에 성공을 한 반면, PaymentService는 결제에 실패한다.\n이경우에는 어떻게 일관성을 유지할 수 있을까?\n<br><br>\n<br>관계형 데이터베이스에서 트랜젝션을 처리할 때에는 데이터 적합성을 보장해야 하기 때문에 엄격한 일관성 모델을 사용한다.\n<br>하지만 결제시스템 하나의 문제로 모든 비즈니스가 멈추게 되는 문제가 발생한다.(보통은 멈추는게 맞다)\n<br><br>\n<br>\nStockService와 PaymentService는 OrderService로부터 받은 Confirm요청을 Queue나 Log파일에 큐잉 하고, 이를 비동기적으로 처리한다. Confirm처리 과정에서 오류가 나는 경우 계속해서 재시도하여 결국(언젠가) 처리하게 한다. <br>\n이렇게 단기적으로 일관성을 잃더라도(클라이언트 입장에서는 성공했다고 느끼지만, 실제 결제처리가 되지 않았을 수도 있다.) 결국에서는 일관성을 유지하는 모델을 결과적 일관성 이라고 한다. <br>\n단, 결과적 일관성 모델은 단기적으로 일관성을 잃어버렸을 때를 대비한 화면 처리 등이 필요하다. <br>\nex) 아마존에서 전자책을 구입한 후, 결제 과정이 진행되었고 이후 카드가 정상처리되지 않는 메일을 받아, 2일후에 제대로 결제처리를 하였다. ","aliases":[],"tags":[],"headers":[{"heading":"REST 기반의 트랜잭션","level":1,"id":"REST 기반의 트랜잭션"},{"heading":"모놀리틱 아키텍처에서는 일반적으로 데이터베이스의 트렌젝션에 의존한다.","level":3,"id":"모놀리틱_아키텍처에서는_일반적으로_데이터베이스의_트렌젝션에_의존한다."},{"heading":"TCC ( Try-Confirm/Cancel)","level":2,"id":"TCC_(_Try-Confirm/Cancel)"},{"heading":"@RestController를 사용하여 HTTP POST Method와 연결할 수 있다.","level":3,"id":"@RestController를_사용하여_HTTP_POST_Method와_연결할_수_있다."},{"heading":"이후 @PutMapping을 사용하여 HTTP PUT Method와 연결된다.","level":3,"id":"이후_@PutMapping을_사용하여_HTTP_PUT_Method와_연결된다."},{"heading":"예약한 리소스 문제","level":2,"id":"예약한_리소스_문제"},{"heading":"엄격한 일관성과 결과적 일관성","level":2,"id":"엄격한_일관성과_결과적_일관성"},{"heading":"엄격한 일관성","level":4,"id":"엄격한_일관성"},{"heading":"결과적 일관성","level":4,"id":"결과적_일관성"}],"backlinks":[],"links":["짧은-키워드/rest-기반의-트랜잭션.html#REST 기반의 트랜잭션","짧은-키워드/rest-기반의-트랜잭션.html#모놀리틱_아키텍처에서는_일반적으로_데이터베이스의_트렌젝션에_의존한다.","짧은-키워드/rest-기반의-트랜잭션.html#TCC_(_Try-Confirm/Cancel)","짧은-키워드/rest-기반의-트랜잭션.html#@RestController를_사용하여_HTTP_POST_Method와_연결할_수_있다.","짧은-키워드/rest-기반의-트랜잭션.html#이후_@PutMapping을_사용하여_HTTP_PUT_Method와_연결된다.","짧은-키워드/rest-기반의-트랜잭션.html#예약한_리소스_문제","짧은-키워드/rest-기반의-트랜잭션.html#엄격한_일관성과_결과적_일관성","짧은-키워드/rest-기반의-트랜잭션.html#엄격한_일관성","짧은-키워드/rest-기반의-트랜잭션.html#결과적_일관성"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/rest-기반의-트랜잭션.html","pathToRoot":"..","createdTime":1747810959907,"modifiedTime":1747810959991,"sourceSize":4662,"sourcePath":"짧은 키워드/REST 기반의 트랜잭션.md","exportPath":"짧은-키워드/rest-기반의-트랜잭션.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240603173517.png","사진-및-문서/pasted-image-20240603180042.png","사진-및-문서/pasted-image-20240604102140.png","사진-및-문서/pasted-image-20240604144026.png"]},"짧은-키워드/service의-순환참조를-막는-방법.html":{"title":"Service의 순환참조를 막는 방법?","icon":"","description":"<br><br><br>순서를 맞추어 호출하는 로직과 예외처리를하는 로직이 컨트롤러에 집중되어 있다면 가독성이 떨어지게된다 이를 해결하기위해, 서비스에서 로직을 구현하게 된다면 서비스에서 서비스를 호출하는 순환참조를 야기할 수 있게된다. 이를위한 해결법으로 서비스를 주입받는 메인 서비스를 만들어 여러서비스를 주입받고 한개의 서비스에서 이를 동작시킬 수 있다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Service의 순환참조를 막는 방법?","level":1,"id":"Service의 순환참조를 막는 방법?"},{"heading":"순서를 지켜야하는 service호출이있을때, 컨트롤러에서 서비스를 차례대로 호출하는것이 아니라 서비스를 주입받는 서비스를 만들어 호출하는 이유?","level":3,"id":"순서를_지켜야하는_service호출이있을때,_컨트롤러에서_서비스를_차례대로_호출하는것이_아니라_서비스를_주입받는_서비스를_만들어_호출하는_이유?"}],"backlinks":[],"links":["짧은-키워드/service의-순환참조를-막는-방법.html#Service의 순환참조를 막는 방법?","짧은-키워드/service의-순환참조를-막는-방법.html#순서를_지켜야하는_service호출이있을때,_컨트롤러에서_서비스를_차례대로_호출하는것이_아니라_서비스를_주입받는_서비스를_만들어_호출하는_이유?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/service의-순환참조를-막는-방법.html","pathToRoot":"..","createdTime":1747810975695,"modifiedTime":1747810975724,"sourceSize":739,"sourcePath":"짧은 키워드/Service의 순환참조를 막는 방법.md","exportPath":"짧은-키워드/service의-순환참조를-막는-방법.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring-어노테이션@-간단설명모음.html":{"title":"Spring 어노테이션@ 간단설명모음","icon":"","description":"<br><br><br>JAVA오브젝트로 자동 변환해준다. (Controller기준 받는 입장)\n<br>\n<br>프론트앤드에서 Ajax요청시 JSON형식으로 값이 넘어오는데,\n이 JSON형식을 받을때 사용하는 어노테이션이다. <br>자동으로 자바객체로 바꿔준다.\n<br><br>- 외부API에서 name으로 넘긴 값을 String name에 저장함.\n<br><br>- Autowired/생성자/setter 이렇게 총 3가지 방법으로 의존성을 주입받을 수 있다.\n<br><br><br>- 경로변수는 {id}로 둘러싸인 값을 의미한다.\n- 주로 상세조회, 수정, 삭제 등의 작업에서 리소스 식별자로 사용된다.\n<br><br>하이버네이트가 오브젝트를 대신 갱신한다.\n<br><br>*빌더 패턴이란? : 생성자에 파라미터를 주입하여 생성하는것이 아닌, 별도의 Builder를 두어서 객체를 생성하는것을 말한다.\n생성자가 없는경우 : 모든 맴버 변수를 파라미터로 받는 기본 생성자 생성\n생성자가 있는 경우 : 따로 생성자를 생성하지 않음\n<br><br>@Getter/@Setter/@ToString/@EqualsAndHashCode/@RequiredArgsConstructor를 자동으로 적용시켜준다.\n<br><br>@NonNull이나 final이 붙은 필드값 들에 대해 생성자를 자동으로 생성해준다. ( @Autowired를 사용하지 않고 의존성주입이 가능하다)\n해당 어노테이션을 사용하면 클래스가 의존하고 있는 필드를 간단하게 초기화할 수 있다.\n<br><br>해당 어노테이션을 사용하면 클래스의 모든 필드값을 한 번에 초기화할 수 있다.\n<br><br>해당 어노테이션을 사용하면 클래스에 명시적으로 선언된 생성자가 없더라도 인스턴스를 생성할 수 있다. 개발자가 실수로 클래스의 필드 중 하나의 필드에 대한값 설정을 누락 시킬수도 있어, 객체는 불완전한 상태가 되어버린다.\n이를 방지하고자 모든 필드값을 가지도록 강제하고 싶다면, AccessLevel.PROTECTED 속성을 부여해줘 해결할 수 있다.\n다음과 같은 속성을 부여해주면, 기본 생성자의 접근 제어가되어 IDE단계에서 누락을 방지할 수 있다.\n<br><br>- equals는 두 객체의 내용이 같은지, 동등성을 비교하는 연산자이다.\n- hashcode는 두 객체가 같은 객체인지, 동일성을 비교하는 연산자 이다.\n","aliases":[],"tags":[],"headers":[{"heading":"Spring 어노테이션@ 간단설명모음","level":1,"id":"Spring 어노테이션@ 간단설명모음"},{"heading":"@RequestBody는 API호출시 넘겨주는 파라미터값(JSON등)을","level":2,"id":"@RequestBody는_API호출시_넘겨주는_파라미터값(JSON등)을"},{"heading":"@RequestParam은 외부API호출시 넘겨주는 파라미터값을 가져옴","level":2,"id":"@RequestParam은_외부API호출시_넘겨주는_파라미터값을_가져옴"},{"heading":"@Autowired는 빈(의존성)을 주입받기위해 사용.","level":2,"id":"@Autowired는_빈(의존성)을_주입받기위해_사용."},{"heading":"@Entity는 데이터베이스와 직접 연결된 클래스를 설정한다.","level":2,"id":"@Entity는_데이터베이스와_직접_연결된_클래스를_설정한다."},{"heading":"@PathVariable은 URL(경로)에서 변수를 추출하여 매개변수에 할당한다.","level":2,"id":"@PathVariable은_URL(경로)에서_변수를_추출하여_매개변수에_할당한다."},{"heading":"@Generated는 개발자가 아닌, DB에서 기계적으로 생성한 클래스이다.","level":2,"id":"@Generated는_개발자가_아닌,_DB에서_기계적으로_생성한_클래스이다."},{"heading":"@Builder는 빌더패턴을 완벽하게 지원해주는 어노테이션이다.","level":2,"id":"@Builder는_빌더패턴을_완벽하게_지원해주는_어노테이션이다."},{"heading":"@Data","level":2,"id":"@Data"},{"heading":"@RequiredArgsConstructor","level":2,"id":"@RequiredArgsConstructor"},{"heading":"@AllArgsConstructor 는 모든 필드값을 파라미터로 받는 생성자를 생성해준다.","level":2,"id":"@AllArgsConstructor_는_모든_필드값을_파라미터로_받는_생성자를_생성해준다."},{"heading":"@NoArgsConstructor 는 파라미터가 없는 디폴트 생성자를 생성해준다.","level":2,"id":"@NoArgsConstructor_는_파라미터가_없는_디폴트_생성자를_생성해준다."},{"heading":"@EqualsAndHashCode는 equals와 hashCode를 자동으로 생성해준다.","level":2,"id":"@EqualsAndHashCode는_equals와_hashCode를_자동으로_생성해준다."}],"backlinks":[],"links":["짧은-키워드/spring-어노테이션@-간단설명모음.html#Spring 어노테이션@ 간단설명모음","짧은-키워드/spring-어노테이션@-간단설명모음.html#@RequestBody는_API호출시_넘겨주는_파라미터값(JSON등)을","짧은-키워드/spring-어노테이션@-간단설명모음.html#@RequestParam은_외부API호출시_넘겨주는_파라미터값을_가져옴","짧은-키워드/spring-어노테이션@-간단설명모음.html#@Autowired는_빈(의존성)을_주입받기위해_사용.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@Entity는_데이터베이스와_직접_연결된_클래스를_설정한다.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@PathVariable은_URL(경로)에서_변수를_추출하여_매개변수에_할당한다.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@Generated는_개발자가_아닌,_DB에서_기계적으로_생성한_클래스이다.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@Builder는_빌더패턴을_완벽하게_지원해주는_어노테이션이다.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@Data","짧은-키워드/spring-어노테이션@-간단설명모음.html#@RequiredArgsConstructor","짧은-키워드/spring-어노테이션@-간단설명모음.html#@AllArgsConstructor_는_모든_필드값을_파라미터로_받는_생성자를_생성해준다.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@NoArgsConstructor_는_파라미터가_없는_디폴트_생성자를_생성해준다.","짧은-키워드/spring-어노테이션@-간단설명모음.html#@EqualsAndHashCode는_equals와_hashCode를_자동으로_생성해준다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-어노테이션@-간단설명모음.html","pathToRoot":"..","createdTime":1747809877197,"modifiedTime":1747809877221,"sourceSize":3197,"sourcePath":"짧은 키워드/Spring 어노테이션@ 간단설명모음.md","exportPath":"짧은-키워드/spring-어노테이션@-간단설명모음.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring-aop.html":{"title":"Spring AOP","icon":"","description":"<br><br><br>\n<br>컴파일 타임 위빙 (Compile-Time Weaving) <br>소스 코드 컴파일 시, Aspect가 대상 객체에 결합됩니다.\n<br>AspectJ 같은 프레임워크에서는 가능하지만, Spring AOP는 이 방식을 지원하지 않습니다. <br>로드 타임 위빙 (Load-Time Weaving) <br>클래스 파일을 JVM에 로드할 때 Aspect를 결합합니다.\n<br>Spring AOP는 기본적으로 지원하지 않으나, AspectJ 통합 설정을 통해 사용할 수 있습니다. <br>런타임 위빙 (Runtime Weaving) <br>Spring AOP의 기본 방식입니다.\n<br>런타임에 프록시 객체를 생성하여 부가 기능을 결합합니다.\n<br>JDK 동적 프록시 또는 CGLIB를 사용하여 대상 객체를 프록시로 감싸고, 프록시가 메서드 호출을 가로채서 Advice를 실행합니다. <br><br><br><br><br><br><br>\n<br>프록시 생성 시: 클래스 단위에서 PointCut 조건에 따라 프록시가 생성됩니다.\n<br>메서드 호출 시: 개별 메서드 단위에서 PointCut 조건을 재평가합니다.\n<br><br>\n<br>프록시 생성은 클래스 단위로 이루어지지만, PointCut 조건은 메서드 단위로 적용됩니다.\n<br>런타임 정보(매개변수, 리턴 타입 등)를 기반으로 동적 조건을 평가해야 하는 경우가 있습니다.\n<br>Spring AOP의 유연성과 확장성을 보장하기 위한 설계입니다.\n<br><br><br>","aliases":[],"tags":[],"headers":[{"heading":"Spring AOP","level":1,"id":"Spring AOP"},{"heading":"AOP위빙 방식","level":2,"id":"AOP위빙_방식"},{"heading":"pointcut : advice를 적용시킬 조건 정의","level":3,"id":"pointcut__advice를_적용시킬_조건_정의"},{"heading":"advice : pointcut으로 적용시킨 프록시에서의 동작 정의","level":3,"id":"advice__pointcut으로_적용시킨_프록시에서의_동작_정의"},{"heading":"aspect : pointcut + advice","level":3,"id":"aspect__pointcut_+_advice"},{"heading":"weaving : AOP 가 aspect를 적용시키는 행위","level":3,"id":"weaving__AOP_가_aspect를_적용시키는_행위"},{"heading":"AOP의 PointCut 실행 시점?","level":1,"id":"AOP의_PointCut_실행_시점?"},{"heading":"PointCut 조건 재평가의 이유:","level":4,"id":"**PointCut_조건_재평가의_이유**"},{"heading":"결론 : 실행 시 1번 , 메서드 최초 실행 시 1번. 총 2번만 실행된다.","level":4,"id":"결론__실행_시_1번_,_메서드_최초_실행_시_1번._총_2번만_실행된다."},{"heading":"단, Advice는 메서드 최초 실행시 조건에 부합하다면 매번 실행된다.","level":5,"id":"단,_Advice는_메서드_최초_실행시_조건에_부합하다면_매번_실행된다."}],"backlinks":[],"links":["짧은-키워드/spring-aop.html#Spring AOP","짧은-키워드/spring-aop.html#AOP위빙_방식","짧은-키워드/spring-aop.html#pointcut__advice를_적용시킬_조건_정의","짧은-키워드/spring-aop.html#advice__pointcut으로_적용시킨_프록시에서의_동작_정의","짧은-키워드/spring-aop.html#aspect__pointcut_+_advice","짧은-키워드/spring-aop.html#weaving__AOP_가_aspect를_적용시키는_행위","짧은-키워드/spring-aop.html#AOP의_PointCut_실행_시점?","짧은-키워드/spring-aop.html#**PointCut_조건_재평가의_이유**","짧은-키워드/spring-aop.html#결론__실행_시_1번_,_메서드_최초_실행_시_1번._총_2번만_실행된다.","짧은-키워드/spring-aop.html#단,_Advice는_메서드_최초_실행시_조건에_부합하다면_매번_실행된다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-aop.html","pathToRoot":"..","createdTime":1747808604466,"modifiedTime":1747808604494,"sourceSize":1912,"sourcePath":"짧은 키워드/Spring AOP.md","exportPath":"짧은-키워드/spring-aop.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring-batch란.html":{"title":"Spring Batch란?","icon":"","description":"<br><br>- 스프링배치는 엔터프라이즈 시스템의 강력한 배치 어플리케이션을 개발할 수 있도록 설계된 배치프레임워크이다.\n- 일괄처리(Batch Processing), 분산처리 작업을 효율적으로 처리할 수있는 기능 제공.\n- 로깅/추적, 트렌잭션관리, 작업 처리통계, 작업재시작, 리소스관리 등 대용량 레코드 처리에 필수적인 기능을 제공\n- SpringBatch는 JobRepository로 동작하는데, 여기에 Job / JobLauncher / Step이 포함되어있다.\n<br>\n<br>SpringBatch는 대량의 데이터를 일괄적으로 처리할 뿐\n특정 주기마다 자동으로 돌아가는 스케줄링 기능은 없다.\n단지, 스케줄러와 함계 사용할 수 있도록 설계되어있을 뿐이다.\n<br>그렇기 때문에 스케줄링 라이브러리인 Quartz라이브러리를 추가하여 같이 사용한다.<br>","aliases":[],"tags":[],"headers":[{"heading":"Spring Batch란?","level":1,"id":"Spring Batch란?"}],"backlinks":[],"links":["짧은-키워드/spring-batch란.html#Spring Batch란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-batch란.html","pathToRoot":"..","createdTime":1747810290574,"modifiedTime":1747810290578,"sourceSize":902,"sourcePath":"짧은 키워드/Spring Batch란.md","exportPath":"짧은-키워드/spring-batch란.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html":{"title":"Spring Batch에서의 파티셔닝(Partitioning)","icon":"","description":"<br><br>\n<br>Tasklet 방식과 Chunk 방식 모두 사용 가능하지만, 보통 Chunk방식에서 사용한다.\n<br><br>\n<br>대량 데이터를 효율적으로 처리하기 위해 데이터를 여러 개의 작은 조각(Partition)으로 나눠 병렬적으로 처리하는 기술입니다. Spring Batch에서 파티셔닝은 마스터-슬레이브 패턴을 사용하며, 마스터는 작업을 분할하고 슬레이브는 각각의 분할된 작업을 수행합니다.\n<br><br>import org.springframework.batch.core.partition.support.Partitioner;\nimport org.springframework.batch.item.ExecutionContext;\nimport java.util.HashMap;\nimport java.util.Map; public class RangePartitioner implements Partitioner { @Override public Map&lt;String, ExecutionContext&gt; partition(int gridSize) { Map&lt;String, ExecutionContext&gt; partitions = new HashMap&lt;&gt;(); int min = 1; // 데이터베이스 ID의 최소값 int max = 5; // 데이터베이스 ID의 최대값 int targetSize = (max - min) / gridSize + 1; // 각 Partition의 범위 크기 int start = min; int end = start + targetSize - 1; for (int i = 0; i &lt; gridSize; i++) { ExecutionContext context = new ExecutionContext(); context.putInt(\"minId\", start); // 시작 ID context.putInt(\"maxId\", end); // 종료 ID partitions.put(\"partition\" + i, context); start += targetSize; end += targetSize; } return partitions; }\n}\n<br><br><br>\n<br>데이터베이스에 100개의 레코드가 있음.\n<br>gridSize = 4: 데이터를 4개의 Partition으로 나눔.\n<br>chunkSize = 10: 각 Partition에서 데이터를 10개씩 읽어 처리.\n<br>스레드 풀 크기 = 4: 4개의 Partition이 동시에 실행 가능.\n<br><br>코드가 여러줄 나올거같진 않아서 방식은\n페어 프로그래밍 방식으로 진행하도록 하죠<br>개발 절차는 이렇게 갈 예정이에요<br>\n<br>Chunk, Partioning방식을 Job을 추가 개발 (기존 balanceJob 유지)\n<br>당분간 두 Job을 병행하면서 비교\n<br>추가한 Job 기능에 문제없다면 기존 balanceJob 삭제\n<br><br>\n<br>\nPartition 생성: <br>Partition 1: ID 1 ~ 25\n<br>Partition 2: ID 26 ~ 50\n<br>Partition 3: ID 51 ~ 75\n<br>Partition 4: ID 76 ~ 100 <br>\n각 Partition에서 Chunk 처리: <br>Partition 1: <br>Chunk 1: ID 1 ~ 10 → 커밋\n<br>Chunk 2: ID 11 ~ 20 → 커밋\n<br>Chunk 3: ID 21 ~ 25 → 커밋 <br>Partition 2: <br>Chunk 1: ID 26 ~ 35 → 커밋\n<br>Chunk 2: ID 36 ~ 45 → 커밋\n<br>Chunk 3: ID 46 ~ 50 → 커밋 <br>나머지 Partition도 동일 방식으로 처리. <br>\n병렬 실행: <br>스레드 풀 크기 = 4이므로 4개의 Partition이 동시에 실행됩니다.\n<br>Partition 처리 순서는 스레드 풀에서 처리되는 순서에 따라 다를 수 있음. <br>\n트랜잭션 관리: <br>각 Partition은 독립적인 트랜잭션을 가짐.\n<br>각 Chunk가 커밋될 때마다 트랜잭션이 종료됨. <br><br><br><br>","aliases":[],"tags":[],"headers":[{"heading":"Spring Batch에서의 파티셔닝(Partitioning)","level":1,"id":"Spring Batch에서의 파티셔닝(Partitioning)"},{"heading":"파티셔닝(Partitioning)","level":3,"id":"파티셔닝(Partitioning)"},{"heading":"파티션너(파티션 별 범위 - 컨텍스트 범위 설정)","level":4,"id":"파티션너(파티션_별_범위_-_컨텍스트_범위_설정)"},{"heading":"Chunk와 Partitioning의 병렬 실행 예제","level":3,"id":"**Chunk와_Partitioning의_병렬_실행_예제**"},{"heading":"예제 시나리오:","level":4,"id":"예제_시나리오"},{"heading":"실행 흐름:","level":4,"id":"실행_흐름"},{"heading":"ThreadPoolSize : 동시에 실행시킬 스테리드의 개수","level":3,"id":"ThreadPoolSize__동시에_실행시킬_스테리드의_개수"},{"heading":"gridSize : 실제로 제단할 사이즈(데이터를 얼마나 세분화해서 각 파티션 작업에 할당할 건지)","level":3,"id":"gridSize__실제로_제단할_사이즈(데이터를_얼마나_세분화해서_각_파티션_작업에_할당할_건지)"},{"heading":"QueueCapacity : 대기열 크기","level":3,"id":"QueueCapacity__대기열_크기"}],"backlinks":[],"links":["짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#Spring Batch에서의 파티셔닝(Partitioning)","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#파티셔닝(Partitioning)","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#파티션너(파티션_별_범위_-_컨텍스트_범위_설정)","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#**Chunk와_Partitioning의_병렬_실행_예제**","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#예제_시나리오","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#실행_흐름","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#ThreadPoolSize__동시에_실행시킬_스테리드의_개수","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#gridSize__실제로_제단할_사이즈(데이터를_얼마나_세분화해서_각_파티션_작업에_할당할_건지)","짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html#QueueCapacity__대기열_크기"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html","pathToRoot":"..","createdTime":1747810327950,"modifiedTime":1747810327954,"sourceSize":3549,"sourcePath":"짧은 키워드/Spring Batch에서의 파티셔닝(Partitioning).md","exportPath":"짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring-integration이란.html":{"title":"Spring Integration이란?","icon":"","description":"<br><br>\n<br>\n애플리케이션 내부-외부 사이의 메시징을 가능하게 하는 프레임워크이다. <br>\nSpring Framwork에서 매세징이란 메타데이터와 함께 결합되어있는 이련의 자바 오브젝트를 위한 포괄적인 Wrapper를 말한다. 메시지는 여러개의 헤더로 구성된다. <br>\nEnterprise Integration Patterns은 엔터프라이즈 환경에서 사용하고 있는 다양한 분야(ex. 결제,메일, 각 부서별 서비스) 의 애플리케이션을 통합, 즉 유기적으로 연결해서 효율적으로 적절하게 통합하는 방법을 여러 패턴을 통해 제시했다. <br>\n하나의 동작을 하는 서비스의 각각의 기능들(프로젝트)이 내/외부 모듈과 접촉하는 부분을 쉽게 구성할 수 있도록 하는 기능들을 제공한다. <br><br>\n<br>채널: 한 요소로부터 다른 요소로 메시지를 전달\n<br>필터: 조건에 맞는 메시지가 플로우를 통과하게 해줌\n<br>변환기: 메시지 값을 변경하거나 메시지 페이로드의 타입을 다른 타입으로 변환\n<br>라우터: 여러 채널 중 하나로 메시지를 전달하며 대개 메시지 헤더를 기반으로 함\n<br>분배기: 들어오는 메시지를 두 개 이상의 메시지로 분할하며, 분할된 각 메시지는 다른 채널로 전송\n<br>집적기: 분배기와 상반된 것으로 별개의 채널로부터 전달되는 다수의 메시지를 하나의메시지로 결합함\n<br>서비스 액티베이터: 메시지를 처리하도록 자바 메서드에 메시지를 넘겨준 후 메서드의 반환값을 출력 채널로 전송\n<br>채널 어댑터: 외부 시스템에 채널을 연결함. 외부 시스템으로부터 입력을 받거나 쓸 수 있음\n<br>게이트웨이: 인터페이스를 통해 통합플로우로 데이터를 전달\n<br><br>\n<br>Spring Integration은 'pipe and filters' 모델을 구현하기 위해 3가지 핵심 개념으로 구성되어 있다.\n<br><br>header, payload로 구성되어 있는 내용을 포함하고 있는 generic wrapper. 컴포넌트 간에 이동되는 실제 데이터이다.\n<br><img alt=\"Pasted image 20240605160336.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240605160336.png\" target=\"_self\"><br><br>pipes-and-filters 모델의 pipe에 해당.\n컴포넌트간의 메세지 중간 통로 역할을 함으로써 컴포넌트간 디컬플링을 유지 할 수 있도록 하며 interception, monitering 포인트가 될 수 있다. 다른 주요 기능 중 하나는, 메세지 버퍼 역할을 할 수 있는 Queue로써 동작할 수 있다.\nFIFO방식으로 컨슈머가 가져갈 때 까지 큐에 저장된다.\n<br>ex)\n@Bean\npublic MessageChannel sampleChannel() {\nreturn new DirectChannel();\n}\n-&gt; DirectChannel은 Point to Point로, 하나의 MessageHeader에게 Message를 전달한다.\n이외에도 다양한 체널종류가 있다.<br><br>pipes-and-filters 모델의 filters에 해당.\nSpring integration상에서 채널을 통해서 메세지를 받고, 소비하는 주체이며 하나의 클래스이다.\n여기서 말하는 EndPoint란 Spring integration이 구성할 파이프라인의 끝단이 아닌, 파이프라인 중간에서 메세지를 변경하거나 필터링 하거나, 다른 채널로 라우팅하는 요소이다.\n<br>ex)\n@MessageEndpoint\npublic class serverEndpoint { ...\n}\n<br>\n<br>\nSpring integration에서 일련의 작업들을 정의한 플로우를 integration flow 라고 하는데, 이 플로우가 Message Endpoint로 구성되어있다. <br>\n엔드포인트는 작업 타입에 따라 크게 그 종류를 나눌 수 있는데 Transformer(변형), Filter(필터링), Router(메세지를 특정 채널로 전송), Splitter(메세지를 분리하여 여러 채널로 전송), Aggregator(splitter의 반대), Service Activator(메세지로 특정 작업을 수행할 수 있는 핸들러를 붙일 수 있는 엔드포인트), Channel Adapter(외부 시스템과 입출력이 가능)가 있다. <br><br>\n<br>통합 파이프라인 중간에 위치하며, 조건을 기반으로 플로우의 전 단계로부터 다음단계로의 메세지 전달에 조건을 달 수 있다.\nex)\n<br>@Filter( inputChannel=\"numberChannel\", outputchannel=\"evenNumberChannel\" )\npublic boolean evenNumberFilter( Integer number ) { return number % 2 == 0; //숫자를 받아 짝수만 전달\n}\n<br><br>\n<br>입력체널로 부터 메세지를 수신하고, 이 메세지를 MessageHandler 인터페이스를 통해 구현한 클래스에 전달(서비스호출)한다.\n<br>서비스를 메시징 시스템에 연결하기 위한 앤드포인트이다.\n<br>입력 채널이 설정되어 있어야 하고, 서비스가 값을 리턴하도록 구현했다면 출력 채널도 설정해야한다.\n<br>**만약 출력체널을 설정하지 않았을 때 메세지에 \"return address\"가 있다면 이 헤더에 지정한 체널로 응답을 전송한다.\n<br>MessageChennel메서드를 입력해서 파이프라인을 구축한다,\n<br>ex)\n@ServiceActivator(inputChannel = \"sampleChannel\") { }\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Spring Integration이란?","level":1,"id":"Spring Integration이란?"},{"heading":"Spring Integration을 구성하는 컴포넌트 종류","level":3,"id":"Spring_Integration을_구성하는_컴포넌트_종류"},{"heading":"3가지의 메인 Component","level":2,"id":"3가지의_메인_Component"},{"heading":"1. Message","level":4,"id":"1._Message"},{"heading":"2. Message Channel","level":4,"id":"2._Message_Channel"},{"heading":"3. Message Endpoint","level":4,"id":"3._Message_Endpoint"},{"heading":"Filter 란?","level":2,"id":"Filter_란?"},{"heading":"ServiceActivator 란?","level":2,"id":"ServiceActivator_란?"}],"backlinks":[],"links":["짧은-키워드/spring-integration이란.html#Spring Integration이란?","짧은-키워드/spring-integration이란.html#Spring_Integration을_구성하는_컴포넌트_종류","짧은-키워드/spring-integration이란.html#3가지의_메인_Component","짧은-키워드/spring-integration이란.html#1._Message","짧은-키워드/spring-integration이란.html#2._Message_Channel","짧은-키워드/spring-integration이란.html#3._Message_Endpoint","짧은-키워드/spring-integration이란.html#Filter_란?","짧은-키워드/spring-integration이란.html#ServiceActivator_란?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-integration이란.html","pathToRoot":"..","createdTime":1747810395447,"modifiedTime":1747810395533,"sourceSize":5140,"sourcePath":"짧은 키워드/Spring Integration이란.md","exportPath":"짧은-키워드/spring-integration이란.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240605160336.png"]},"짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html":{"title":"Spring MVC의 Service와 ServiceImpl 구조","icon":"","description":"<br><br>\n<br>\n해당 구조가 갖는 장점이 무엇인가?\n먼저 Serviced에 인터페이스를 구현하여 세부 구현체를 숨기고 인터페이스를 바라보게 함으로써 클래스간의 의존관계를 줄이는것 이다.\n좀 더 쉽게 정리하면,\n하나의 인터페이스를 구현하는 여러개의 구현체가 있고, 기능에 따라 적절한 구현체가 드어감으로써 다형성을 주기위함이다. <br>\n하지만, 인터페이스 하나에 구현체 한개만 사용하는경우는 어떠한가?\n이렇게 된다면, 의존관계를 줄여주는 효과도, 다형성을 주는 효과도 없게된다.\n하지만 보통의 경우 한개의 기능을하는 인터페이스를 여러기능의 구현체로 나누는 일은 쉽게 일어나지 않는다. <br>public interface CardPaymentService { void pay();\n} public class ShinhanCardPaymentService implements CardPaymentService{ private ShinhanCard shinhanCard; @Override public void pay() { shinhanCard.pay(); //신한 카드 결제 API 호출 // 결제를 위한 비즈니스 로직 실행.... }\n}\n<br><br>\n<br>위와 같은 경우, 하나의 인터페이스에 하나의 구현체를 갖지만, 향후 추가적으로 구현체가 더 생길여지가 있으니, 인터페이스를 두는것이 바람직 하다고 할 수 있다.\n<br>그렇다면 향후 구현체가 추가될 계획이 없는 기능들 까지 인터페이스를 만들어주어야 하는가?<br>\n<br>그렇지 않다, 예를들어 간단하게 아이디를 기반으로한 조회기능 등은 인터페이스를 구현하지 않고 바로 서비스 객체를 생성하는것이 옳다.\n<br>public interface ChangePasswordService { public void change(MemberId id, PasswordDto.ChangeRequest dto);\n} public class ByAuthChangePasswordService implements ChangePasswordService { private MemberFindService memberFindService; @Override public void change(MemberId id, PasswordDto.ChangeRequest dto) { if (dto.getAuthCode().equals(\"인증 코드가 적합한지 로직 추가...\")) { final Member member = memberFindService.findById(id); final String newPassword = dto.getNewPassword().getValue(); member.changePassword(newPassword); // 필요로직... } }\n} public class ByPasswordChangePasswordService implements ChangePasswordService { private MemberFindService memberFindService; @Override public void change(MemberId id, PasswordDto.ChangeRequest dto) { if (dto.getPassword().equals(\"비밀번호가 일치하는지 판단 로직...\")) { final Member member = memberFindService.findById(id); final String newPassword = dto.getNewPassword().getValue(); member.changePassword(newPassword); } }\n}\n<br>이렇게 비밀번호를 변경하는 기능같은 경우에는 2가지 이상의 경우가 있기때문에 인터페이스로 구현하는것이 옳아보인다.<br><br>","aliases":[],"tags":[],"headers":[{"heading":"Spring MVC의 Service와 ServiceImpl 구조","level":1,"id":"Spring MVC의 Service와 ServiceImpl 구조"},{"heading":"하나의 인터페이스의 하나의 구현체","level":3,"id":"하나의_인터페이스의_하나의_구현체"},{"heading":"결론 : 하나의 클래스에 너무 많은 역할을 부여하지 말자. (책임을 몰리지 말자)","level":5,"id":"결론__하나의_클래스에_너무_많은_역할을_부여하지_말자._(책임을_몰리지_말자)"}],"backlinks":[],"links":["짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html#Spring MVC의 Service와 ServiceImpl 구조","짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html#하나의_인터페이스의_하나의_구현체","짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html#결론__하나의_클래스에_너무_많은_역할을_부여하지_말자._(책임을_몰리지_말자)"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html","pathToRoot":"..","createdTime":1747810428641,"modifiedTime":1747810428673,"sourceSize":3211,"sourcePath":"짧은 키워드/Spring MVC의 Service와 ServiceImpl 구조.md","exportPath":"짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring-webflux란.html":{"title":"Spring WebFlux란?","icon":"","description":"<br><br>\n<br>스프링5에서 소개된 리엑티브 프로그래밍, 반응형 및 비동기적인 웹 어플리케이션 개발을 지원하는 모듈이다.\n<img alt=\"Pasted image 20240611144129.png\" src=\"https://lts.kr/사진-및-문서/pasted-image-20240611144129.png\" target=\"_self\">\n<br>*리엑티브 프로그래밍이란 ?\n- 비동기 및 이벤트 기반 애플리케이션을 개발하기 위한 패러다임으로, 주로 높은 확장성과 성능을 제공하는것<br>내부통신을 이용하여 API프로젝트와 통신할때 주소 맵핑이 어떻게 이루어지는지??\n- Spring WebClient를 이용하여 내부 통신을 한다.<br><br>\n<br>\nSpringWebFlux의 일부로써, 비동기적인 방식으로 HTTP 요청을 보내고 응답을 받을 수 있는 라이브러리이다. <br>\n웹으로 API를 호출하기 위해 사용되는 HTTP Client모듈 중 하나이다. <br>\nRestTemplate과 같은 기능을 하지만, RestTemplate는 Blocking 방식이고, WebClient는 Non-Blocking방식이다.\nBlocking 동기 - Non-Blocking 비동기 ( 정확히 같은것은 아니지만 비슷하다 ? ) <br>\n요청자(APP)에서 WebClient라이브러리를 사용한 senderUtils를 사용하여\n프로퍼티 소스와, 송신방식(GET/POST), 넘길 값(DTO), request를 수신할 값(ApiResponseModel)을 설정한다. <br><br>-SpringMVC에서는 WebFlux와 달리, 블로킹I/O를 사용하기 때문에, 동기적인 작업을 수행할 떄에는 WebClient보다 RestTemplat이 효과적이지만, 비동기 작업을 할 때에는 WebClient를 사용하는것이 효과적이다.<br><br><br><br>\n<br>Thread Pool을 애플리케이션 구동시 미리 만들어 두고,\n요청시 가용한 Thread가 있다면 1요청당 1Thread가 할당된다.\n<br>만약 가용한 스레드가 부족하다면 Queue는 대기하게 되며,\n전체 서비스의 속도가 현저히 느려지게 된다.\n<br><br>\n<br>Core당 1개의 Thread를 사용한다.\n<br>요청은 Event Loop내의 job으로 등록되고, 각 job을 제공자에게 요청한 후,\n기다리지 않고 다른 job을 처리한다.\n<br>Event Loop는 제공자로부터 callback으로 응답이 오면, 그 결과를 요청자에게 제공하낟.\n<br>따라서 반응성/탄력성/가용성/비동기성 을 보장하기 때문에 동시사용자가 크게 몰렸을때\nRestTemplate에 비해 성능이 저하되지 않는다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Spring WebFlux란?","level":1,"id":"Spring WebFlux란?"},{"heading":"Spring WebClient란??","level":2,"id":"Spring_WebClient란??"},{"heading":"*Spring MVC환경에서도 SpringWebClient를 사용해도 될까?(현재 프로젝트가 이렇게되있다)","level":4,"id":"*Spring_MVC환경에서도_SpringWebClient를_사용해도_될까?(현재_프로젝트가_이렇게되있다)"},{"heading":"Spring WebClient VS RestTemplate","level":1,"id":"Spring_WebClient_VS_RestTemplate"},{"heading":"RestTemplate : Multi-Thread / Blocking방식","level":3,"id":"RestTemplate__Multi-Thread_/_Blocking방식"},{"heading":"Spring WebClient : Single-Thread / Non-Blocking 방식","level":3,"id":"Spring_WebClient__Single-Thread_/_Non-Blocking_방식"}],"backlinks":[],"links":["짧은-키워드/spring-webflux란.html#Spring WebFlux란?","짧은-키워드/spring-webflux란.html#Spring_WebClient란??","짧은-키워드/spring-webflux란.html#*Spring_MVC환경에서도_SpringWebClient를_사용해도_될까?(현재_프로젝트가_이렇게되있다)","짧은-키워드/spring-webflux란.html#Spring_WebClient_VS_RestTemplate","짧은-키워드/spring-webflux란.html#RestTemplate__Multi-Thread_/_Blocking방식","짧은-키워드/spring-webflux란.html#Spring_WebClient__Single-Thread_/_Non-Blocking_방식"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring-webflux란.html","pathToRoot":"..","createdTime":1747810356068,"modifiedTime":1747810375073,"sourceSize":2550,"sourcePath":"짧은 키워드/Spring WebFlux란.md","exportPath":"짧은-키워드/spring-webflux란.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240611144129.png"]},"짧은-키워드/spring에서의-의존성-주입-방법.html":{"title":"Spring에서의 의존성 주입 방법","icon":"","description":"<br><br><br>\t@Component public class Controller{ @Autowired private Service servic ... }\n<br><br>- 단일책임의 원칙 위반\n- 의존성을 주입하기 쉽기 때문에, @Autoqwired아래에 개수 제한없이 추가할 수 있다.\n- 이때, 하나의 class가 많은 책임을 갖고, 순환참조가 이뤄질 수도 있기 때문에\n의존성이 높아져, 사용을 피하는것이 좋다.\n<br><br><br>\t@Component public class Controller{ private Service servic @Autowired private void setService(Service servic){ this.service = service; } }\n<br>선택적인 의존성을 사용할때 유용하다.\n스프링 3.x 에서는 수정자 주입을 권장하고있다.<br><br>- 수정자 주입을 사용하게 되면, service구현제를 주입하지 않아도 controller객체는 생서이 가능하기때문에 널포인터익셉션이 발생할 가능성이 있다.\n주입이 필요한 객체가 주입되지 않아도 얼마든지 객체를 생성할 수 있다는것이 문제다.\n<br><br><br>\t@Component public class Service{ private DAO dao; //생성자 @Autowired private Service(DAO dao){ this.dao = dao; } } @Component public class Controller{ private final Service servic = new Service( new DAO( ) ); }\n<br><br>- Spring Framework 에서 권장하는 방법으로, 필수적으로 사용해야하는 의존성 없이는 객체를 만들지 못하도록 강제할 수 있기\n때문에 사용을 권장하고 있다.\n- Spring 4.3 버전 이후부터는 Class를 완벽하게 DI Framework로 부터\n분리할 수 있다.\n- 단일 생성자에 한해서 @Autowired를 붙이지 않아도 된다.\n- 필드 주입과 수정자 주입은 final로 선언할 수 없지만, 생성자 주입은 final로 필드 객체를 선언하여 런타임에 불변성을 보장한다.\n- 앞서 설명한 필드 주입의 모든 단점을 보완할 수 있다.\n<br><br>하지만 실무에서는 필드 주입을 주로 사용한다.\n이유 : 가장 구현하기 쉽고, 읽기 편하기 때문이다.<br>","aliases":[],"tags":[],"headers":[{"heading":"Spring에서의 의존성 주입 방법","level":1,"id":"Spring에서의 의존성 주입 방법"},{"heading":"Filed Injection(필드 주입)","level":2,"id":"Filed_Injection(필드_주입)"},{"heading":"사용하면 안되는 이유","level":3,"id":"사용하면_안되는_이유"},{"heading":"Setter Injection(수정자 주입)","level":2,"id":"Setter_Injection(수정자_주입)"},{"heading":"문제점","level":3,"id":"문제점"},{"heading":"Contructor Injection(생성자 주입)","level":2,"id":"Contructor_Injection(생성자_주입)"},{"heading":"생성자 주입을 사용해야 하는 이유","level":3,"id":"생성자_주입을_사용해야_하는_이유"},{"heading":"생성자 주입의 경우에도 순환참조가 똑같이 일어날 수 있지만, 필드, 수정자 주입과 다르게 런타임 시가 아니라, 컴파일 시 미연에 찾아낼 수 있다.","level":4,"id":"생성자_주입의_경우에도_순환참조가_똑같이_일어날_수_있지만,_필드,_수정자_주입과_다르게_==런타임==_시가_아니라,_==컴파일==_시_미연에_찾아낼_수_있다."}],"backlinks":[],"links":["짧은-키워드/spring에서의-의존성-주입-방법.html#Spring에서의 의존성 주입 방법","짧은-키워드/spring에서의-의존성-주입-방법.html#Filed_Injection(필드_주입)","짧은-키워드/spring에서의-의존성-주입-방법.html#사용하면_안되는_이유","짧은-키워드/spring에서의-의존성-주입-방법.html#Setter_Injection(수정자_주입)","짧은-키워드/spring에서의-의존성-주입-방법.html#문제점","짧은-키워드/spring에서의-의존성-주입-방법.html#Contructor_Injection(생성자_주입)","짧은-키워드/spring에서의-의존성-주입-방법.html#생성자_주입을_사용해야_하는_이유","짧은-키워드/spring에서의-의존성-주입-방법.html#생성자_주입의_경우에도_순환참조가_똑같이_일어날_수_있지만,_필드,_수정자_주입과_다르게_==런타임==_시가_아니라,_==컴파일==_시_미연에_찾아낼_수_있다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring에서의-의존성-주입-방법.html","pathToRoot":"..","createdTime":1747810098720,"modifiedTime":1747810099041,"sourceSize":2558,"sourcePath":"짧은 키워드/Spring에서의 의존성 주입 방법.md","exportPath":"짧은-키워드/spring에서의-의존성-주입-방법.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/spring의-entitymanager는-무엇일까.html":{"title":"Spring의 EntityManager는 무엇일까?","icon":"","description":"<br><br>- 엔티티 매니저는 DB커넥션처럼 사용된다. 즉, 엔티티매니저를 절대 공유해서는 안된다.\n하나의 스레드에서만 사용해야하며, 사용이 끝나면 반납해야한다.\n그 이유는 트렌젝션 단위로 엔티티매니저를 사용하기 때문이다.\n여러 쓰레드가 동시에 사용하게 된다면 영속성 과 DB간의 데이터동기화가 깨지게 되기 때문이다.\n<br>","aliases":[],"tags":[],"headers":[{"heading":"Spring의 EntityManager는 무엇일까?","level":1,"id":"Spring의 EntityManager는 무엇일까?"}],"backlinks":[],"links":["짧은-키워드/spring의-entitymanager는-무엇일까.html#Spring의 EntityManager는 무엇일까?"],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/spring의-entitymanager는-무엇일까.html","pathToRoot":"..","createdTime":1747810148410,"modifiedTime":1747810148434,"sourceSize":475,"sourcePath":"짧은 키워드/Spring의 EntityManager는 무엇일까.md","exportPath":"짧은-키워드/spring의-entitymanager는-무엇일까.html","showInTree":true,"treeOrder":0,"attachments":[]},"짧은-키워드/static-키워드에-대하여.html":{"title":"Static 키워드에 대하여","icon":"","description":"<br><br>\n<br>클래스 레벨의 변수나, 메서드, 블록 을 정의 할 때 사용된다.\n<br>인스턴스(객체)생성 , new키워드 없이도 접근이 가능하다.\n<br>모든 인스턴스에서 공유된다.\n<br>static변수는 프로그램이 빌드될 때 메모리에 할당, 종료될 때 까지 유지.\nstatic키워드의 남용은 OOP의 원칙과 상반되며, 메모리 사용량의 증가로 이어질 수 있으므로 주의가 필요하다.\n<br><br>\n<br>클래스 레벨에서 공유되는 값을 정의할 때 사용.\n<br>인스턴스마다 별도의 복사본을 유지 할 필요가 없다.\n<br>메모리 사용을 최적화 할 수 있다.\n<br><br>\n<br>클래스 생성없이 직접 호출 가능.\n<br>유틸리티 함수나, 상태가 필요없는 연산에 주로 활용. ex) 수학 연산\n<br>인스턴스 생성의 오버헤드 없이 빠른 실행이 가능하다.\n단, static메서드는 해당 클래스 내의 다른 static메서드나, 변수에만 접근 할 수 있으므로 인스턴스 멤버에 접근해야하는 경우 사용할 수 없다.\n<br><br>","aliases":[],"tags":[],"headers":[{"heading":"Static 키워드에 대하여","level":1,"id":"Static 키워드에 대하여"},{"heading":"static변수","level":2,"id":"static변수"},{"heading":"static메서드","level":2,"id":"static메서드"},{"heading":"즉, Static은 코드의 재사용성과 효율성을 높일 수 있지만, 객체지향 원칙과 메모리 관리를 고려하여 옳바르게 사용하도록 해야한다.","level":4,"id":"즉,_Static은_코드의_재사용성과_효율성을_높일_수_있지만,_객체지향_원칙과_메모리_관리를_고려하여_옳바르게_사용하도록_해야한다."}],"backlinks":[],"links":["짧은-키워드/static-키워드에-대하여.html#Static 키워드에 대하여","짧은-키워드/static-키워드에-대하여.html#static변수","짧은-키워드/static-키워드에-대하여.html#static메서드","짧은-키워드/static-키워드에-대하여.html#즉,_Static은_코드의_재사용성과_효율성을_높일_수_있지만,_객체지향_원칙과_메모리_관리를_고려하여_옳바르게_사용하도록_해야한다."],"author":"taesung's Blog","coverImageURL":"","fullURL":"https://lts.kr/짧은-키워드/static-키워드에-대하여.html","pathToRoot":"..","createdTime":1747809557110,"modifiedTime":1747809557114,"sourceSize":1303,"sourcePath":"짧은 키워드/Static 키워드에 대하여.md","exportPath":"짧은-키워드/static-키워드에-대하여.html","showInTree":true,"treeOrder":0,"attachments":[]}},"fileInfo":{"짧은-키워드/cicd.html":{"createdTime":1745989700456,"modifiedTime":1745995846695,"sourceSize":1727,"sourcePath":"짧은 키워드/CICD.md","exportPath":"짧은-키워드/cicd.html"},"짧은-키워드/gitops.html":{"createdTime":1745391053541,"modifiedTime":1745909723860,"sourceSize":412,"sourcePath":"짧은 키워드/GitOps.md","exportPath":"짧은-키워드/gitops.html"},"짧은-키워드/redis-만료-정책.html":{"createdTime":1744362479256,"modifiedTime":1744362530088,"sourceSize":2470,"sourcePath":"짧은 키워드/Redis 만료 정책.md","exportPath":"짧은-키워드/redis-만료-정책.html"},"짧은-키워드/restful-api.html":{"createdTime":1745993743206,"modifiedTime":1745993743206,"sourceSize":0,"sourcePath":"짧은 키워드/RESTful API.md","exportPath":"짧은-키워드/restful-api.html"},"짧은-키워드/servlet.html":{"createdTime":1745905249772,"modifiedTime":1745909918752,"sourceSize":2052,"sourcePath":"짧은 키워드/Servlet.md","exportPath":"짧은-키워드/servlet.html"},"issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html":{"createdTime":1740732986345,"modifiedTime":1742893523526,"sourceSize":4418,"sourcePath":"Issue_TroubleShooting/⏰ Script 로딩 지연 문제 해결 .js.md","exportPath":"issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html"},"issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html":{"createdTime":1740733661950,"modifiedTime":1741574975039,"sourceSize":5733,"sourcePath":"Issue_TroubleShooting/⚔ StckOverflow 이슈와 QueryDSL.md","exportPath":"issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html"},"issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html":{"createdTime":1740733250038,"modifiedTime":1742893438653,"sourceSize":10280,"sourcePath":"Issue_TroubleShooting/🔐 상품 투자하기 서비스 Lock기법 개선안.md","exportPath":"issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html"},"issue_troubleshooting/🚦-spring-batch-트러블슈팅.html":{"createdTime":1741932822849,"modifiedTime":1742194915704,"sourceSize":6136,"sourcePath":"Issue_TroubleShooting/🚦 Spring Batch 트러블슈팅.md","exportPath":"issue_troubleshooting/🚦-spring-batch-트러블슈팅.html"},"issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html":{"createdTime":1742781509013,"modifiedTime":1747808145371,"sourceSize":10677,"sourcePath":"Issue_TroubleShooting/🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검).md","exportPath":"issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html"},"lectur/🏫-강의-&-자격증.html":{"createdTime":1740115400228,"modifiedTime":1743137460415,"sourceSize":1301,"sourcePath":"lectur/🏫 강의 & 자격증.md","exportPath":"lectur/🏫-강의-&-자격증.html"},"lectur/1.-객체-지향-설계와-스프링.html":{"createdTime":1740116090884,"modifiedTime":1741163322925,"sourceSize":11487,"sourcePath":"lectur/1. 객체 지향 설계와 스프링.md","exportPath":"lectur/1.-객체-지향-설계와-스프링.html"},"lectur/2.-스프링-핵심-원리-이해.html":{"createdTime":1741159406082,"modifiedTime":1742192958548,"sourceSize":549,"sourcePath":"lectur/2. 스프링 핵심 원리 이해.md","exportPath":"lectur/2.-스프링-핵심-원리-이해.html"},"lectur/2.1-스프링-프로젝트-생성.html":{"createdTime":1741831186118,"modifiedTime":1741831267035,"sourceSize":1189,"sourcePath":"lectur/2.1 스프링 프로젝트 생성.md","exportPath":"lectur/2.1-스프링-프로젝트-생성.html"},"lectur/2.2-회원-도메인-설계-및-개발.html":{"createdTime":1741831314600,"modifiedTime":1742192740067,"sourceSize":6905,"sourcePath":"lectur/2.2 회원 도메인 설계 및 개발.md","exportPath":"lectur/2.2-회원-도메인-설계-및-개발.html"},"lectur/2.3-주문과-할인-도메인-설계-및-개발.html":{"createdTime":1741848373535,"modifiedTime":1742192748419,"sourceSize":6092,"sourcePath":"lectur/2.3 주문과 할인 도메인 설계 및 개발.md","exportPath":"lectur/2.3-주문과-할인-도메인-설계-및-개발.html"},"lectur/2.4-새로운-할인-정책-개발.html":{"createdTime":1741852943044,"modifiedTime":1742192939409,"sourceSize":10149,"sourcePath":"lectur/2.4 새로운 할인 정책 개발.md","exportPath":"lectur/2.4-새로운-할인-정책-개발.html"},"lectur/2.4.1-전체-흐름-정리.html":{"createdTime":1742187815155,"modifiedTime":1742192945966,"sourceSize":1659,"sourcePath":"lectur/2.4.1 전체 흐름 정리.md","exportPath":"lectur/2.4.1-전체-흐름-정리.html"},"lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html":{"createdTime":1742188139435,"modifiedTime":1742192952043,"sourceSize":2171,"sourcePath":"lectur/2.5 좋은 객체지향 설계의 5가지 원칙의 적용.md","exportPath":"lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html"},"lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html":{"createdTime":1742188420779,"modifiedTime":1742192960282,"sourceSize":6980,"sourcePath":"lectur/2.6 IoC, DI 그리고 컨테이너 - 스프링으로 전환.md","exportPath":"lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html"},"lectur/3.-스프링-컨테이너와-스프링-빈.html":{"createdTime":1742192855164,"modifiedTime":1742193022634,"sourceSize":177,"sourcePath":"lectur/3. 스프링 컨테이너와 스프링 빈.md","exportPath":"lectur/3.-스프링-컨테이너와-스프링-빈.html"},"lectur/3.1-스프링-컨테이너-생성.html":{"createdTime":1742192705182,"modifiedTime":1747382415769,"sourceSize":2963,"sourcePath":"lectur/3.1 스프링 컨테이너 생성.md","exportPath":"lectur/3.1-스프링-컨테이너-생성.html"},"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html":{"createdTime":1739843285680,"modifiedTime":1739844018493,"sourceSize":57706,"sourcePath":"project/hello Batch/✏ Chunk_Partitioning Batch 구조 드로잉.md","exportPath":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html"},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html":{"createdTime":1739842773924,"modifiedTime":1747794768708,"sourceSize":20975,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html"},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html":{"createdTime":1739842890772,"modifiedTime":1741249020914,"sourceSize":6664,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링 부록.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html"},"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html":{"createdTime":1739783488509,"modifiedTime":1740733843766,"sourceSize":3178,"sourcePath":"project/hello marketing/👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출.md","exportPath":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html"},"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html":{"createdTime":1739783337843,"modifiedTime":1747796836004,"sourceSize":18525,"sourcePath":"project/hello marketing/👩‍👧‍👦 marketing Analytics 공통모듈 제작기.md","exportPath":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html"},"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html":{"createdTime":1739783693575,"modifiedTime":1741573960767,"sourceSize":6394,"sourcePath":"project/note CI_CD/👻 Obsidian 정적호스팅 CICD 과정.md","exportPath":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html"},"project/💻-프로젝트.html":{"createdTime":1740028413454,"modifiedTime":1746688892802,"sourceSize":877,"sourcePath":"project/💻 프로젝트.md","exportPath":"project/💻-프로젝트.html"},"project/🔫-이슈-분석-&-트러블슈팅.html":{"createdTime":1742893128385,"modifiedTime":1747632701562,"sourceSize":777,"sourcePath":"project/🔫 이슈 분석 & 트러블슈팅.md","exportPath":"project/🔫-이슈-분석-&-트러블슈팅.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html":{"createdTime":1744340376399,"modifiedTime":1744704553295,"sourceSize":2913,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 기타문제.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html":{"createdTime":1739777477564,"modifiedTime":1745199600167,"sourceSize":88562,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 키워드.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html":{"createdTime":1741767948125,"modifiedTime":1744362555823,"sourceSize":2644,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-구조체(structuer).md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html":{"createdTime":1741826891033,"modifiedTime":1744686662463,"sourceSize":5120,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-사용자 정의 함수.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html":{"createdTime":1741575459595,"modifiedTime":1744622335076,"sourceSize":6534,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-제어문.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html":{"createdTime":1741757870834,"modifiedTime":1744686850974,"sourceSize":4429,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-포인터.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html":{"createdTime":1740464273334,"modifiedTime":1744964416232,"sourceSize":14299,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 SQL 문제.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html":{"createdTime":1739783025899,"modifiedTime":1739946883587,"sourceSize":21325,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 1과목 - 소프트웨어 설계.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html":{"createdTime":1739783025899,"modifiedTime":1739946885204,"sourceSize":11745,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 2과목 - 소프트웨어 개발.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html":{"createdTime":1739783025899,"modifiedTime":1739946886923,"sourceSize":11355,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 3과목 - 데이터베이스 구축.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html":{"createdTime":1739783025899,"modifiedTime":1739946888780,"sourceSize":25268,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 4과목 - 프로그래밍 언어 활용.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html":{"createdTime":1739783043089,"modifiedTime":1739946892799,"sourceSize":21328,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 5과목 - 정보시스템 구축관리.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html"},"study/커리큘럼/🆕-dev-커리큘럼.html":{"createdTime":1740017929179,"modifiedTime":1740027066919,"sourceSize":69,"sourcePath":"study/커리큘럼/🆕 Dev 커리큘럼.md","exportPath":"study/커리큘럼/🆕-dev-커리큘럼.html"},"study/coding-test/👽-algorithm.html":{"createdTime":1740031282530,"modifiedTime":1740107593302,"sourceSize":140,"sourcePath":"study/Coding Test/👽 Algorithm.md","exportPath":"study/coding-test/👽-algorithm.html"},"study/coding-test/🤠-coding-test-풀이-모음.html":{"createdTime":1740030994816,"modifiedTime":1740032047241,"sourceSize":673,"sourcePath":"study/Coding Test/🤠 Coding Test 풀이 모음.md","exportPath":"study/coding-test/🤠-coding-test-풀이-모음.html"},"study/cs/☕-java-,-oop.html":{"createdTime":1739844224869,"modifiedTime":1747811016203,"sourceSize":634,"sourcePath":"study/CS/☕ JAVA , OOP.md","exportPath":"study/cs/☕-java-,-oop.html"},"study/cs/🌩-cloud-native-architecture-분석.html":{"createdTime":1745990547472,"modifiedTime":1746150874525,"sourceSize":5490,"sourcePath":"study/CS/🌩 Cloud-Native Architecture 분석.md","exportPath":"study/cs/🌩-cloud-native-architecture-분석.html"},"study/cs/🍃-spring.html":{"createdTime":1739844578975,"modifiedTime":1747810637978,"sourceSize":819,"sourcePath":"study/CS/🍃 Spring.md","exportPath":"study/cs/🍃-spring.html"},"study/cs/🍊-spring의-의존성-주입(di).html":{"createdTime":1741913374127,"modifiedTime":1741913768344,"sourceSize":2713,"sourcePath":"study/CS/🍊 Spring의 의존성 주입(DI).md","exportPath":"study/cs/🍊-spring의-의존성-주입(di).html"},"study/cs/🍎-redis로-key관리하기.html":{"createdTime":1743055471417,"modifiedTime":1745997831344,"sourceSize":9922,"sourcePath":"study/CS/🍎 Redis로 Key관리하기.md","exportPath":"study/cs/🍎-redis로-key관리하기.html"},"study/cs/🎩-devops.html":{"createdTime":1739844345143,"modifiedTime":1747810832160,"sourceSize":394,"sourcePath":"study/CS/🎩 DevOps.md","exportPath":"study/cs/🎩-devops.html"},"study/cs/🐞-etc.html":{"createdTime":1739844790888,"modifiedTime":1747811032434,"sourceSize":142,"sourcePath":"study/CS/🐞 etc.md","exportPath":"study/cs/🐞-etc.html"},"study/cs/🐡-spring-security와-filter.html":{"createdTime":1742883041247,"modifiedTime":1745917858201,"sourceSize":5951,"sourcePath":"study/CS/🐡 Spring Security와 Filter.md","exportPath":"study/cs/🐡-spring-security와-filter.html"},"study/cs/🐰-java의-string과-springbuffer.html":{"createdTime":1741830727845,"modifiedTime":1741830788314,"sourceSize":4946,"sourcePath":"study/CS/🐰 Java의 String과 SpringBuffer.md","exportPath":"study/cs/🐰-java의-string과-springbuffer.html"},"study/cs/🐹-msa(microservices-architecture).html":{"createdTime":1745976058758,"modifiedTime":1746666164696,"sourceSize":13784,"sourcePath":"study/CS/🐹 MSA(Microservices Architecture).md","exportPath":"study/cs/🐹-msa(microservices-architecture).html"},"study/cs/📔-database.html":{"createdTime":1739844411985,"modifiedTime":1747810943288,"sourceSize":322,"sourcePath":"study/CS/📔 DataBase.md","exportPath":"study/cs/📔-database.html"},"study/cs/📭-server.html":{"createdTime":1739844706654,"modifiedTime":1747810966714,"sourceSize":128,"sourcePath":"study/CS/📭 Server.md","exportPath":"study/cs/📭-server.html"},"study/cs/🤲분산-환경에서의-cache-선택하기.html":{"createdTime":1744356329718,"modifiedTime":1744361927965,"sourceSize":6011,"sourcePath":"study/CS/🤲분산 환경에서의 Cache 선택하기.md","exportPath":"study/cs/🤲분산-환경에서의-cache-선택하기.html"},"study/cs/🪕-jpa-관련-용어-정리.html":{"createdTime":1739950614572,"modifiedTime":1742969789251,"sourceSize":9944,"sourcePath":"study/CS/🪕 JPA 관련 용어 정리.md","exportPath":"study/cs/🪕-jpa-관련-용어-정리.html"},"study/cs/🛬-jdk와-jre,-jvm.html":{"createdTime":1741830360116,"modifiedTime":1747808468961,"sourceSize":5131,"sourcePath":"study/CS/🛬 JDK와 JRE, JVM.md","exportPath":"study/cs/🛬-jdk와-jre,-jvm.html"},"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html":{"createdTime":1741932822852,"modifiedTime":1747796923839,"sourceSize":8048,"sourcePath":"study/Dev Seminar/🍂 JPA, Mybatis , Dead Lock이슈.md","exportPath":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html"},"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html":{"createdTime":1739950797888,"modifiedTime":1739951081414,"sourceSize":6184,"sourcePath":"study/Dev Seminar/📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가.md","exportPath":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html"},"study/dev-seminar/🔹-tdd에-대하여.html":{"createdTime":1739950748159,"modifiedTime":1739951382850,"sourceSize":13216,"sourcePath":"study/Dev Seminar/🔹 TDD에 대하여.md","exportPath":"study/dev-seminar/🔹-tdd에-대하여.html"},"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html":{"createdTime":1739950696311,"modifiedTime":1743060669590,"sourceSize":7084,"sourcePath":"study/Dev Seminar/🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성.md","exportPath":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html"},"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html":{"createdTime":1739950706177,"modifiedTime":1740127908434,"sourceSize":9716,"sourcePath":"study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md","exportPath":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html"},"study/📕-공부.html":{"createdTime":1740028632740,"modifiedTime":1747632701593,"sourceSize":1309,"sourcePath":"study/📕 공부.md","exportPath":"study/📕-공부.html"},"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html":{"createdTime":1740105237396,"modifiedTime":1740361077682,"sourceSize":9994,"sourcePath":"Tools/aws/🌥 aws(EC2)셋팅부터 배포까지.md","exportPath":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html"},"tools/aws/🍊-aws-ec2란.html":{"createdTime":1740105237396,"modifiedTime":1740361069051,"sourceSize":3324,"sourcePath":"Tools/aws/🍊 aws EC2란.md","exportPath":"tools/aws/🍊-aws-ec2란.html"},"tools/aws/🍌-elastic-ip(탄력적-ip)란.html":{"createdTime":1740361053654,"modifiedTime":1740646202048,"sourceSize":1519,"sourcePath":"Tools/aws/🍌 Elastic IP(탄력적 IP)란.md","exportPath":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html"},"tools/docker/🐋-docker-란.html":{"createdTime":1740105237396,"modifiedTime":1745221184011,"sourceSize":3101,"sourcePath":"Tools/docker/🐋 docker 란.md","exportPath":"tools/docker/🐋-docker-란.html"},"tools/docker/📘-springboot-&-docker-+-reids-연동.html":{"createdTime":1740105237396,"modifiedTime":1745221182456,"sourceSize":10950,"sourcePath":"Tools/docker/📘 SpringBoot & Docker + Reids 연동.md","exportPath":"tools/docker/📘-springboot-&-docker-+-reids-연동.html"},"tools/jenkins/👔-jenkins란.html":{"createdTime":1745220988073,"modifiedTime":1745389856171,"sourceSize":6544,"sourcePath":"Tools/Jenkins/👔 Jenkins란.md","exportPath":"tools/jenkins/👔-jenkins란.html"},"tools/kubernetes/🚢kubernetes(k8s)란.html":{"createdTime":1745387153440,"modifiedTime":1745399649359,"sourceSize":5878,"sourcePath":"Tools/Kubernetes/🚢Kubernetes(k8s)란.md","exportPath":"tools/kubernetes/🚢kubernetes(k8s)란.html"},"tools/🎵-obsidian.html":{"createdTime":1739863713458,"modifiedTime":1739954777611,"sourceSize":5657,"sourcePath":"Tools/🎵 Obsidian.md","exportPath":"tools/🎵-obsidian.html"},"tools/🪓-도구.html":{"createdTime":1740028927813,"modifiedTime":1745455770280,"sourceSize":807,"sourcePath":"Tools/🪓 도구.md","exportPath":"tools/🪓-도구.html"},"🏠-taesung's-blog.html":{"createdTime":1739779810544,"modifiedTime":1747728146886,"sourceSize":1921,"sourcePath":"🏠 taesung's Blog.md","exportPath":"🏠-taesung's-blog.html"},"사진-및-문서/prof2.jpg":{"createdTime":1743144171811,"modifiedTime":1743144171811,"sourceSize":205292,"sourcePath":"사진 및 문서/prof2.jpg","exportPath":"사진-및-문서/prof2.jpg","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250328120415.png":{"createdTime":1743131055850,"modifiedTime":1743131055850,"sourceSize":72831,"sourcePath":"사진 및 문서/Pasted image 20250328120415.png","exportPath":"사진-및-문서/pasted-image-20250328120415.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-04-29_15_37_33.png":{"createdTime":1745908674399,"modifiedTime":1745908674399,"sourceSize":61756,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-04-29_15_37_33.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-04-29_15_37_33.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250421164348.png":{"createdTime":1745221428903,"modifiedTime":1745221428904,"sourceSize":29618,"sourcePath":"사진 및 문서/Pasted image 20250421164348.png","exportPath":"사진-및-문서/pasted-image-20250421164348.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114743.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":27587,"sourcePath":"사진 및 문서/Pasted image 20250221114743.png","exportPath":"사진-및-문서/pasted-image-20250221114743.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114306.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":33790,"sourcePath":"사진 및 문서/Pasted image 20250221114306.png","exportPath":"사진-및-문서/pasted-image-20250221114306.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114324.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":4466,"sourcePath":"사진 및 문서/Pasted image 20250221114324.png","exportPath":"사진-및-문서/pasted-image-20250221114324.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114327.png":{"createdTime":1740106714954,"modifiedTime":1740106714955,"sourceSize":95731,"sourcePath":"사진 및 문서/Pasted image 20250221114327.png","exportPath":"사진-및-문서/pasted-image-20250221114327.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114334.png":{"createdTime":1740106714955,"modifiedTime":1740106714955,"sourceSize":47629,"sourcePath":"사진 및 문서/Pasted image 20250221114334.png","exportPath":"사진-및-문서/pasted-image-20250221114334.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114339.png":{"createdTime":1740106714956,"modifiedTime":1740106714956,"sourceSize":8362,"sourcePath":"사진 및 문서/Pasted image 20250221114339.png","exportPath":"사진-및-문서/pasted-image-20250221114339.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114345.png":{"createdTime":1740106714957,"modifiedTime":1740106714958,"sourceSize":228624,"sourcePath":"사진 및 문서/Pasted image 20250221114345.png","exportPath":"사진-및-문서/pasted-image-20250221114345.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114353.png":{"createdTime":1740106714960,"modifiedTime":1740106714960,"sourceSize":169113,"sourcePath":"사진 및 문서/Pasted image 20250221114353.png","exportPath":"사진-및-문서/pasted-image-20250221114353.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114400.png":{"createdTime":1740106714960,"modifiedTime":1740106714960,"sourceSize":142112,"sourcePath":"사진 및 문서/Pasted image 20250221114400.png","exportPath":"사진-및-문서/pasted-image-20250221114400.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114406.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":124822,"sourcePath":"사진 및 문서/Pasted image 20250221114406.png","exportPath":"사진-및-문서/pasted-image-20250221114406.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114411.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":63825,"sourcePath":"사진 및 문서/Pasted image 20250221114411.png","exportPath":"사진-및-문서/pasted-image-20250221114411.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114423.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":99423,"sourcePath":"사진 및 문서/Pasted image 20250221114423.png","exportPath":"사진-및-문서/pasted-image-20250221114423.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114428.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":347892,"sourcePath":"사진 및 문서/Pasted image 20250221114428.png","exportPath":"사진-및-문서/pasted-image-20250221114428.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114434.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":119362,"sourcePath":"사진 및 문서/Pasted image 20250221114434.png","exportPath":"사진-및-문서/pasted-image-20250221114434.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114439.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":29445,"sourcePath":"사진 및 문서/Pasted image 20250221114439.png","exportPath":"사진-및-문서/pasted-image-20250221114439.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114443.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":137427,"sourcePath":"사진 및 문서/Pasted image 20250221114443.png","exportPath":"사진-및-문서/pasted-image-20250221114443.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114501.png":{"createdTime":1740106714971,"modifiedTime":1740106714971,"sourceSize":9241,"sourcePath":"사진 및 문서/Pasted image 20250221114501.png","exportPath":"사진-및-문서/pasted-image-20250221114501.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114448.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":10082,"sourcePath":"사진 및 문서/Pasted image 20250221114448.png","exportPath":"사진-및-문서/pasted-image-20250221114448.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114522.png":{"createdTime":1740106714972,"modifiedTime":1740106714972,"sourceSize":41499,"sourcePath":"사진 및 문서/Pasted image 20250221114522.png","exportPath":"사진-및-문서/pasted-image-20250221114522.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114527.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":3613,"sourcePath":"사진 및 문서/Pasted image 20250221114527.png","exportPath":"사진-및-문서/pasted-image-20250221114527.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114531.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":2824,"sourcePath":"사진 및 문서/Pasted image 20250221114531.png","exportPath":"사진-및-문서/pasted-image-20250221114531.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114535.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":9670,"sourcePath":"사진 및 문서/Pasted image 20250221114535.png","exportPath":"사진-및-문서/pasted-image-20250221114535.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114539.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":47345,"sourcePath":"사진 및 문서/Pasted image 20250221114539.png","exportPath":"사진-및-문서/pasted-image-20250221114539.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114543.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":12542,"sourcePath":"사진 및 문서/Pasted image 20250221114543.png","exportPath":"사진-및-문서/pasted-image-20250221114543.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114600.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":170307,"sourcePath":"사진 및 문서/Pasted image 20250221114600.png","exportPath":"사진-및-문서/pasted-image-20250221114600.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114605.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":5144,"sourcePath":"사진 및 문서/Pasted image 20250221114605.png","exportPath":"사진-및-문서/pasted-image-20250221114605.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114610.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":117785,"sourcePath":"사진 및 문서/Pasted image 20250221114610.png","exportPath":"사진-및-문서/pasted-image-20250221114610.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114616.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":9310,"sourcePath":"사진 및 문서/Pasted image 20250221114616.png","exportPath":"사진-및-문서/pasted-image-20250221114616.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114621.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":6945,"sourcePath":"사진 및 문서/Pasted image 20250221114621.png","exportPath":"사진-및-문서/pasted-image-20250221114621.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114628.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":11755,"sourcePath":"사진 및 문서/Pasted image 20250221114628.png","exportPath":"사진-및-문서/pasted-image-20250221114628.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114633.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":109806,"sourcePath":"사진 및 문서/Pasted image 20250221114633.png","exportPath":"사진-및-문서/pasted-image-20250221114633.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114638.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":145560,"sourcePath":"사진 및 문서/Pasted image 20250221114638.png","exportPath":"사진-및-문서/pasted-image-20250221114638.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114644.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":285677,"sourcePath":"사진 및 문서/Pasted image 20250221114644.png","exportPath":"사진-및-문서/pasted-image-20250221114644.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114648.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":2556,"sourcePath":"사진 및 문서/Pasted image 20250221114648.png","exportPath":"사진-및-문서/pasted-image-20250221114648.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png":{"createdTime":1739783573850,"modifiedTime":1739424428406,"sourceSize":99317,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-10_15_04_45.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png":{"createdTime":1739783573853,"modifiedTime":1739424428407,"sourceSize":122009,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-10_17_10_58.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png":{"createdTime":1739783573857,"modifiedTime":1739424428408,"sourceSize":220968,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-11_13_47_16.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png":{"createdTime":1739783573860,"modifiedTime":1739424428409,"sourceSize":63401,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-11_15_32_34.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png":{"createdTime":1739783573863,"modifiedTime":1739424428411,"sourceSize":131078,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-11_16_31_10.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png":{"createdTime":1739783573867,"modifiedTime":1739424428412,"sourceSize":159770,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-12_14_04_58.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png","showInTree":false,"treeOrder":0},"사진-및-문서/스크린샷-2025-04-14-오전-12.06.09.png":{"createdTime":1744609206971,"modifiedTime":1744609206971,"sourceSize":51195,"sourcePath":"사진 및 문서/스크린샷 2025-04-14 오전 12.06.09.png","exportPath":"사진-및-문서/스크린샷-2025-04-14-오전-12.06.09.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250415182923.png":{"createdTime":1744709363340,"modifiedTime":1744709363342,"sourceSize":44016,"sourcePath":"사진 및 문서/Pasted image 20250415182923.png","exportPath":"사진-및-문서/pasted-image-20250415182923.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250416171828.png":{"createdTime":1744791508765,"modifiedTime":1744791508766,"sourceSize":220726,"sourcePath":"사진 및 문서/Pasted image 20250416171828.png","exportPath":"사진-및-문서/pasted-image-20250416171828.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250416172118.png":{"createdTime":1744791678116,"modifiedTime":1744791678116,"sourceSize":53202,"sourcePath":"사진 및 문서/Pasted image 20250416172118.png","exportPath":"사진-및-문서/pasted-image-20250416172118.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250416181833.png":{"createdTime":1744795113395,"modifiedTime":1744795113396,"sourceSize":42601,"sourcePath":"사진 및 문서/Pasted image 20250416181833.png","exportPath":"사진-및-문서/pasted-image-20250416181833.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250416182123.png":{"createdTime":1744795283257,"modifiedTime":1744795283257,"sourceSize":33631,"sourcePath":"사진 및 문서/Pasted image 20250416182123.png","exportPath":"사진-및-문서/pasted-image-20250416182123.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250225161448.png":{"createdTime":1740467688598,"modifiedTime":1740467688599,"sourceSize":8167,"sourcePath":"사진 및 문서/Pasted image 20250225161448.png","exportPath":"사진-및-문서/pasted-image-20250225161448.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250415181225.png":{"createdTime":1744708345328,"modifiedTime":1744708345328,"sourceSize":5743,"sourcePath":"사진 및 문서/Pasted image 20250415181225.png","exportPath":"사진-및-문서/pasted-image-20250415181225.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250417121150.png":{"createdTime":1744859510731,"modifiedTime":1744859510732,"sourceSize":67072,"sourcePath":"사진 및 문서/Pasted image 20250417121150.png","exportPath":"사진-및-문서/pasted-image-20250417121150.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250312144444.png":{"createdTime":1741758284641,"modifiedTime":1741758284641,"sourceSize":5514,"sourcePath":"사진 및 문서/Pasted image 20250312144444.png","exportPath":"사진-및-문서/pasted-image-20250312144444.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250312173438.png":{"createdTime":1741768478501,"modifiedTime":1741768478501,"sourceSize":9233,"sourcePath":"사진 및 문서/Pasted image 20250312173438.png","exportPath":"사진-및-문서/pasted-image-20250312173438.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250312173740.png":{"createdTime":1741768660590,"modifiedTime":1741768660591,"sourceSize":20973,"sourcePath":"사진 및 문서/Pasted image 20250312173740.png","exportPath":"사진-및-문서/pasted-image-20250312173740.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250325102427.png":{"createdTime":1742865867667,"modifiedTime":1742865867667,"sourceSize":34361,"sourcePath":"사진 및 문서/Pasted image 20250325102427.png","exportPath":"사진-및-문서/pasted-image-20250325102427.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250325165845.png":{"createdTime":1742889525868,"modifiedTime":1742889525869,"sourceSize":5499,"sourcePath":"사진 및 문서/Pasted image 20250325165845.png","exportPath":"사진-및-문서/pasted-image-20250325165845.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250325172818.png":{"createdTime":1742891298069,"modifiedTime":1742891298069,"sourceSize":10803,"sourcePath":"사진 및 문서/Pasted image 20250325172818.png","exportPath":"사진-및-문서/pasted-image-20250325172818.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241206140739.png":{"createdTime":1739950851625,"modifiedTime":1739424429279,"sourceSize":207335,"sourcePath":"사진 및 문서/Pasted image 20241206140739.png","exportPath":"사진-및-문서/pasted-image-20241206140739.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241206140822.png":{"createdTime":1739950851626,"modifiedTime":1739424429282,"sourceSize":402790,"sourcePath":"사진 및 문서/Pasted image 20241206140822.png","exportPath":"사진-및-문서/pasted-image-20241206140822.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110144021.png":{"createdTime":1739950851777,"modifiedTime":1739424429322,"sourceSize":46877,"sourcePath":"사진 및 문서/Pasted image 20250110144021.png","exportPath":"사진-및-문서/pasted-image-20250110144021.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241105110415.png":{"createdTime":1740733427059,"modifiedTime":1739424429176,"sourceSize":48800,"sourcePath":"사진 및 문서/Pasted image 20241105110415.png","exportPath":"사진-및-문서/pasted-image-20241105110415.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227140437.png":{"createdTime":1740733431199,"modifiedTime":1740632677974,"sourceSize":44294,"sourcePath":"사진 및 문서/Pasted image 20250227140437.png","exportPath":"사진-및-문서/pasted-image-20250227140437.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227140620.png":{"createdTime":1740733431201,"modifiedTime":1740632780208,"sourceSize":7828,"sourcePath":"사진 및 문서/Pasted image 20250227140620.png","exportPath":"사진-및-문서/pasted-image-20250227140620.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241105110637.png":{"createdTime":1740733427093,"modifiedTime":1739424429177,"sourceSize":122628,"sourcePath":"사진 및 문서/Pasted image 20241105110637.png","exportPath":"사진-및-문서/pasted-image-20241105110637.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241105110713.png":{"createdTime":1740733427109,"modifiedTime":1739424429179,"sourceSize":121987,"sourcePath":"사진 및 문서/Pasted image 20241105110713.png","exportPath":"사진-및-문서/pasted-image-20241105110713.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107115602.png":{"createdTime":1740733427276,"modifiedTime":1739424429183,"sourceSize":165029,"sourcePath":"사진 및 문서/Pasted image 20241107115602.png","exportPath":"사진-및-문서/pasted-image-20241107115602.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107115830.png":{"createdTime":1740733427316,"modifiedTime":1739424429184,"sourceSize":108952,"sourcePath":"사진 및 문서/Pasted image 20241107115830.png","exportPath":"사진-및-문서/pasted-image-20241107115830.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107121044.png":{"createdTime":1740733427415,"modifiedTime":1739424429187,"sourceSize":154790,"sourcePath":"사진 및 문서/Pasted image 20241107121044.png","exportPath":"사진-및-문서/pasted-image-20241107121044.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107121202.png":{"createdTime":1740733427459,"modifiedTime":1739424429188,"sourceSize":129945,"sourcePath":"사진 및 문서/Pasted image 20241107121202.png","exportPath":"사진-및-문서/pasted-image-20241107121202.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107121939.png":{"createdTime":1740733427504,"modifiedTime":1739424429189,"sourceSize":139893,"sourcePath":"사진 및 문서/Pasted image 20241107121939.png","exportPath":"사진-및-문서/pasted-image-20241107121939.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227114750.png":{"createdTime":1740733431139,"modifiedTime":1740624470242,"sourceSize":6008,"sourcePath":"사진 및 문서/Pasted image 20250227114750.png","exportPath":"사진-및-문서/pasted-image-20250227114750.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227114826.png":{"createdTime":1740733431143,"modifiedTime":1740624506390,"sourceSize":8757,"sourcePath":"사진 및 문서/Pasted image 20250227114826.png","exportPath":"사진-및-문서/pasted-image-20250227114826.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115004.png":{"createdTime":1740733431143,"modifiedTime":1740624604117,"sourceSize":6917,"sourcePath":"사진 및 문서/Pasted image 20250227115004.png","exportPath":"사진-및-문서/pasted-image-20250227115004.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115015.png":{"createdTime":1740733431147,"modifiedTime":1740624615279,"sourceSize":4891,"sourcePath":"사진 및 문서/Pasted image 20250227115015.png","exportPath":"사진-및-문서/pasted-image-20250227115015.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115158.png":{"createdTime":1740733431152,"modifiedTime":1740624718349,"sourceSize":5677,"sourcePath":"사진 및 문서/Pasted image 20250227115158.png","exportPath":"사진-및-문서/pasted-image-20250227115158.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115148.png":{"createdTime":1740733431150,"modifiedTime":1740624708781,"sourceSize":5084,"sourcePath":"사진 및 문서/Pasted image 20250227115148.png","exportPath":"사진-및-문서/pasted-image-20250227115148.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227121009.png":{"createdTime":1740733431157,"modifiedTime":1740625809747,"sourceSize":37181,"sourcePath":"사진 및 문서/Pasted image 20250227121009.png","exportPath":"사진-및-문서/pasted-image-20250227121009.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227121046.png":{"createdTime":1740733431159,"modifiedTime":1740625846453,"sourceSize":79963,"sourcePath":"사진 및 문서/Pasted image 20250227121046.png","exportPath":"사진-및-문서/pasted-image-20250227121046.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227121942.png":{"createdTime":1740733431160,"modifiedTime":1740626382860,"sourceSize":78688,"sourcePath":"사진 및 문서/Pasted image 20250227121942.png","exportPath":"사진-및-문서/pasted-image-20250227121942.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227122010.png":{"createdTime":1740733431192,"modifiedTime":1740626410321,"sourceSize":15254,"sourcePath":"사진 및 문서/Pasted image 20250227122010.png","exportPath":"사진-및-문서/pasted-image-20250227122010.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227122736.png":{"createdTime":1740733431195,"modifiedTime":1740626856166,"sourceSize":15665,"sourcePath":"사진 및 문서/Pasted image 20250227122736.png","exportPath":"사진-및-문서/pasted-image-20250227122736.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(14).png":{"createdTime":1740733423096,"modifiedTime":1740632277026,"sourceSize":93796,"sourcePath":"사진 및 문서/output (14).png","exportPath":"사진-및-문서/output-(14).png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304121056.png":{"createdTime":1741057856115,"modifiedTime":1741057856115,"sourceSize":315526,"sourcePath":"사진 및 문서/Pasted image 20250304121056.png","exportPath":"사진-및-문서/pasted-image-20250304121056.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304121009.png":{"createdTime":1741057809965,"modifiedTime":1741057809965,"sourceSize":37710,"sourcePath":"사진 및 문서/Pasted image 20250304121009.png","exportPath":"사진-및-문서/pasted-image-20250304121009.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304121455.png":{"createdTime":1741058095886,"modifiedTime":1741058095886,"sourceSize":17334,"sourcePath":"사진 및 문서/Pasted image 20250304121455.png","exportPath":"사진-및-문서/pasted-image-20250304121455.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304121338.png":{"createdTime":1741058018696,"modifiedTime":1741058018697,"sourceSize":1826,"sourcePath":"사진 및 문서/Pasted image 20250304121338.png","exportPath":"사진-및-문서/pasted-image-20250304121338.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213102128.png":{"createdTime":1739842930072,"modifiedTime":1739424429282,"sourceSize":22774,"sourcePath":"사진 및 문서/Pasted image 20241213102128.png","exportPath":"사진-및-문서/pasted-image-20241213102128.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304170347.png":{"createdTime":1741075427118,"modifiedTime":1741075427119,"sourceSize":5935,"sourcePath":"사진 및 문서/Pasted image 20250304170347.png","exportPath":"사진-및-문서/pasted-image-20250304170347.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304170412.png":{"createdTime":1741075452166,"modifiedTime":1741075452167,"sourceSize":5849,"sourcePath":"사진 및 문서/Pasted image 20250304170412.png","exportPath":"사진-및-문서/pasted-image-20250304170412.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250304171240.png":{"createdTime":1741075960529,"modifiedTime":1741075960535,"sourceSize":2347,"sourcePath":"사진 및 문서/Pasted image 20250304171240.png","exportPath":"사진-및-문서/pasted-image-20250304171240.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213102229.png":{"createdTime":1739842930074,"modifiedTime":1739424429284,"sourceSize":212552,"sourcePath":"사진 및 문서/Pasted image 20241213102229.png","exportPath":"사진-및-문서/pasted-image-20241213102229.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213143101.png":{"createdTime":1739842930077,"modifiedTime":1739424429288,"sourceSize":547915,"sourcePath":"사진 및 문서/Pasted image 20241213143101.png","exportPath":"사진-및-문서/pasted-image-20241213143101.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250314120439.png":{"createdTime":1741932822854,"modifiedTime":1741932822854,"sourceSize":26349,"sourcePath":"사진 및 문서/Pasted image 20250314120439.png","exportPath":"사진-및-문서/pasted-image-20250314120439.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213143217.png":{"createdTime":1739842930079,"modifiedTime":1739424429289,"sourceSize":19870,"sourcePath":"사진 및 문서/Pasted image 20241213143217.png","exportPath":"사진-및-문서/pasted-image-20241213143217.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213103503.png":{"createdTime":1739842930076,"modifiedTime":1739424429285,"sourceSize":86553,"sourcePath":"사진 및 문서/Pasted image 20241213103503.png","exportPath":"사진-및-문서/pasted-image-20241213103503.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317142134.png":{"createdTime":1742188894583,"modifiedTime":1742188894587,"sourceSize":13961,"sourcePath":"사진 및 문서/Pasted image 20250317142134.png","exportPath":"사진-및-문서/pasted-image-20250317142134.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317114543.png":{"createdTime":1742179543992,"modifiedTime":1742179543992,"sourceSize":17356,"sourcePath":"사진 및 문서/Pasted image 20250317114543.png","exportPath":"사진-및-문서/pasted-image-20250317114543.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317114814.png":{"createdTime":1742179694621,"modifiedTime":1742179694622,"sourceSize":19087,"sourcePath":"사진 및 문서/Pasted image 20250317114814.png","exportPath":"사진-및-문서/pasted-image-20250317114814.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317114932.png":{"createdTime":1742179772050,"modifiedTime":1742179772051,"sourceSize":21483,"sourcePath":"사진 및 문서/Pasted image 20250317114932.png","exportPath":"사진-및-문서/pasted-image-20250317114932.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317115640.png":{"createdTime":1742180200408,"modifiedTime":1742180200408,"sourceSize":36441,"sourcePath":"사진 및 문서/Pasted image 20250317115640.png","exportPath":"사진-및-문서/pasted-image-20250317115640.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317120025.png":{"createdTime":1742180425783,"modifiedTime":1742180425784,"sourceSize":50026,"sourcePath":"사진 및 문서/Pasted image 20250317120025.png","exportPath":"사진-및-문서/pasted-image-20250317120025.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317120814.png":{"createdTime":1742180894044,"modifiedTime":1742180894045,"sourceSize":21966,"sourcePath":"사진 및 문서/Pasted image 20250317120814.png","exportPath":"사진-및-문서/pasted-image-20250317120814.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317121138.png":{"createdTime":1742181098078,"modifiedTime":1742181098079,"sourceSize":26603,"sourcePath":"사진 및 문서/Pasted image 20250317121138.png","exportPath":"사진-및-문서/pasted-image-20250317121138.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317122417.png":{"createdTime":1742181857452,"modifiedTime":1742181857452,"sourceSize":29802,"sourcePath":"사진 및 문서/Pasted image 20250317122417.png","exportPath":"사진-및-문서/pasted-image-20250317122417.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317134652.png":{"createdTime":1742186812251,"modifiedTime":1742186812252,"sourceSize":14768,"sourcePath":"사진 및 문서/Pasted image 20250317134652.png","exportPath":"사진-및-문서/pasted-image-20250317134652.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317135331.png":{"createdTime":1742187211820,"modifiedTime":1742187211821,"sourceSize":24138,"sourcePath":"사진 및 문서/Pasted image 20250317135331.png","exportPath":"사진-및-문서/pasted-image-20250317135331.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250317135544.png":{"createdTime":1742187344150,"modifiedTime":1742187344150,"sourceSize":28462,"sourcePath":"사진 및 문서/Pasted image 20250317135544.png","exportPath":"사진-및-문서/pasted-image-20250317135544.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313155205.png":{"createdTime":1741848725255,"modifiedTime":1741848725255,"sourceSize":39357,"sourcePath":"사진 및 문서/Pasted image 20250313155205.png","exportPath":"사진-및-문서/pasted-image-20250313155205.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313155459.png":{"createdTime":1741848899974,"modifiedTime":1741848899974,"sourceSize":67171,"sourcePath":"사진 및 문서/Pasted image 20250313155459.png","exportPath":"사진-및-문서/pasted-image-20250313155459.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313155555.png":{"createdTime":1741848955528,"modifiedTime":1741848955529,"sourceSize":67449,"sourcePath":"사진 및 문서/Pasted image 20250313155555.png","exportPath":"사진-및-문서/pasted-image-20250313155555.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313155756.png":{"createdTime":1741849076335,"modifiedTime":1741849076336,"sourceSize":20268,"sourcePath":"사진 및 문서/Pasted image 20250313155756.png","exportPath":"사진-및-문서/pasted-image-20250313155756.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313162400.png":{"createdTime":1741850640490,"modifiedTime":1741850640491,"sourceSize":8799,"sourcePath":"사진 및 문서/Pasted image 20250313162400.png","exportPath":"사진-및-문서/pasted-image-20250313162400.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313165833.png":{"createdTime":1741852713740,"modifiedTime":1741852713755,"sourceSize":27004,"sourcePath":"사진 및 문서/Pasted image 20250313165833.png","exportPath":"사진-및-문서/pasted-image-20250313165833.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313111121.png":{"createdTime":1741831881430,"modifiedTime":1741831881430,"sourceSize":18219,"sourcePath":"사진 및 문서/Pasted image 20250313111121.png","exportPath":"사진-및-문서/pasted-image-20250313111121.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313111614.png":{"createdTime":1741832174827,"modifiedTime":1741832174828,"sourceSize":35874,"sourcePath":"사진 및 문서/Pasted image 20250313111614.png","exportPath":"사진-및-문서/pasted-image-20250313111614.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313111817.png":{"createdTime":1741832297072,"modifiedTime":1741832297073,"sourceSize":13431,"sourcePath":"사진 및 문서/Pasted image 20250313111817.png","exportPath":"사진-및-문서/pasted-image-20250313111817.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313114207.png":{"createdTime":1741833727377,"modifiedTime":1741833727378,"sourceSize":65162,"sourcePath":"사진 및 문서/Pasted image 20250313114207.png","exportPath":"사진-및-문서/pasted-image-20250313114207.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313114322.png":{"createdTime":1741833802459,"modifiedTime":1741833802459,"sourceSize":7902,"sourcePath":"사진 및 문서/Pasted image 20250313114322.png","exportPath":"사진-및-문서/pasted-image-20250313114322.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313114332.png":{"createdTime":1741833812262,"modifiedTime":1741833812263,"sourceSize":7602,"sourcePath":"사진 및 문서/Pasted image 20250313114332.png","exportPath":"사진-및-문서/pasted-image-20250313114332.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313151739.png":{"createdTime":1741846659958,"modifiedTime":1741846659959,"sourceSize":32392,"sourcePath":"사진 및 문서/Pasted image 20250313151739.png","exportPath":"사진-및-문서/pasted-image-20250313151739.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313152221.png":{"createdTime":1741846941226,"modifiedTime":1741846941228,"sourceSize":4668,"sourcePath":"사진 및 문서/Pasted image 20250313152221.png","exportPath":"사진-및-문서/pasted-image-20250313152221.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313152958.png":{"createdTime":1741847398650,"modifiedTime":1741847398651,"sourceSize":8766,"sourcePath":"사진 및 문서/Pasted image 20250313152958.png","exportPath":"사진-및-문서/pasted-image-20250313152958.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313153455.png":{"createdTime":1741847695647,"modifiedTime":1741847695647,"sourceSize":3856,"sourcePath":"사진 및 문서/Pasted image 20250313153455.png","exportPath":"사진-및-문서/pasted-image-20250313153455.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313153605.png":{"createdTime":1741847765716,"modifiedTime":1741847765717,"sourceSize":29627,"sourcePath":"사진 및 문서/Pasted image 20250313153605.png","exportPath":"사진-및-문서/pasted-image-20250313153605.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313153630.png":{"createdTime":1741847790176,"modifiedTime":1741847790177,"sourceSize":27972,"sourcePath":"사진 및 문서/Pasted image 20250313153630.png","exportPath":"사진-및-문서/pasted-image-20250313153630.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313153740.png":{"createdTime":1741847860462,"modifiedTime":1741847860463,"sourceSize":73611,"sourcePath":"사진 및 문서/Pasted image 20250313153740.png","exportPath":"사진-및-문서/pasted-image-20250313153740.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250314122906.png":{"createdTime":1741932822855,"modifiedTime":1741932822855,"sourceSize":77109,"sourcePath":"사진 및 문서/Pasted image 20250314122906.png","exportPath":"사진-및-문서/pasted-image-20250314122906.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250314152143.png":{"createdTime":1741933909930,"modifiedTime":1741933909931,"sourceSize":98493,"sourcePath":"사진 및 문서/Pasted image 20250314152143.png","exportPath":"사진-및-문서/pasted-image-20250314152143.png","showInTree":false,"treeOrder":0},"사진-및-문서/회사-은행-서비스1111.png":{"createdTime":1739842929615,"modifiedTime":1739424429407,"sourceSize":82216,"sourcePath":"사진 및 문서/회사 은행 서비스1111.png","exportPath":"사진-및-문서/회사-은행-서비스1111.png","showInTree":false,"treeOrder":0},"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png":{"createdTime":1739842930208,"modifiedTime":1739424429372,"sourceSize":104557,"sourcePath":"사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 1.png","exportPath":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","showInTree":false,"treeOrder":0},"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png":{"createdTime":1739842930210,"modifiedTime":1739424429373,"sourceSize":113338,"sourcePath":"사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 잘못된 차액발생 인식 타임라인.png","exportPath":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(1).png":{"createdTime":1739842929644,"modifiedTime":1739424429378,"sourceSize":145878,"sourcePath":"사진 및 문서/output (1).png","exportPath":"사진-및-문서/output-(1).png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241217150339.png":{"createdTime":1739842930081,"modifiedTime":1739424429290,"sourceSize":140545,"sourcePath":"사진 및 문서/Pasted image 20241217150339.png","exportPath":"사진-및-문서/pasted-image-20241217150339.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241219145746.png":{"createdTime":1739842930081,"modifiedTime":1739424429291,"sourceSize":86893,"sourcePath":"사진 및 문서/Pasted image 20241219145746.png","exportPath":"사진-및-문서/pasted-image-20241219145746.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(9)-1.png":{"createdTime":1739842929647,"modifiedTime":1739424429382,"sourceSize":156393,"sourcePath":"사진 및 문서/output (9) 1.png","exportPath":"사진-및-문서/output-(9)-1.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(10).png":{"createdTime":1739842929651,"modifiedTime":1739424429379,"sourceSize":133656,"sourcePath":"사진 및 문서/output (10).png","exportPath":"사진-및-문서/output-(10).png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png":{"createdTime":1739842929615,"modifiedTime":1739424429375,"sourceSize":146024,"sourcePath":"사진 및 문서/do-messenger_screenshot_2024-12-23_14_40_21.png","exportPath":"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224093159.png":{"createdTime":1739842930090,"modifiedTime":1739424429294,"sourceSize":85534,"sourcePath":"사진 및 문서/Pasted image 20241224093159.png","exportPath":"사진-및-문서/pasted-image-20241224093159.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224093207.png":{"createdTime":1739842930092,"modifiedTime":1739424429294,"sourceSize":25919,"sourcePath":"사진 및 문서/Pasted image 20241224093207.png","exportPath":"사진-및-문서/pasted-image-20241224093207.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224093225.png":{"createdTime":1739842930093,"modifiedTime":1739424429295,"sourceSize":39658,"sourcePath":"사진 및 문서/Pasted image 20241224093225.png","exportPath":"사진-및-문서/pasted-image-20241224093225.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250305173344.png":{"createdTime":1741163624706,"modifiedTime":1741163624707,"sourceSize":45439,"sourcePath":"사진 및 문서/Pasted image 20250305173344.png","exportPath":"사진-및-문서/pasted-image-20250305173344.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313103346.png":{"createdTime":1741829626099,"modifiedTime":1741829626100,"sourceSize":75899,"sourcePath":"사진 및 문서/Pasted image 20250313103346.png","exportPath":"사진-및-문서/pasted-image-20250313103346.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-03-13_10_41_16.png":{"createdTime":1741830105399,"modifiedTime":1741830105408,"sourceSize":43071,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-03-13_10_41_16.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-03-13_10_41_16.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313104418.png":{"createdTime":1741830258795,"modifiedTime":1741830258796,"sourceSize":76314,"sourcePath":"사진 및 문서/Pasted image 20250313104418.png","exportPath":"사진-및-문서/pasted-image-20250313104418.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313104505.png":{"createdTime":1741830305250,"modifiedTime":1741830305251,"sourceSize":62171,"sourcePath":"사진 및 문서/Pasted image 20250313104505.png","exportPath":"사진-및-문서/pasted-image-20250313104505.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313105635.png":{"createdTime":1741830995133,"modifiedTime":1741830995141,"sourceSize":48907,"sourcePath":"사진 및 문서/Pasted image 20250313105635.png","exportPath":"사진-및-문서/pasted-image-20250313105635.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250313105543.png":{"createdTime":1741830943999,"modifiedTime":1741830944000,"sourceSize":21382,"sourcePath":"사진 및 문서/Pasted image 20250313105543.png","exportPath":"사진-및-문서/pasted-image-20250313105543.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110122312.png":{"createdTime":1739844880438,"modifiedTime":1739424429321,"sourceSize":33411,"sourcePath":"사진 및 문서/Pasted image 20250110122312.png","exportPath":"사진-및-문서/pasted-image-20250110122312.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110101642.png":{"createdTime":1739844880435,"modifiedTime":1739424429320,"sourceSize":69526,"sourcePath":"사진 및 문서/Pasted image 20250110101642.png","exportPath":"사진-및-문서/pasted-image-20250110101642.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110103409.png":{"createdTime":1739844880437,"modifiedTime":1739424429321,"sourceSize":95529,"sourcePath":"사진 및 문서/Pasted image 20250110103409.png","exportPath":"사진-및-문서/pasted-image-20250110103409.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250122111223.png":{"createdTime":1739844880474,"modifiedTime":1739424429368,"sourceSize":228572,"sourcePath":"사진 및 문서/Pasted image 20250122111223.png","exportPath":"사진-및-문서/pasted-image-20250122111223.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250307172522.png":{"createdTime":1741335922954,"modifiedTime":1741335922955,"sourceSize":40146,"sourcePath":"사진 및 문서/Pasted image 20250307172522.png","exportPath":"사진-및-문서/pasted-image-20250307172522.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218151731.png":{"createdTime":1739863854055,"modifiedTime":1739859451768,"sourceSize":36657,"sourcePath":"사진 및 문서/Pasted image 20250218151731.png","exportPath":"사진-및-문서/pasted-image-20250218151731.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218151806.png":{"createdTime":1739863854057,"modifiedTime":1739859486188,"sourceSize":23625,"sourcePath":"사진 및 문서/Pasted image 20250218151806.png","exportPath":"사진-및-문서/pasted-image-20250218151806.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218152044.png":{"createdTime":1739863854062,"modifiedTime":1739859644718,"sourceSize":46477,"sourcePath":"사진 및 문서/Pasted image 20250218152044.png","exportPath":"사진-및-문서/pasted-image-20250218152044.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218152103.png":{"createdTime":1739863854063,"modifiedTime":1739859663830,"sourceSize":47581,"sourcePath":"사진 및 문서/Pasted image 20250218152103.png","exportPath":"사진-및-문서/pasted-image-20250218152103.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153131.png":{"createdTime":1739863854065,"modifiedTime":1739860291108,"sourceSize":5662,"sourcePath":"사진 및 문서/Pasted image 20250218153131.png","exportPath":"사진-및-문서/pasted-image-20250218153131.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153319.png":{"createdTime":1739863854066,"modifiedTime":1739860399141,"sourceSize":4846,"sourcePath":"사진 및 문서/Pasted image 20250218153319.png","exportPath":"사진-및-문서/pasted-image-20250218153319.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153445.png":{"createdTime":1739863854070,"modifiedTime":1739860485474,"sourceSize":3834,"sourcePath":"사진 및 문서/Pasted image 20250218153445.png","exportPath":"사진-및-문서/pasted-image-20250218153445.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153543.png":{"createdTime":1739863854071,"modifiedTime":1739860543611,"sourceSize":51007,"sourcePath":"사진 및 문서/Pasted image 20250218153543.png","exportPath":"사진-및-문서/pasted-image-20250218153543.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153553.png":{"createdTime":1739863854073,"modifiedTime":1739860553053,"sourceSize":36756,"sourcePath":"사진 및 문서/Pasted image 20250218153553.png","exportPath":"사진-및-문서/pasted-image-20250218153553.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218151330.png":{"createdTime":1739863854053,"modifiedTime":1739859210349,"sourceSize":323323,"sourcePath":"사진 및 문서/Pasted image 20250218151330.png","exportPath":"사진-및-문서/pasted-image-20250218151330.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153814.png":{"createdTime":1739863854075,"modifiedTime":1739860694285,"sourceSize":94156,"sourcePath":"사진 및 문서/Pasted image 20250218153814.png","exportPath":"사진-및-문서/pasted-image-20250218153814.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153858.png":{"createdTime":1739863854077,"modifiedTime":1739860738867,"sourceSize":18633,"sourcePath":"사진 및 문서/Pasted image 20250218153858.png","exportPath":"사진-및-문서/pasted-image-20250218153858.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154352.png":{"createdTime":1739863854079,"modifiedTime":1739861032727,"sourceSize":32120,"sourcePath":"사진 및 문서/Pasted image 20250218154352.png","exportPath":"사진-및-문서/pasted-image-20250218154352.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154433.png":{"createdTime":1739863854079,"modifiedTime":1739861073109,"sourceSize":71085,"sourcePath":"사진 및 문서/Pasted image 20250218154433.png","exportPath":"사진-및-문서/pasted-image-20250218154433.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154615.png":{"createdTime":1739863854079,"modifiedTime":1739861175610,"sourceSize":19734,"sourcePath":"사진 및 문서/Pasted image 20250218154615.png","exportPath":"사진-및-문서/pasted-image-20250218154615.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154633.png":{"createdTime":1739863854079,"modifiedTime":1739861193533,"sourceSize":7603,"sourcePath":"사진 및 문서/Pasted image 20250218154633.png","exportPath":"사진-및-문서/pasted-image-20250218154633.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154647.png":{"createdTime":1739863854079,"modifiedTime":1739861207274,"sourceSize":79039,"sourcePath":"사진 및 문서/Pasted image 20250218154647.png","exportPath":"사진-및-문서/pasted-image-20250218154647.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218155524.png":{"createdTime":1739863854079,"modifiedTime":1739861724018,"sourceSize":72167,"sourcePath":"사진 및 문서/Pasted image 20250218155524.png","exportPath":"사진-및-문서/pasted-image-20250218155524.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160328.png":{"createdTime":1739863854079,"modifiedTime":1739862208474,"sourceSize":15278,"sourcePath":"사진 및 문서/Pasted image 20250218160328.png","exportPath":"사진-및-문서/pasted-image-20250218160328.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160359.png":{"createdTime":1739863854079,"modifiedTime":1739862239425,"sourceSize":15865,"sourcePath":"사진 및 문서/Pasted image 20250218160359.png","exportPath":"사진-및-문서/pasted-image-20250218160359.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160428.png":{"createdTime":1739863854096,"modifiedTime":1739862268957,"sourceSize":43414,"sourcePath":"사진 및 문서/Pasted image 20250218160428.png","exportPath":"사진-및-문서/pasted-image-20250218160428.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160532.png":{"createdTime":1739863854099,"modifiedTime":1739862332221,"sourceSize":16755,"sourcePath":"사진 및 문서/Pasted image 20250218160532.png","exportPath":"사진-및-문서/pasted-image-20250218160532.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160956.png":{"createdTime":1739863854101,"modifiedTime":1739862596018,"sourceSize":71694,"sourcePath":"사진 및 문서/Pasted image 20250218160956.png","exportPath":"사진-및-문서/pasted-image-20250218160956.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161424.png":{"createdTime":1739863854104,"modifiedTime":1739863222819,"sourceSize":88775,"sourcePath":"사진 및 문서/Pasted image 20250218161424.png","exportPath":"사진-및-문서/pasted-image-20250218161424.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161515.png":{"createdTime":1739863854106,"modifiedTime":1739863222820,"sourceSize":66971,"sourcePath":"사진 및 문서/Pasted image 20250218161515.png","exportPath":"사진-및-문서/pasted-image-20250218161515.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161728.png":{"createdTime":1739863854109,"modifiedTime":1739863222821,"sourceSize":36864,"sourcePath":"사진 및 문서/Pasted image 20250218161728.png","exportPath":"사진-및-문서/pasted-image-20250218161728.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161824.png":{"createdTime":1739863854112,"modifiedTime":1739863222822,"sourceSize":81212,"sourcePath":"사진 및 문서/Pasted image 20250218161824.png","exportPath":"사진-및-문서/pasted-image-20250218161824.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161847.png":{"createdTime":1739863854114,"modifiedTime":1739863222823,"sourceSize":57171,"sourcePath":"사진 및 문서/Pasted image 20250218161847.png","exportPath":"사진-및-문서/pasted-image-20250218161847.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161937.png":{"createdTime":1739863854116,"modifiedTime":1739863222823,"sourceSize":47752,"sourcePath":"사진 및 문서/Pasted image 20250218161937.png","exportPath":"사진-및-문서/pasted-image-20250218161937.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218162355.png":{"createdTime":1739863854120,"modifiedTime":1739863435970,"sourceSize":174935,"sourcePath":"사진 및 문서/Pasted image 20250218162355.png","exportPath":"사진-및-문서/pasted-image-20250218162355.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png":{"createdTime":1739950849162,"modifiedTime":1739949560211,"sourceSize":174630,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-19_16_19_04.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250219154331.png":{"createdTime":1739950852026,"modifiedTime":1739947411858,"sourceSize":151126,"sourcePath":"사진 및 문서/Pasted image 20250219154331.png","exportPath":"사진-및-문서/pasted-image-20250219154331.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250219154315.png":{"createdTime":1739950852024,"modifiedTime":1739947395101,"sourceSize":32194,"sourcePath":"사진 및 문서/Pasted image 20250219154315.png","exportPath":"사진-및-문서/pasted-image-20250219154315.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224144309.png":{"createdTime":1739839894811,"modifiedTime":1739424429296,"sourceSize":65503,"sourcePath":"사진 및 문서/Pasted image 20241224144309.png","exportPath":"사진-및-문서/pasted-image-20241224144309.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241226111559.png":{"createdTime":1739839894815,"modifiedTime":1739424429298,"sourceSize":55022,"sourcePath":"사진 및 문서/Pasted image 20241226111559.png","exportPath":"사진-및-문서/pasted-image-20241226111559.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250102160223.png":{"createdTime":1739839894828,"modifiedTime":1739424429303,"sourceSize":29848,"sourcePath":"사진 및 문서/Pasted image 20250102160223.png","exportPath":"사진-및-문서/pasted-image-20250102160223.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241226152219.png":{"createdTime":1739839894817,"modifiedTime":1739424429298,"sourceSize":5000,"sourcePath":"사진 및 문서/Pasted image 20241226152219.png","exportPath":"사진-및-문서/pasted-image-20241226152219.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241226171158.png":{"createdTime":1739783575051,"modifiedTime":1739424429299,"sourceSize":37765,"sourcePath":"사진 및 문서/Pasted image 20241226171158.png","exportPath":"사진-및-문서/pasted-image-20241226171158.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241230135801.png":{"createdTime":1739839894821,"modifiedTime":1739424429300,"sourceSize":120367,"sourcePath":"사진 및 문서/Pasted image 20241230135801.png","exportPath":"사진-및-문서/pasted-image-20241230135801.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250102160213.png":{"createdTime":1739839894826,"modifiedTime":1739424429302,"sourceSize":108505,"sourcePath":"사진 및 문서/Pasted image 20250102160213.png","exportPath":"사진-및-문서/pasted-image-20250102160213.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250226145129.png":{"createdTime":1740549089449,"modifiedTime":1740549089450,"sourceSize":38384,"sourcePath":"사진 및 문서/Pasted image 20250226145129.png","exportPath":"사진-및-문서/pasted-image-20250226145129.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(9).png":{"createdTime":1739842929649,"modifiedTime":1739424429383,"sourceSize":156393,"sourcePath":"사진 및 문서/output (9).png","exportPath":"사진-및-문서/output-(9).png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241206113120.png":{"createdTime":1739842930067,"modifiedTime":1739424429278,"sourceSize":53681,"sourcePath":"사진 및 문서/Pasted image 20241206113120.png","exportPath":"사진-및-문서/pasted-image-20241206113120.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240610171904.png":{"createdTime":1739844879954,"modifiedTime":1739424428655,"sourceSize":48061,"sourcePath":"사진 및 문서/Pasted image 20240610171904.png","exportPath":"사진-및-문서/pasted-image-20240610171904.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531103441.png":{"createdTime":1739844879928,"modifiedTime":1739424428629,"sourceSize":13085,"sourcePath":"사진 및 문서/Pasted image 20240531103441.png","exportPath":"사진-및-문서/pasted-image-20240531103441.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531103549.png":{"createdTime":1739844879930,"modifiedTime":1739424428629,"sourceSize":13731,"sourcePath":"사진 및 문서/Pasted image 20240531103549.png","exportPath":"사진-및-문서/pasted-image-20240531103549.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531105228.png":{"createdTime":1739844879938,"modifiedTime":1739424428647,"sourceSize":68992,"sourcePath":"사진 및 문서/Pasted image 20240531105228.png","exportPath":"사진-및-문서/pasted-image-20240531105228.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531105241.png":{"createdTime":1739844879940,"modifiedTime":1739424428648,"sourceSize":74304,"sourcePath":"사진 및 문서/Pasted image 20240531105241.png","exportPath":"사진-및-문서/pasted-image-20240531105241.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104351.png":{"createdTime":1739844879931,"modifiedTime":1739424428630,"sourceSize":47662,"sourcePath":"사진 및 문서/Pasted image 20240531104351.png","exportPath":"사진-및-문서/pasted-image-20240531104351.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104418.png":{"createdTime":1739844879933,"modifiedTime":1739424428631,"sourceSize":27661,"sourcePath":"사진 및 문서/Pasted image 20240531104418.png","exportPath":"사진-및-문서/pasted-image-20240531104418.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104751.png":{"createdTime":1739844879935,"modifiedTime":1739424428631,"sourceSize":24466,"sourcePath":"사진 및 문서/Pasted image 20240531104751.png","exportPath":"사진-및-문서/pasted-image-20240531104751.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104803.png":{"createdTime":1739844879937,"modifiedTime":1739424428632,"sourceSize":35445,"sourcePath":"사진 및 문서/Pasted image 20240531104803.png","exportPath":"사진-및-문서/pasted-image-20240531104803.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240828104032.png":{"createdTime":1739844880154,"modifiedTime":1739424429090,"sourceSize":89251,"sourcePath":"사진 및 문서/Pasted image 20240828104032.png","exportPath":"사진-및-문서/pasted-image-20240828104032.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240828104728.png":{"createdTime":1739844880156,"modifiedTime":1739424429091,"sourceSize":123190,"sourcePath":"사진 및 문서/Pasted image 20240828104728.png","exportPath":"사진-및-문서/pasted-image-20240828104728.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250228150552.png":{"createdTime":1740727471570,"modifiedTime":1740727471571,"sourceSize":28810,"sourcePath":"사진 및 문서/Pasted image 20250228150552.png","exportPath":"사진-및-문서/pasted-image-20250228150552.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250102181842.png":{"createdTime":1739783575073,"modifiedTime":1739424429304,"sourceSize":30146,"sourcePath":"사진 및 문서/Pasted image 20250102181842.png","exportPath":"사진-및-문서/pasted-image-20250102181842.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221112429.png":{"createdTime":1740105237396,"modifiedTime":1740105237396,"sourceSize":64954,"sourcePath":"사진 및 문서/Pasted image 20250221112429.png","exportPath":"사진-및-문서/pasted-image-20250221112429.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114856.png":{"createdTime":1740106714988,"modifiedTime":1740106714988,"sourceSize":65325,"sourcePath":"사진 및 문서/Pasted image 20250221114856.png","exportPath":"사진-및-문서/pasted-image-20250221114856.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114901.png":{"createdTime":1740106714989,"modifiedTime":1740106714989,"sourceSize":11769,"sourcePath":"사진 및 문서/Pasted image 20250221114901.png","exportPath":"사진-및-문서/pasted-image-20250221114901.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114932.png":{"createdTime":1740106714990,"modifiedTime":1740106714990,"sourceSize":61109,"sourcePath":"사진 및 문서/Pasted image 20250221114932.png","exportPath":"사진-및-문서/pasted-image-20250221114932.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114945.png":{"createdTime":1740106714991,"modifiedTime":1740106714991,"sourceSize":23711,"sourcePath":"사진 및 문서/Pasted image 20250221114945.png","exportPath":"사진-및-문서/pasted-image-20250221114945.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114951.png":{"createdTime":1740106714991,"modifiedTime":1740106714992,"sourceSize":50550,"sourcePath":"사진 및 문서/Pasted image 20250221114951.png","exportPath":"사진-및-문서/pasted-image-20250221114951.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114959.png":{"createdTime":1740106714992,"modifiedTime":1740106714992,"sourceSize":58138,"sourcePath":"사진 및 문서/Pasted image 20250221114959.png","exportPath":"사진-및-문서/pasted-image-20250221114959.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115004.png":{"createdTime":1740106714993,"modifiedTime":1740106714993,"sourceSize":69732,"sourcePath":"사진 및 문서/Pasted image 20250221115004.png","exportPath":"사진-및-문서/pasted-image-20250221115004.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115010.png":{"createdTime":1740106714994,"modifiedTime":1740106714994,"sourceSize":27832,"sourcePath":"사진 및 문서/Pasted image 20250221115010.png","exportPath":"사진-및-문서/pasted-image-20250221115010.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115019.png":{"createdTime":1740106714994,"modifiedTime":1740106714994,"sourceSize":18871,"sourcePath":"사진 및 문서/Pasted image 20250221115019.png","exportPath":"사진-및-문서/pasted-image-20250221115019.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115024.png":{"createdTime":1740106714995,"modifiedTime":1740106714995,"sourceSize":13209,"sourcePath":"사진 및 문서/Pasted image 20250221115024.png","exportPath":"사진-및-문서/pasted-image-20250221115024.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115030.png":{"createdTime":1740106714996,"modifiedTime":1740106714996,"sourceSize":119401,"sourcePath":"사진 및 문서/Pasted image 20250221115030.png","exportPath":"사진-및-문서/pasted-image-20250221115030.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115035.png":{"createdTime":1740106714997,"modifiedTime":1740106714997,"sourceSize":129628,"sourcePath":"사진 및 문서/Pasted image 20250221115035.png","exportPath":"사진-및-문서/pasted-image-20250221115035.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115040.png":{"createdTime":1740106714998,"modifiedTime":1740106714998,"sourceSize":82286,"sourcePath":"사진 및 문서/Pasted image 20250221115040.png","exportPath":"사진-및-문서/pasted-image-20250221115040.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115046.png":{"createdTime":1740106714999,"modifiedTime":1740106714999,"sourceSize":65882,"sourcePath":"사진 및 문서/Pasted image 20250221115046.png","exportPath":"사진-및-문서/pasted-image-20250221115046.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115052.png":{"createdTime":1740106715000,"modifiedTime":1740106715000,"sourceSize":53469,"sourcePath":"사진 및 문서/Pasted image 20250221115052.png","exportPath":"사진-및-문서/pasted-image-20250221115052.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115058.png":{"createdTime":1740106715001,"modifiedTime":1740106715001,"sourceSize":43462,"sourcePath":"사진 및 문서/Pasted image 20250221115058.png","exportPath":"사진-및-문서/pasted-image-20250221115058.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115102.png":{"createdTime":1740106715001,"modifiedTime":1740106715002,"sourceSize":22627,"sourcePath":"사진 및 문서/Pasted image 20250221115102.png","exportPath":"사진-및-문서/pasted-image-20250221115102.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115117.png":{"createdTime":1740106715003,"modifiedTime":1740106715003,"sourceSize":176301,"sourcePath":"사진 및 문서/Pasted image 20250221115117.png","exportPath":"사진-및-문서/pasted-image-20250221115117.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115122.png":{"createdTime":1740106715003,"modifiedTime":1740106715004,"sourceSize":17792,"sourcePath":"사진 및 문서/Pasted image 20250221115122.png","exportPath":"사진-및-문서/pasted-image-20250221115122.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115129.png":{"createdTime":1740106715004,"modifiedTime":1740106715005,"sourceSize":17789,"sourcePath":"사진 및 문서/Pasted image 20250221115129.png","exportPath":"사진-및-문서/pasted-image-20250221115129.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115132.png":{"createdTime":1740106715006,"modifiedTime":1740106715006,"sourceSize":130355,"sourcePath":"사진 및 문서/Pasted image 20250221115132.png","exportPath":"사진-및-문서/pasted-image-20250221115132.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115136.png":{"createdTime":1740106715006,"modifiedTime":1740106715007,"sourceSize":40025,"sourcePath":"사진 및 문서/Pasted image 20250221115136.png","exportPath":"사진-및-문서/pasted-image-20250221115136.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115140.png":{"createdTime":1740106715008,"modifiedTime":1740106715008,"sourceSize":130307,"sourcePath":"사진 및 문서/Pasted image 20250221115140.png","exportPath":"사진-및-문서/pasted-image-20250221115140.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115146.png":{"createdTime":1740106715008,"modifiedTime":1740106715008,"sourceSize":12192,"sourcePath":"사진 및 문서/Pasted image 20250221115146.png","exportPath":"사진-및-문서/pasted-image-20250221115146.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115151.png":{"createdTime":1740106715009,"modifiedTime":1740106715009,"sourceSize":23806,"sourcePath":"사진 및 문서/Pasted image 20250221115151.png","exportPath":"사진-및-문서/pasted-image-20250221115151.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115157.png":{"createdTime":1740106715010,"modifiedTime":1740106715010,"sourceSize":22775,"sourcePath":"사진 및 문서/Pasted image 20250221115157.png","exportPath":"사진-및-문서/pasted-image-20250221115157.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115201.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":53316,"sourcePath":"사진 및 문서/Pasted image 20250221115201.png","exportPath":"사진-및-문서/pasted-image-20250221115201.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115214.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":94161,"sourcePath":"사진 및 문서/Pasted image 20250221115214.png","exportPath":"사진-및-문서/pasted-image-20250221115214.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115220.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":23961,"sourcePath":"사진 및 문서/Pasted image 20250221115220.png","exportPath":"사진-및-문서/pasted-image-20250221115220.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115224.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":3897,"sourcePath":"사진 및 문서/Pasted image 20250221115224.png","exportPath":"사진-및-문서/pasted-image-20250221115224.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115228.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":39103,"sourcePath":"사진 및 문서/Pasted image 20250221115228.png","exportPath":"사진-및-문서/pasted-image-20250221115228.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115232.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":71492,"sourcePath":"사진 및 문서/Pasted image 20250221115232.png","exportPath":"사진-및-문서/pasted-image-20250221115232.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114152.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":38552,"sourcePath":"사진 및 문서/Pasted image 20250221114152.png","exportPath":"사진-및-문서/pasted-image-20250221114152.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114208.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":237325,"sourcePath":"사진 및 문서/Pasted image 20250221114208.png","exportPath":"사진-및-문서/pasted-image-20250221114208.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114220.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":338363,"sourcePath":"사진 및 문서/Pasted image 20250221114220.png","exportPath":"사진-및-문서/pasted-image-20250221114220.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218145702.png":{"createdTime":1739863854050,"modifiedTime":1739858222077,"sourceSize":27774,"sourcePath":"사진 및 문서/Pasted image 20250218145702.png","exportPath":"사진-및-문서/pasted-image-20250218145702.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218145823.png":{"createdTime":1739863854052,"modifiedTime":1739858303156,"sourceSize":178936,"sourcePath":"사진 및 문서/Pasted image 20250218145823.png","exportPath":"사진-및-문서/pasted-image-20250218145823.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241220113308.png":{"createdTime":1739950851645,"modifiedTime":1739424429291,"sourceSize":45942,"sourcePath":"사진 및 문서/Pasted image 20241220113308.png","exportPath":"사진-및-문서/pasted-image-20241220113308.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241220113315.png":{"createdTime":1739950851648,"modifiedTime":1739424429292,"sourceSize":29805,"sourcePath":"사진 및 문서/Pasted image 20241220113315.png","exportPath":"사진-및-문서/pasted-image-20241220113315.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531162124.png":{"createdTime":1739844879942,"modifiedTime":1739424428649,"sourceSize":142328,"sourcePath":"사진 및 문서/Pasted image 20240531162124.png","exportPath":"사진-및-문서/pasted-image-20240531162124.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240722180706.png":{"createdTime":1739844880028,"modifiedTime":1739424428938,"sourceSize":191141,"sourcePath":"사진 및 문서/Pasted image 20240722180706.png","exportPath":"사진-및-문서/pasted-image-20240722180706.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240611144129.png":{"createdTime":1739844879956,"modifiedTime":1739424428657,"sourceSize":167252,"sourcePath":"사진 및 문서/Pasted image 20240611144129.png","exportPath":"사진-및-문서/pasted-image-20240611144129.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240605160336.png":{"createdTime":1739844879953,"modifiedTime":1739424428654,"sourceSize":84155,"sourcePath":"사진 및 문서/Pasted image 20240605160336.png","exportPath":"사진-및-문서/pasted-image-20240605160336.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240723134224.png":{"createdTime":1739844880035,"modifiedTime":1739424428974,"sourceSize":33317,"sourcePath":"사진 및 문서/Pasted image 20240723134224.png","exportPath":"사진-및-문서/pasted-image-20240723134224.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240723134333.png":{"createdTime":1739844880037,"modifiedTime":1739424428975,"sourceSize":27480,"sourcePath":"사진 및 문서/Pasted image 20240723134333.png","exportPath":"사진-및-문서/pasted-image-20240723134333.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240603173517.png":{"createdTime":1739844879943,"modifiedTime":1739424428650,"sourceSize":35221,"sourcePath":"사진 및 문서/Pasted image 20240603173517.png","exportPath":"사진-및-문서/pasted-image-20240603173517.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240603180042.png":{"createdTime":1739844879946,"modifiedTime":1739424428651,"sourceSize":54764,"sourcePath":"사진 및 문서/Pasted image 20240603180042.png","exportPath":"사진-및-문서/pasted-image-20240603180042.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240604102140.png":{"createdTime":1739844879948,"modifiedTime":1739424428652,"sourceSize":70352,"sourcePath":"사진 및 문서/Pasted image 20240604102140.png","exportPath":"사진-및-문서/pasted-image-20240604102140.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240604144026.png":{"createdTime":1739844879949,"modifiedTime":1739424428653,"sourceSize":65753,"sourcePath":"사진 및 문서/Pasted image 20240604144026.png","exportPath":"사진-및-문서/pasted-image-20240604144026.png","showInTree":false,"treeOrder":0},"lib/html/custom-head-content.html":{"createdTime":1741251096686,"modifiedTime":1746153879885,"sourceSize":4491,"sourcePath":"custom-head-content.html","exportPath":"lib/html/custom-head-content.html","showInTree":false,"treeOrder":0},"lib/fonts/94f2f163d4b698242fef.otf":{"createdTime":1747811155682,"modifiedTime":1747811155682,"sourceSize":66800,"sourcePath":"","exportPath":"lib/fonts/94f2f163d4b698242fef.otf","showInTree":false,"treeOrder":0},"lib/fonts/72505e6a122c6acd5471.woff2":{"createdTime":1747811155683,"modifiedTime":1747811155683,"sourceSize":104232,"sourcePath":"","exportPath":"lib/fonts/72505e6a122c6acd5471.woff2","showInTree":false,"treeOrder":0},"lib/fonts/2d5198822ab091ce4305.woff2":{"createdTime":1747811155684,"modifiedTime":1747811155684,"sourceSize":104332,"sourcePath":"","exportPath":"lib/fonts/2d5198822ab091ce4305.woff2","showInTree":false,"treeOrder":0},"lib/fonts/c8ba52b05a9ef10f4758.woff2":{"createdTime":1747811155685,"modifiedTime":1747811155685,"sourceSize":98868,"sourcePath":"","exportPath":"lib/fonts/c8ba52b05a9ef10f4758.woff2","showInTree":false,"treeOrder":0},"lib/fonts/cb10ffd7684cd9836a05.woff2":{"createdTime":1747811155686,"modifiedTime":1747811155686,"sourceSize":106876,"sourcePath":"","exportPath":"lib/fonts/cb10ffd7684cd9836a05.woff2","showInTree":false,"treeOrder":0},"lib/fonts/b5f0f109bc88052d4000.woff2":{"createdTime":1747811155687,"modifiedTime":1747811155687,"sourceSize":105804,"sourcePath":"","exportPath":"lib/fonts/b5f0f109bc88052d4000.woff2","showInTree":false,"treeOrder":0},"lib/fonts/cbe0ae49c52c920fd563.woff2":{"createdTime":1747811155687,"modifiedTime":1747811155687,"sourceSize":106108,"sourcePath":"","exportPath":"lib/fonts/cbe0ae49c52c920fd563.woff2","showInTree":false,"treeOrder":0},"lib/fonts/535a6cf662596b3bd6a6.woff2":{"createdTime":1747811155688,"modifiedTime":1747811155688,"sourceSize":111708,"sourcePath":"","exportPath":"lib/fonts/535a6cf662596b3bd6a6.woff2","showInTree":false,"treeOrder":0},"lib/fonts/70cc7ff27245e82ad414.ttf":{"createdTime":1747811155689,"modifiedTime":1747811155689,"sourceSize":192740,"sourcePath":"","exportPath":"lib/fonts/70cc7ff27245e82ad414.ttf","showInTree":false,"treeOrder":0},"lib/fonts/454577c22304619db035.ttf":{"createdTime":1747811155693,"modifiedTime":1747811155693,"sourceSize":161376,"sourcePath":"","exportPath":"lib/fonts/454577c22304619db035.ttf","showInTree":false,"treeOrder":0},"lib/fonts/52ac8f3034507f1d9e53.ttf":{"createdTime":1747811155690,"modifiedTime":1747811155690,"sourceSize":191568,"sourcePath":"","exportPath":"lib/fonts/52ac8f3034507f1d9e53.ttf","showInTree":false,"treeOrder":0},"lib/fonts/05b618077343fbbd92b7.ttf":{"createdTime":1747811155694,"modifiedTime":1747811155694,"sourceSize":155288,"sourcePath":"","exportPath":"lib/fonts/05b618077343fbbd92b7.ttf","showInTree":false,"treeOrder":0},"lib/fonts/4bb6ac751d1c5478ff3a.woff2":{"createdTime":1747811155681,"modifiedTime":1747811155681,"sourceSize":7876,"sourcePath":"","exportPath":"lib/fonts/4bb6ac751d1c5478ff3a.woff2","showInTree":false,"treeOrder":0},"lib/media/6155340132a851f6089e.svg":{"createdTime":1747811155681,"modifiedTime":1747811155681,"sourceSize":315,"sourcePath":"","exportPath":"lib/media/6155340132a851f6089e.svg","showInTree":false,"treeOrder":0},"lib/media/2308ab1944a6bfa5c5b8.svg":{"createdTime":1747811155682,"modifiedTime":1747811155682,"sourceSize":278,"sourcePath":"","exportPath":"lib/media/2308ab1944a6bfa5c5b8.svg","showInTree":false,"treeOrder":0},"lib/html/file-tree.html":{"createdTime":1747811156040,"modifiedTime":1747811156040,"sourceSize":69201,"sourcePath":"","exportPath":"lib/html/file-tree.html","showInTree":false,"treeOrder":0},"lib/scripts/webpage.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":49059,"sourcePath":"","exportPath":"lib/scripts/webpage.js","showInTree":false,"treeOrder":0},"lib/scripts/minisearch.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":29422,"sourcePath":"","exportPath":"lib/scripts/minisearch.js","showInTree":false,"treeOrder":0},"lib/styles/obsidian.css":{"createdTime":1747811155804,"modifiedTime":1747811155804,"sourceSize":400808,"sourcePath":"","exportPath":"lib/styles/obsidian.css","showInTree":false,"treeOrder":0},"lib/styles/other-plugins.css":{"createdTime":1747788124976,"modifiedTime":1747788124976,"sourceSize":2702,"sourcePath":"","exportPath":"lib/styles/other-plugins.css","showInTree":false,"treeOrder":0},"lib/styles/theme.css":{"createdTime":1747788124972,"modifiedTime":1747788124972,"sourceSize":41426,"sourcePath":"","exportPath":"lib/styles/theme.css","showInTree":false,"treeOrder":0},"lib/styles/global-variable-styles.css":{"createdTime":1747811155675,"modifiedTime":1747811155675,"sourceSize":417,"sourcePath":"","exportPath":"lib/styles/global-variable-styles.css","showInTree":false,"treeOrder":0},"lib/styles/main-styles.css":{"createdTime":1747788124752,"modifiedTime":1747788124752,"sourceSize":19271,"sourcePath":"","exportPath":"lib/styles/main-styles.css","showInTree":false,"treeOrder":0},"lib/metadata.json":{"createdTime":1747811164966,"modifiedTime":1747811164966,"sourceSize":383079,"sourcePath":"","exportPath":"lib/metadata.json","showInTree":false,"treeOrder":0},"lib/search-index.json":{"createdTime":1747811164966,"modifiedTime":1747811164966,"sourceSize":287167,"sourcePath":"","exportPath":"lib/search-index.json","showInTree":false,"treeOrder":0},"project/melometer-project/✈mm_클라우드-마이그레이션.html":{"createdTime":1746163531597,"modifiedTime":1746603628278,"sourceSize":3874,"sourcePath":"project/MeloMeter Project/✈MM_클라우드 마이그레이션.md","exportPath":"project/melometer-project/✈mm_클라우드-마이그레이션.html"},"사진-및-문서/do-messenger_screenshot_2025-05-02_14_28_33.png":{"createdTime":1746163732356,"modifiedTime":1746163732358,"sourceSize":575646,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-05-02_14_28_33.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-05-02_14_28_33.png","showInTree":false,"treeOrder":0},"project/🚞-java-대용량-excel-리펙토링.html":{"createdTime":1746688893573,"modifiedTime":1747385811195,"sourceSize":13174,"sourcePath":"project/🚞 Java 대용량 Excel 리펙토링.md","exportPath":"project/🚞-java-대용량-excel-리펙토링.html"},"사진-및-문서/pasted-image-20250513101628.png":{"createdTime":1747098988733,"modifiedTime":1747098988734,"sourceSize":19632,"sourcePath":"사진 및 문서/Pasted image 20250513101628.png","exportPath":"사진-및-문서/pasted-image-20250513101628.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250513101743.png":{"createdTime":1747099063952,"modifiedTime":1747099063953,"sourceSize":27608,"sourcePath":"사진 및 문서/Pasted image 20250513101743.png","exportPath":"사진-및-문서/pasted-image-20250513101743.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516163401.png":{"createdTime":1747380841062,"modifiedTime":1747380841062,"sourceSize":12526,"sourcePath":"사진 및 문서/Pasted image 20250516163401.png","exportPath":"사진-및-문서/pasted-image-20250516163401.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516163522.png":{"createdTime":1747380922724,"modifiedTime":1747380922725,"sourceSize":6788,"sourcePath":"사진 및 문서/Pasted image 20250516163522.png","exportPath":"사진-및-문서/pasted-image-20250516163522.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516154726.png":{"createdTime":1747378046845,"modifiedTime":1747378046846,"sourceSize":67037,"sourcePath":"사진 및 문서/Pasted image 20250516154726.png","exportPath":"사진-및-문서/pasted-image-20250516154726.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516164727.png":{"createdTime":1747381647430,"modifiedTime":1747381647430,"sourceSize":3059,"sourcePath":"사진 및 문서/Pasted image 20250516164727.png","exportPath":"사진-및-문서/pasted-image-20250516164727.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516164550.png":{"createdTime":1747381550641,"modifiedTime":1747381550642,"sourceSize":2920,"sourcePath":"사진 및 문서/Pasted image 20250516164550.png","exportPath":"사진-및-문서/pasted-image-20250516164550.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516164537.png":{"createdTime":1747381537033,"modifiedTime":1747381537033,"sourceSize":8192,"sourcePath":"사진 및 문서/Pasted image 20250516164537.png","exportPath":"사진-및-문서/pasted-image-20250516164537.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165030.png":{"createdTime":1747381830743,"modifiedTime":1747381830744,"sourceSize":15688,"sourcePath":"사진 및 문서/Pasted image 20250516165030.png","exportPath":"사진-및-문서/pasted-image-20250516165030.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165307.png":{"createdTime":1747381987812,"modifiedTime":1747381987813,"sourceSize":2210,"sourcePath":"사진 및 문서/Pasted image 20250516165307.png","exportPath":"사진-및-문서/pasted-image-20250516165307.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165250.png":{"createdTime":1747381970736,"modifiedTime":1747381970737,"sourceSize":8267,"sourcePath":"사진 및 문서/Pasted image 20250516165250.png","exportPath":"사진-및-문서/pasted-image-20250516165250.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165344.png":{"createdTime":1747382024879,"modifiedTime":1747382024880,"sourceSize":13229,"sourcePath":"사진 및 문서/Pasted image 20250516165344.png","exportPath":"사진-및-문서/pasted-image-20250516165344.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165523.png":{"createdTime":1747382123983,"modifiedTime":1747382123984,"sourceSize":1891,"sourcePath":"사진 및 문서/Pasted image 20250516165523.png","exportPath":"사진-및-문서/pasted-image-20250516165523.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165617.png":{"createdTime":1747382177932,"modifiedTime":1747382177932,"sourceSize":7863,"sourcePath":"사진 및 문서/Pasted image 20250516165617.png","exportPath":"사진-및-문서/pasted-image-20250516165617.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250516165627.png":{"createdTime":1747382187078,"modifiedTime":1747382187079,"sourceSize":13358,"sourcePath":"사진 및 문서/Pasted image 20250516165627.png","exportPath":"사진-및-문서/pasted-image-20250516165627.png","showInTree":false,"treeOrder":0},"사진-및-문서/스크린샷-2025-05-15-오후-10.33.42.png":{"createdTime":1747356022808,"modifiedTime":1747356022808,"sourceSize":12243,"sourcePath":"사진 및 문서/스크린샷 2025-05-15 오후 10.33.42.png","exportPath":"사진-및-문서/스크린샷-2025-05-15-오후-10.33.42.png","showInTree":false,"treeOrder":0},"사진-및-문서/스크린샷-2025-05-15-오후-10.38.28.png":{"createdTime":1747356022809,"modifiedTime":1747356022809,"sourceSize":42242,"sourcePath":"사진 및 문서/스크린샷 2025-05-15 오후 10.38.28.png","exportPath":"사진-및-문서/스크린샷-2025-05-15-오후-10.38.28.png","showInTree":false,"treeOrder":0},"사진-및-문서/스크린샷-2025-05-15-오후-10.41.15.png":{"createdTime":1747356022810,"modifiedTime":1747356022810,"sourceSize":52594,"sourcePath":"사진 및 문서/스크린샷 2025-05-15 오후 10.41.15.png","exportPath":"사진-및-문서/스크린샷-2025-05-15-오후-10.41.15.png","showInTree":false,"treeOrder":0},"짧은-키워드/영속성-컨텍스트.html":{"createdTime":1747636635791,"modifiedTime":1747792885511,"sourceSize":6209,"sourcePath":"짧은 키워드/영속성 컨텍스트.md","exportPath":"짧은-키워드/영속성-컨텍스트.html"},"issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html":{"createdTime":1747361142049,"modifiedTime":1747794366628,"sourceSize":7480,"sourcePath":"Issue_TroubleShooting/🍧 JPA의 영속성 상태와 데이터 Log 이슈.md","exportPath":"issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html"},"study/cs/🌋-osiv란-무엇인가.html":{"createdTime":1741932822851,"modifiedTime":1747632704139,"sourceSize":5226,"sourcePath":"study/CS/🌋 OSIV란 무엇인가.md","exportPath":"study/cs/🌋-osiv란-무엇인가.html"},"사진-및-문서/pasted-image-20250519144842.png":{"createdTime":1747633722114,"modifiedTime":1747633722115,"sourceSize":158750,"sourcePath":"사진 및 문서/Pasted image 20250519144842.png","exportPath":"사진-및-문서/pasted-image-20250519144842.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250520142253.png":{"createdTime":1747718573455,"modifiedTime":1747718573455,"sourceSize":21700,"sourcePath":"사진 및 문서/Pasted image 20250520142253.png","exportPath":"사진-및-문서/pasted-image-20250520142253.png","showInTree":false,"treeOrder":0},"짧은-키워드/프록시.html":{"createdTime":1747796612640,"modifiedTime":1747796648601,"sourceSize":801,"sourcePath":"짧은 키워드/프록시.md","exportPath":"짧은-키워드/프록시.html"},"짧은-키워드/@-어노테이션이란-무엇인인가.html":{"createdTime":1747809832261,"modifiedTime":1747809832272,"sourceSize":275,"sourcePath":"짧은 키워드/@ 어노테이션이란 무엇인인가.md","exportPath":"짧은-키워드/@-어노테이션이란-무엇인인가.html"},"짧은-키워드/@component.html":{"createdTime":1747809852702,"modifiedTime":1747809852705,"sourceSize":956,"sourcePath":"짧은 키워드/@Component.md","exportPath":"짧은-키워드/@component.html"},"짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html":{"createdTime":1747808359435,"modifiedTime":1747808359458,"sourceSize":1977,"sourcePath":"짧은 키워드/객체지향설계 5원칙 S.O.L.I.D.md","exportPath":"짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html"},"짧은-키워드/데이터-검증-(validation).html":{"createdTime":1747810044462,"modifiedTime":1747810044532,"sourceSize":1714,"sourcePath":"짧은 키워드/데이터 검증 (Validation).md","exportPath":"짧은-키워드/데이터-검증-(validation).html"},"짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html":{"createdTime":1747808642807,"modifiedTime":1747808642812,"sourceSize":5341,"sourcePath":"짧은 키워드/데코레이션 패턴 vs 프록시 패턴.md","exportPath":"짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html"},"짧은-키워드/많이쓰이는-db용어.html":{"createdTime":1747810931270,"modifiedTime":1747810931293,"sourceSize":1688,"sourcePath":"짧은 키워드/많이쓰이는 DB용어.md","exportPath":"짧은-키워드/많이쓰이는-db용어.html"},"짧은-키워드/빌더패턴을-왜쓰는가.html":{"createdTime":1747809910075,"modifiedTime":1747809910079,"sourceSize":1692,"sourcePath":"짧은 키워드/빌더패턴을 왜쓰는가.md","exportPath":"짧은-키워드/빌더패턴을-왜쓰는가.html"},"짧은-키워드/상속과-합성.html":{"createdTime":1747808334317,"modifiedTime":1747808334321,"sourceSize":2327,"sourcePath":"짧은 키워드/상속과 합성.md","exportPath":"짧은-키워드/상속과-합성.html"},"짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html":{"createdTime":1747810900167,"modifiedTime":1747810900319,"sourceSize":2833,"sourcePath":"짧은 키워드/엘라스틱서치 인덱스와 샤드 분할.md","exportPath":"짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html"},"짧은-키워드/예외처리(exception).html":{"createdTime":1747810416612,"modifiedTime":1747810416616,"sourceSize":4242,"sourcePath":"짧은 키워드/예외처리(Exception).md","exportPath":"짧은-키워드/예외처리(exception).html"},"짧은-키워드/오버로딩-&-오버라이딩.html":{"createdTime":1747808310371,"modifiedTime":1747808310392,"sourceSize":1112,"sourcePath":"짧은 키워드/오버로딩 & 오버라이딩.md","exportPath":"짧은-키워드/오버로딩-&-오버라이딩.html"},"짧은-키워드/젠킨스의-간단한-설명.html":{"createdTime":1747810701182,"modifiedTime":1747810701185,"sourceSize":2469,"sourcePath":"짧은 키워드/젠킨스의 간단한 설명.md","exportPath":"짧은-키워드/젠킨스의-간단한-설명.html"},"짧은-키워드/컨테이너란-무엇일까.html":{"createdTime":1747810659195,"modifiedTime":1747810659238,"sourceSize":1786,"sourcePath":"짧은 키워드/컨테이너란 무엇일까.md","exportPath":"짧은-키워드/컨테이너란-무엇일까.html"},"짧은-키워드/쿠버네티스의-매니페스트-파일이란.html":{"createdTime":1747810746298,"modifiedTime":1747810746306,"sourceSize":468,"sourcePath":"짧은 키워드/쿠버네티스의 매니페스트 파일이란.md","exportPath":"짧은-키워드/쿠버네티스의-매니페스트-파일이란.html"},"짧은-키워드/현재-hf서비스의-cicd과정.html":{"createdTime":1747810752183,"modifiedTime":1747810825782,"sourceSize":2285,"sourcePath":"짧은 키워드/현재 HF서비스의 CICD과정.md","exportPath":"짧은-키워드/현재-hf서비스의-cicd과정.html"},"짧은-키워드/app-service-api-통신-플로우.html":{"createdTime":1747810335402,"modifiedTime":1747810335419,"sourceSize":479,"sourcePath":"짧은 키워드/APP - SERVICE - API 통신 플로우.md","exportPath":"짧은-키워드/app-service-api-통신-플로우.html"},"짧은-키워드/argo-cd란.html":{"createdTime":1747810740457,"modifiedTime":1747810740463,"sourceSize":347,"sourcePath":"짧은 키워드/Argo CD란.md","exportPath":"짧은-키워드/argo-cd란.html"},"짧은-키워드/batch-용어-설명.html":{"createdTime":1747810294778,"modifiedTime":1747810320081,"sourceSize":3298,"sourcePath":"짧은 키워드/Batch 용어 설명.md","exportPath":"짧은-키워드/batch-용어-설명.html"},"짧은-키워드/bean이란-무엇인가.html":{"createdTime":1747809839122,"modifiedTime":1747809839141,"sourceSize":204,"sourcePath":"짧은 키워드/Bean이란 무엇인가.md","exportPath":"짧은-키워드/bean이란-무엇인가.html"},"짧은-키워드/cnd(content-delivery-network)란.html":{"createdTime":1747810956864,"modifiedTime":1747810956868,"sourceSize":1218,"sourcePath":"짧은 키워드/CND(Content Delivery Network)란.md","exportPath":"짧은-키워드/cnd(content-delivery-network)란.html"},"짧은-키워드/database-정규화-과정.html":{"createdTime":1747810884314,"modifiedTime":1747810884386,"sourceSize":3807,"sourcePath":"짧은 키워드/DataBase 정규화  과정.md","exportPath":"짧은-키워드/database-정규화-과정.html"},"짧은-키워드/db-connection이란-무엇일까.html":{"createdTime":1747810880658,"modifiedTime":1747810880662,"sourceSize":594,"sourcePath":"짧은 키워드/DB Connection이란 무엇일까.md","exportPath":"짧은-키워드/db-connection이란-무엇일까.html"},"짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html":{"createdTime":1747810187783,"modifiedTime":1747810843154,"sourceSize":3725,"sourcePath":"짧은 키워드/DB의 저장 프로시저 (SP - Stored Procedure)란.md","exportPath":"짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html"},"짧은-키워드/dispatcherservlet의-역할.html":{"createdTime":1747810384731,"modifiedTime":1747810384735,"sourceSize":466,"sourcePath":"짧은 키워드/DispatcherServlet의 역할.md","exportPath":"짧은-키워드/dispatcherservlet의-역할.html"},"짧은-키워드/docker에-대한-간단한-설명.html":{"createdTime":1747810716519,"modifiedTime":1747810716557,"sourceSize":2409,"sourcePath":"짧은 키워드/Docker에 대한 간단한 설명.md","exportPath":"짧은-키워드/docker에-대한-간단한-설명.html"},"짧은-키워드/dual-테이블이란.html":{"createdTime":1747810896974,"modifiedTime":1747810896978,"sourceSize":249,"sourcePath":"짧은 키워드/Dual 테이블이란.md","exportPath":"짧은-키워드/dual-테이블이란.html"},"짧은-키워드/entity와-dto를-분리해야하는-이유.html":{"createdTime":1747810139013,"modifiedTime":1747810139017,"sourceSize":454,"sourcePath":"짧은 키워드/Entity와 DTO를 분리해야하는 이유.md","exportPath":"짧은-키워드/entity와-dto를-분리해야하는-이유.html"},"짧은-키워드/equals()-와-hashcode()-재정의.html":{"createdTime":1747810479915,"modifiedTime":1747810479928,"sourceSize":1090,"sourcePath":"짧은 키워드/Equals() 와 HashCode() 재정의.md","exportPath":"짧은-키워드/equals()-와-hashcode()-재정의.html"},"짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html":{"createdTime":1747810808467,"modifiedTime":1747810808471,"sourceSize":1580,"sourcePath":"짧은 키워드/Git Lab(깃랩) Git Hub(깃허브) 차이.md","exportPath":"짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html"},"짧은-키워드/gitops란.html":{"createdTime":1747810736384,"modifiedTime":1747810736387,"sourceSize":425,"sourcePath":"짧은 키워드/GitOps란.md","exportPath":"짧은-키워드/gitops란.html"},"짧은-키워드/grafana-loki-란.html":{"createdTime":1747810830526,"modifiedTime":1747810830530,"sourceSize":1604,"sourcePath":"짧은 키워드/Grafana Loki 란.md","exportPath":"짧은-키워드/grafana-loki-란.html"},"짧은-키워드/http-method-mapping.html":{"createdTime":1747810387605,"modifiedTime":1747810387643,"sourceSize":1951,"sourcePath":"짧은 키워드/HTTP Method - Mapping.md","exportPath":"짧은-키워드/http-method-mapping.html"},"짧은-키워드/java에서-string을-선언하는-두-가지-방법.html":{"createdTime":1747810997675,"modifiedTime":1747810997713,"sourceSize":699,"sourcePath":"짧은 키워드/Java에서 String을 선언하는 두 가지 방법.md","exportPath":"짧은-키워드/java에서-string을-선언하는-두-가지-방법.html"},"짧은-키워드/java의-람다란.html":{"createdTime":1747809573168,"modifiedTime":1747809573258,"sourceSize":3582,"sourcePath":"짧은 키워드/Java의 람다란.md","exportPath":"짧은-키워드/java의-람다란.html"},"짧은-키워드/java의-리플렉션이란.html":{"createdTime":1747809342823,"modifiedTime":1747809342827,"sourceSize":5607,"sourcePath":"짧은 키워드/Java의 리플렉션이란.md","exportPath":"짧은-키워드/java의-리플렉션이란.html"},"짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html":{"createdTime":1747810217633,"modifiedTime":1747810217637,"sourceSize":872,"sourcePath":"짧은 키워드/JPA에서 BooleanBuilder 와 BooleanExpression 이란.md","exportPath":"짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html"},"짧은-키워드/jpa의-지연로딩.html":{"createdTime":1747808688809,"modifiedTime":1747808688814,"sourceSize":1212,"sourcePath":"짧은 키워드/JPA의 지연로딩.md","exportPath":"짧은-키워드/jpa의-지연로딩.html"},"짧은-키워드/jpaqueryfactory란.html":{"createdTime":1747810286088,"modifiedTime":1747810286112,"sourceSize":1499,"sourcePath":"짧은 키워드/JPAQueryFactory란.md","exportPath":"짧은-키워드/jpaqueryfactory란.html"},"짧은-키워드/jpql과-querydsl-비교.html":{"createdTime":1747810210270,"modifiedTime":1747810210274,"sourceSize":1193,"sourcePath":"짧은 키워드/JPQL과 QueryDSL 비교.md","exportPath":"짧은-키워드/jpql과-querydsl-비교.html"},"짧은-키워드/jvm의-stack과-heap.html":{"createdTime":1747809581981,"modifiedTime":1747809582016,"sourceSize":1655,"sourcePath":"짧은 키워드/JVM의 Stack과 Heap.md","exportPath":"짧은-키워드/jvm의-stack과-heap.html"},"짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html":{"createdTime":1747810728089,"modifiedTime":1747810728308,"sourceSize":2078,"sourcePath":"짧은 키워드/k8s(쿠버네티스)에 대한 간단한 설명.md","exportPath":"짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html"},"짧은-키워드/load-balancer란.html":{"createdTime":1747810950892,"modifiedTime":1747810950897,"sourceSize":1064,"sourcePath":"짧은 키워드/Load Balancer란.md","exportPath":"짧은-키워드/load-balancer란.html"},"짧은-키워드/lock-(-데이터베이스-락-)-이란.html":{"createdTime":1747810937067,"modifiedTime":1747810937071,"sourceSize":8487,"sourcePath":"짧은 키워드/Lock ( 데이터베이스 락 ) 이란.md","exportPath":"짧은-키워드/lock-(-데이터베이스-락-)-이란.html"},"짧은-키워드/lombok-사용시-주의사항.html":{"createdTime":1747809947419,"modifiedTime":1747809947484,"sourceSize":1487,"sourcePath":"짧은 키워드/Lombok 사용시 주의사항.md","exportPath":"짧은-키워드/lombok-사용시-주의사항.html"},"짧은-키워드/maven-vs-gradle.html":{"createdTime":1747811020832,"modifiedTime":1747811020860,"sourceSize":851,"sourcePath":"짧은 키워드/Maven VS Gradle.md","exportPath":"짧은-키워드/maven-vs-gradle.html"},"짧은-키워드/multi-thread환경에서의-singleton.html":{"createdTime":1747811027573,"modifiedTime":1747811027576,"sourceSize":1534,"sourcePath":"짧은 키워드/Multi Thread환경에서의 Singleton.md","exportPath":"짧은-키워드/multi-thread환경에서의-singleton.html"},"짧은-키워드/netty란.html":{"createdTime":1747810474560,"modifiedTime":1747810474578,"sourceSize":336,"sourcePath":"짧은 키워드/Netty란.md","exportPath":"짧은-키워드/netty란.html"},"짧은-키워드/rest-기반의-트랜잭션.html":{"createdTime":1747810959907,"modifiedTime":1747810959991,"sourceSize":4662,"sourcePath":"짧은 키워드/REST 기반의 트랜잭션.md","exportPath":"짧은-키워드/rest-기반의-트랜잭션.html"},"짧은-키워드/service의-순환참조를-막는-방법.html":{"createdTime":1747810975695,"modifiedTime":1747810975724,"sourceSize":739,"sourcePath":"짧은 키워드/Service의 순환참조를 막는 방법.md","exportPath":"짧은-키워드/service의-순환참조를-막는-방법.html"},"짧은-키워드/spring-어노테이션@-간단설명모음.html":{"createdTime":1747809877197,"modifiedTime":1747809877221,"sourceSize":3197,"sourcePath":"짧은 키워드/Spring 어노테이션@ 간단설명모음.md","exportPath":"짧은-키워드/spring-어노테이션@-간단설명모음.html"},"짧은-키워드/spring-aop.html":{"createdTime":1747808604466,"modifiedTime":1747808604494,"sourceSize":1912,"sourcePath":"짧은 키워드/Spring AOP.md","exportPath":"짧은-키워드/spring-aop.html"},"짧은-키워드/spring-batch란.html":{"createdTime":1747810290574,"modifiedTime":1747810290578,"sourceSize":902,"sourcePath":"짧은 키워드/Spring Batch란.md","exportPath":"짧은-키워드/spring-batch란.html"},"짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html":{"createdTime":1747810327950,"modifiedTime":1747810327954,"sourceSize":3549,"sourcePath":"짧은 키워드/Spring Batch에서의 파티셔닝(Partitioning).md","exportPath":"짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html"},"짧은-키워드/spring-integration이란.html":{"createdTime":1747810395447,"modifiedTime":1747810395533,"sourceSize":5140,"sourcePath":"짧은 키워드/Spring Integration이란.md","exportPath":"짧은-키워드/spring-integration이란.html"},"짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html":{"createdTime":1747810428641,"modifiedTime":1747810428673,"sourceSize":3211,"sourcePath":"짧은 키워드/Spring MVC의 Service와 ServiceImpl 구조.md","exportPath":"짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html"},"짧은-키워드/spring-webflux란.html":{"createdTime":1747810356068,"modifiedTime":1747810375073,"sourceSize":2550,"sourcePath":"짧은 키워드/Spring WebFlux란.md","exportPath":"짧은-키워드/spring-webflux란.html"},"짧은-키워드/spring에서의-의존성-주입-방법.html":{"createdTime":1747810098720,"modifiedTime":1747810099041,"sourceSize":2558,"sourcePath":"짧은 키워드/Spring에서의 의존성 주입 방법.md","exportPath":"짧은-키워드/spring에서의-의존성-주입-방법.html"},"짧은-키워드/spring의-entitymanager는-무엇일까.html":{"createdTime":1747810148410,"modifiedTime":1747810148434,"sourceSize":475,"sourcePath":"짧은 키워드/Spring의 EntityManager는 무엇일까.md","exportPath":"짧은-키워드/spring의-entitymanager는-무엇일까.html"},"짧은-키워드/static-키워드에-대하여.html":{"createdTime":1747809557110,"modifiedTime":1747809557114,"sourceSize":1303,"sourcePath":"짧은 키워드/Static 키워드에 대하여.md","exportPath":"짧은-키워드/static-키워드에-대하여.html"},"lib/scripts/graph-wasm.wasm":{"createdTime":1747788123320,"modifiedTime":1739944056206.8618,"sourceSize":23377,"sourcePath":"","exportPath":"lib/scripts/graph-wasm.wasm","showInTree":false,"treeOrder":0},"lib/scripts/graph-view.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":15519,"sourcePath":"","exportPath":"lib/scripts/graph-view.js","showInTree":false,"treeOrder":0},"lib/scripts/graph-wasm.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":14021,"sourcePath":"","exportPath":"lib/scripts/graph-wasm.js","showInTree":false,"treeOrder":0},"lib/scripts/graph-render-worker.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":5179,"sourcePath":"","exportPath":"lib/scripts/graph-render-worker.js","showInTree":false,"treeOrder":0},"lib/scripts/tinycolor.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":29832,"sourcePath":"","exportPath":"lib/scripts/tinycolor.js","showInTree":false,"treeOrder":0},"lib/scripts/pixi.js":{"createdTime":1747788124729,"modifiedTime":1747788124729,"sourceSize":449509,"sourcePath":"","exportPath":"lib/scripts/pixi.js","showInTree":false,"treeOrder":0},"lib/scripts/graph-data.js":{"createdTime":1747811156044,"modifiedTime":1747811156044,"sourceSize":12522,"sourcePath":"","exportPath":"lib/scripts/graph-data.js","showInTree":false,"treeOrder":0}},"sourceToTarget":{"짧은 키워드/무제.md":"짧은-키워드/무제.html","짧은 키워드/CICD.md":"짧은-키워드/cicd.html","짧은 키워드/GitOps.md":"짧은-키워드/gitops.html","짧은 키워드/Redis 만료 정책.md":"짧은-키워드/redis-만료-정책.html","짧은 키워드/RESTful API.md":"짧은-키워드/restful-api.html","짧은 키워드/Servlet.md":"짧은-키워드/servlet.html","Issue_TroubleShooting/⏰ Script 로딩 지연 문제 해결 .js.md":"issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html","Issue_TroubleShooting/⚔ StckOverflow 이슈와 QueryDSL.md":"issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html","Issue_TroubleShooting/🔐 상품 투자하기 서비스 Lock기법 개선안.md":"issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html","Issue_TroubleShooting/🚦 Spring Batch 트러블슈팅.md":"issue_troubleshooting/🚦-spring-batch-트러블슈팅.html","Issue_TroubleShooting/🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검).md":"issue_troubleshooting/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html","lectur/🏫 강의 & 자격증.md":"lectur/🏫-강의-&-자격증.html","lectur/1. 객체 지향 설계와 스프링.md":"lectur/1.-객체-지향-설계와-스프링.html","lectur/2. 스프링 핵심 원리 이해.md":"lectur/2.-스프링-핵심-원리-이해.html","lectur/2.1 스프링 프로젝트 생성.md":"lectur/2.1-스프링-프로젝트-생성.html","lectur/2.2 회원 도메인 설계 및 개발.md":"lectur/2.2-회원-도메인-설계-및-개발.html","lectur/2.3 주문과 할인 도메인 설계 및 개발.md":"lectur/2.3-주문과-할인-도메인-설계-및-개발.html","lectur/2.4 새로운 할인 정책 개발.md":"lectur/2.4-새로운-할인-정책-개발.html","lectur/2.4.1 전체 흐름 정리.md":"lectur/2.4.1-전체-흐름-정리.html","lectur/2.5 좋은 객체지향 설계의 5가지 원칙의 적용.md":"lectur/2.5-좋은-객체지향-설계의-5가지-원칙의-적용.html","lectur/2.6 IoC, DI 그리고 컨테이너 - 스프링으로 전환.md":"lectur/2.6-ioc,-di-그리고-컨테이너-스프링으로-전환.html","lectur/3. 스프링 컨테이너와 스프링 빈.md":"lectur/3.-스프링-컨테이너와-스프링-빈.html","lectur/3.1 스프링 컨테이너 생성.md":"lectur/3.1-스프링-컨테이너-생성.html","project/hello Batch/✏ Chunk_Partitioning Batch 구조 드로잉.md":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링.md":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링 부록.md":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello marketing/👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출.md":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello marketing/👩‍👧‍👦 marketing Analytics 공통모듈 제작기.md":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/note CI_CD/👻 Obsidian 정적호스팅 CICD 과정.md":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","project/💻 프로젝트.md":"project/💻-프로젝트.html","project/🔫 이슈 분석 & 트러블슈팅.md":"project/🔫-이슈-분석-&-트러블슈팅.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 기타문제.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-기타문제.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 키워드.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-구조체(structuer).md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-구조체(structuer).html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-사용자 정의 함수.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-사용자-정의-함수.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-제어문.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 프로그래밍-포인터.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-포인터.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 SQL 문제.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/정보처리기사/정보처리기사 필기/🥈 필기 1과목 - 소프트웨어 설계.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/정보처리기사/정보처리기사 필기/🥈 필기 2과목 - 소프트웨어 개발.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사 필기/🥈 필기 3과목 - 데이터베이스 구축.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사 필기/🥈 필기 4과목 - 프로그래밍 언어 활용.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사 필기/🥈 필기 5과목 - 정보시스템 구축관리.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/커리큘럼/🆕 Dev 커리큘럼.md":"study/커리큘럼/🆕-dev-커리큘럼.html","study/Coding Test/👽 Algorithm.md":"study/coding-test/👽-algorithm.html","study/Coding Test/🤠 Coding Test 풀이 모음.md":"study/coding-test/🤠-coding-test-풀이-모음.html","study/CS/☕ JAVA , OOP.md":"study/cs/☕-java-,-oop.html","study/CS/🌋 OSIV와 영속성 컨텍스트.md":"study/cs/🌋-osiv와-영속성-컨텍스트.html","study/CS/🌩 Cloud-Native Architecture 분석.md":"study/cs/🌩-cloud-native-architecture-분석.html","study/CS/🍃 Spring.md":"study/cs/🍃-spring.html","study/CS/🍊 Spring의 의존성 주입(DI).md":"study/cs/🍊-spring의-의존성-주입(di).html","study/CS/🍎 Redis로 Key관리하기.md":"study/cs/🍎-redis로-key관리하기.html","study/CS/🎩 DevOps.md":"study/cs/🎩-devops.html","study/CS/🐞 etc.md":"study/cs/🐞-etc.html","study/CS/🐡 Spring Security와 Filter.md":"study/cs/🐡-spring-security와-filter.html","study/CS/🐰 Java의 String과 SpringBuffer.md":"study/cs/🐰-java의-string과-springbuffer.html","study/CS/🐹 MSA(Microservices Architecture).md":"study/cs/🐹-msa(microservices-architecture).html","study/CS/📔 DataBase.md":"study/cs/📔-database.html","study/CS/📭 Server.md":"study/cs/📭-server.html","study/CS/🤲분산 환경에서의 Cache 선택하기.md":"study/cs/🤲분산-환경에서의-cache-선택하기.html","study/CS/🪕 JPA 관련 용어 정리.md":"study/cs/🪕-jpa-관련-용어-정리.html","study/CS/🛬 JDK와 JRE, JVM.md":"study/cs/🛬-jdk와-jre,-jvm.html","study/Dev Seminar/🍂 JPA, Mybatis , Dead Lock이슈.md":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html","study/Dev Seminar/📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가.md":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/Dev Seminar/🔹 TDD에 대하여.md":"study/dev-seminar/🔹-tdd에-대하여.html","study/Dev Seminar/🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성.md":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","study/📕 공부.md":"study/📕-공부.html","Tools/aws/🌥 aws(EC2)셋팅부터 배포까지.md":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","Tools/aws/🍊 aws EC2란.md":"tools/aws/🍊-aws-ec2란.html","Tools/aws/🍌 Elastic IP(탄력적 IP)란.md":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html","Tools/docker/🐋 docker 란.md":"tools/docker/🐋-docker-란.html","Tools/docker/📘 SpringBoot & Docker + Reids 연동.md":"tools/docker/📘-springboot-&-docker-+-reids-연동.html","Tools/Jenkins/👔 Jenkins란.md":"tools/jenkins/👔-jenkins란.html","Tools/Kubernetes/🚢Kubernetes(k8s)란.md":"tools/kubernetes/🚢kubernetes(k8s)란.html","Tools/🎵 Obsidian.md":"tools/🎵-obsidian.html","Tools/🪓 도구.md":"tools/🪓-도구.html","🏠 taesung's Blog.md":"🏠-taesung's-blog.html","사진 및 문서/prof2.jpg":"사진-및-문서/prof2.jpg","사진 및 문서/Pasted image 20250328120415.png":"사진-및-문서/pasted-image-20250328120415.png","사진 및 문서/do-messenger_screenshot_2025-04-29_15_37_33.png":"사진-및-문서/do-messenger_screenshot_2025-04-29_15_37_33.png","사진 및 문서/Pasted image 20250421164348.png":"사진-및-문서/pasted-image-20250421164348.png","사진 및 문서/Pasted image 20250221114743.png":"사진-및-문서/pasted-image-20250221114743.png","사진 및 문서/Pasted image 20250221114306.png":"사진-및-문서/pasted-image-20250221114306.png","사진 및 문서/Pasted image 20250221114324.png":"사진-및-문서/pasted-image-20250221114324.png","사진 및 문서/Pasted image 20250221114327.png":"사진-및-문서/pasted-image-20250221114327.png","사진 및 문서/Pasted image 20250221114334.png":"사진-및-문서/pasted-image-20250221114334.png","사진 및 문서/Pasted image 20250221114339.png":"사진-및-문서/pasted-image-20250221114339.png","사진 및 문서/Pasted image 20250221114345.png":"사진-및-문서/pasted-image-20250221114345.png","사진 및 문서/Pasted image 20250221114353.png":"사진-및-문서/pasted-image-20250221114353.png","사진 및 문서/Pasted image 20250221114400.png":"사진-및-문서/pasted-image-20250221114400.png","사진 및 문서/Pasted image 20250221114406.png":"사진-및-문서/pasted-image-20250221114406.png","사진 및 문서/Pasted image 20250221114411.png":"사진-및-문서/pasted-image-20250221114411.png","사진 및 문서/Pasted image 20250221114423.png":"사진-및-문서/pasted-image-20250221114423.png","사진 및 문서/Pasted image 20250221114428.png":"사진-및-문서/pasted-image-20250221114428.png","사진 및 문서/Pasted image 20250221114434.png":"사진-및-문서/pasted-image-20250221114434.png","사진 및 문서/Pasted image 20250221114439.png":"사진-및-문서/pasted-image-20250221114439.png","사진 및 문서/Pasted image 20250221114443.png":"사진-및-문서/pasted-image-20250221114443.png","사진 및 문서/Pasted image 20250221114501.png":"사진-및-문서/pasted-image-20250221114501.png","사진 및 문서/Pasted image 20250221114448.png":"사진-및-문서/pasted-image-20250221114448.png","사진 및 문서/Pasted image 20250221114522.png":"사진-및-문서/pasted-image-20250221114522.png","사진 및 문서/Pasted image 20250221114527.png":"사진-및-문서/pasted-image-20250221114527.png","사진 및 문서/Pasted image 20250221114531.png":"사진-및-문서/pasted-image-20250221114531.png","사진 및 문서/Pasted image 20250221114535.png":"사진-및-문서/pasted-image-20250221114535.png","사진 및 문서/Pasted image 20250221114539.png":"사진-및-문서/pasted-image-20250221114539.png","사진 및 문서/Pasted image 20250221114543.png":"사진-및-문서/pasted-image-20250221114543.png","사진 및 문서/Pasted image 20250221114600.png":"사진-및-문서/pasted-image-20250221114600.png","사진 및 문서/Pasted image 20250221114605.png":"사진-및-문서/pasted-image-20250221114605.png","사진 및 문서/Pasted image 20250221114610.png":"사진-및-문서/pasted-image-20250221114610.png","사진 및 문서/Pasted image 20250221114616.png":"사진-및-문서/pasted-image-20250221114616.png","사진 및 문서/Pasted image 20250221114621.png":"사진-및-문서/pasted-image-20250221114621.png","사진 및 문서/Pasted image 20250221114628.png":"사진-및-문서/pasted-image-20250221114628.png","사진 및 문서/Pasted image 20250221114633.png":"사진-및-문서/pasted-image-20250221114633.png","사진 및 문서/Pasted image 20250221114638.png":"사진-및-문서/pasted-image-20250221114638.png","사진 및 문서/Pasted image 20250221114644.png":"사진-및-문서/pasted-image-20250221114644.png","사진 및 문서/Pasted image 20250221114648.png":"사진-및-문서/pasted-image-20250221114648.png","사진 및 문서/do-messenger_screenshot_2025-02-10_15_04_45.png":"사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png","사진 및 문서/do-messenger_screenshot_2025-02-10_17_10_58.png":"사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png","사진 및 문서/do-messenger_screenshot_2025-02-11_13_47_16.png":"사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png","사진 및 문서/do-messenger_screenshot_2025-02-11_15_32_34.png":"사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png","사진 및 문서/do-messenger_screenshot_2025-02-11_16_31_10.png":"사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png","사진 및 문서/do-messenger_screenshot_2025-02-12_14_04_58.png":"사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png","사진 및 문서/스크린샷 2025-04-14 오전 12.06.09.png":"사진-및-문서/스크린샷-2025-04-14-오전-12.06.09.png","사진 및 문서/Pasted image 20250415182923.png":"사진-및-문서/pasted-image-20250415182923.png","사진 및 문서/Pasted image 20250416171828.png":"사진-및-문서/pasted-image-20250416171828.png","사진 및 문서/Pasted image 20250416172118.png":"사진-및-문서/pasted-image-20250416172118.png","사진 및 문서/Pasted image 20250416181833.png":"사진-및-문서/pasted-image-20250416181833.png","사진 및 문서/Pasted image 20250416182123.png":"사진-및-문서/pasted-image-20250416182123.png","사진 및 문서/Pasted image 20250225161448.png":"사진-및-문서/pasted-image-20250225161448.png","사진 및 문서/Pasted image 20250415181225.png":"사진-및-문서/pasted-image-20250415181225.png","사진 및 문서/Pasted image 20250417121150.png":"사진-및-문서/pasted-image-20250417121150.png","사진 및 문서/Pasted image 20250312144444.png":"사진-및-문서/pasted-image-20250312144444.png","사진 및 문서/Pasted image 20250312173438.png":"사진-및-문서/pasted-image-20250312173438.png","사진 및 문서/Pasted image 20250312173740.png":"사진-및-문서/pasted-image-20250312173740.png","사진 및 문서/Pasted image 20250325102427.png":"사진-및-문서/pasted-image-20250325102427.png","사진 및 문서/Pasted image 20250325165845.png":"사진-및-문서/pasted-image-20250325165845.png","사진 및 문서/Pasted image 20250325172818.png":"사진-및-문서/pasted-image-20250325172818.png","사진 및 문서/Pasted image 20241206140739.png":"사진-및-문서/pasted-image-20241206140739.png","사진 및 문서/Pasted image 20241206140822.png":"사진-및-문서/pasted-image-20241206140822.png","사진 및 문서/Pasted image 20250110144021.png":"사진-및-문서/pasted-image-20250110144021.png","사진 및 문서/Pasted image 20241105110415.png":"사진-및-문서/pasted-image-20241105110415.png","사진 및 문서/Pasted image 20250227140437.png":"사진-및-문서/pasted-image-20250227140437.png","사진 및 문서/Pasted image 20250227140620.png":"사진-및-문서/pasted-image-20250227140620.png","사진 및 문서/Pasted image 20241105110637.png":"사진-및-문서/pasted-image-20241105110637.png","사진 및 문서/Pasted image 20241105110713.png":"사진-및-문서/pasted-image-20241105110713.png","사진 및 문서/Pasted image 20241107115602.png":"사진-및-문서/pasted-image-20241107115602.png","사진 및 문서/Pasted image 20241107115830.png":"사진-및-문서/pasted-image-20241107115830.png","사진 및 문서/Pasted image 20241107121044.png":"사진-및-문서/pasted-image-20241107121044.png","사진 및 문서/Pasted image 20241107121202.png":"사진-및-문서/pasted-image-20241107121202.png","사진 및 문서/Pasted image 20241107121939.png":"사진-및-문서/pasted-image-20241107121939.png","사진 및 문서/Pasted image 20250227114750.png":"사진-및-문서/pasted-image-20250227114750.png","사진 및 문서/Pasted image 20250227114826.png":"사진-및-문서/pasted-image-20250227114826.png","사진 및 문서/Pasted image 20250227115004.png":"사진-및-문서/pasted-image-20250227115004.png","사진 및 문서/Pasted image 20250227115015.png":"사진-및-문서/pasted-image-20250227115015.png","사진 및 문서/Pasted image 20250227115158.png":"사진-및-문서/pasted-image-20250227115158.png","사진 및 문서/Pasted image 20250227115148.png":"사진-및-문서/pasted-image-20250227115148.png","사진 및 문서/Pasted image 20250227121009.png":"사진-및-문서/pasted-image-20250227121009.png","사진 및 문서/Pasted image 20250227121046.png":"사진-및-문서/pasted-image-20250227121046.png","사진 및 문서/Pasted image 20250227121942.png":"사진-및-문서/pasted-image-20250227121942.png","사진 및 문서/Pasted image 20250227122010.png":"사진-및-문서/pasted-image-20250227122010.png","사진 및 문서/Pasted image 20250227122736.png":"사진-및-문서/pasted-image-20250227122736.png","사진 및 문서/output (14).png":"사진-및-문서/output-(14).png","사진 및 문서/Pasted image 20250304121056.png":"사진-및-문서/pasted-image-20250304121056.png","사진 및 문서/Pasted image 20250304121009.png":"사진-및-문서/pasted-image-20250304121009.png","사진 및 문서/Pasted image 20250304121455.png":"사진-및-문서/pasted-image-20250304121455.png","사진 및 문서/Pasted image 20250304121338.png":"사진-및-문서/pasted-image-20250304121338.png","사진 및 문서/Pasted image 20241213102128.png":"사진-및-문서/pasted-image-20241213102128.png","사진 및 문서/Pasted image 20250304170347.png":"사진-및-문서/pasted-image-20250304170347.png","사진 및 문서/Pasted image 20250304170412.png":"사진-및-문서/pasted-image-20250304170412.png","사진 및 문서/Pasted image 20250304171240.png":"사진-및-문서/pasted-image-20250304171240.png","사진 및 문서/Pasted image 20241213102229.png":"사진-및-문서/pasted-image-20241213102229.png","사진 및 문서/Pasted image 20241213143101.png":"사진-및-문서/pasted-image-20241213143101.png","사진 및 문서/Pasted image 20250314120439.png":"사진-및-문서/pasted-image-20250314120439.png","사진 및 문서/Pasted image 20241213143217.png":"사진-및-문서/pasted-image-20241213143217.png","사진 및 문서/Pasted image 20241213103503.png":"사진-및-문서/pasted-image-20241213103503.png","사진 및 문서/Pasted image 20250317142134.png":"사진-및-문서/pasted-image-20250317142134.png","사진 및 문서/Pasted image 20250317114543.png":"사진-및-문서/pasted-image-20250317114543.png","사진 및 문서/Pasted image 20250317114814.png":"사진-및-문서/pasted-image-20250317114814.png","사진 및 문서/Pasted image 20250317114932.png":"사진-및-문서/pasted-image-20250317114932.png","사진 및 문서/Pasted image 20250317115640.png":"사진-및-문서/pasted-image-20250317115640.png","사진 및 문서/Pasted image 20250317120025.png":"사진-및-문서/pasted-image-20250317120025.png","사진 및 문서/Pasted image 20250317120814.png":"사진-및-문서/pasted-image-20250317120814.png","사진 및 문서/Pasted image 20250317121138.png":"사진-및-문서/pasted-image-20250317121138.png","사진 및 문서/Pasted image 20250317122417.png":"사진-및-문서/pasted-image-20250317122417.png","사진 및 문서/Pasted image 20250317134652.png":"사진-및-문서/pasted-image-20250317134652.png","사진 및 문서/Pasted image 20250317135331.png":"사진-및-문서/pasted-image-20250317135331.png","사진 및 문서/Pasted image 20250317135544.png":"사진-및-문서/pasted-image-20250317135544.png","사진 및 문서/Pasted image 20250313155205.png":"사진-및-문서/pasted-image-20250313155205.png","사진 및 문서/Pasted image 20250313155459.png":"사진-및-문서/pasted-image-20250313155459.png","사진 및 문서/Pasted image 20250313155555.png":"사진-및-문서/pasted-image-20250313155555.png","사진 및 문서/Pasted image 20250313155756.png":"사진-및-문서/pasted-image-20250313155756.png","사진 및 문서/Pasted image 20250313162400.png":"사진-및-문서/pasted-image-20250313162400.png","사진 및 문서/Pasted image 20250313165833.png":"사진-및-문서/pasted-image-20250313165833.png","사진 및 문서/Pasted image 20250313111121.png":"사진-및-문서/pasted-image-20250313111121.png","사진 및 문서/Pasted image 20250313111614.png":"사진-및-문서/pasted-image-20250313111614.png","사진 및 문서/Pasted image 20250313111817.png":"사진-및-문서/pasted-image-20250313111817.png","사진 및 문서/Pasted image 20250313114207.png":"사진-및-문서/pasted-image-20250313114207.png","사진 및 문서/Pasted image 20250313114322.png":"사진-및-문서/pasted-image-20250313114322.png","사진 및 문서/Pasted image 20250313114332.png":"사진-및-문서/pasted-image-20250313114332.png","사진 및 문서/Pasted image 20250313151739.png":"사진-및-문서/pasted-image-20250313151739.png","사진 및 문서/Pasted image 20250313152221.png":"사진-및-문서/pasted-image-20250313152221.png","사진 및 문서/Pasted image 20250313152958.png":"사진-및-문서/pasted-image-20250313152958.png","사진 및 문서/Pasted image 20250313153455.png":"사진-및-문서/pasted-image-20250313153455.png","사진 및 문서/Pasted image 20250313153605.png":"사진-및-문서/pasted-image-20250313153605.png","사진 및 문서/Pasted image 20250313153630.png":"사진-및-문서/pasted-image-20250313153630.png","사진 및 문서/Pasted image 20250313153740.png":"사진-및-문서/pasted-image-20250313153740.png","사진 및 문서/Pasted image 20250314122906.png":"사진-및-문서/pasted-image-20250314122906.png","사진 및 문서/Pasted image 20250314152143.png":"사진-및-문서/pasted-image-20250314152143.png","사진 및 문서/회사 은행 서비스1111.png":"사진-및-문서/회사-은행-서비스1111.png","사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 1.png":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 잘못된 차액발생 인식 타임라인.png":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","사진 및 문서/output (1).png":"사진-및-문서/output-(1).png","사진 및 문서/Pasted image 20241217150339.png":"사진-및-문서/pasted-image-20241217150339.png","사진 및 문서/Pasted image 20241219145746.png":"사진-및-문서/pasted-image-20241219145746.png","사진 및 문서/output (9) 1.png":"사진-및-문서/output-(9)-1.png","사진 및 문서/output (10).png":"사진-및-문서/output-(10).png","사진 및 문서/do-messenger_screenshot_2024-12-23_14_40_21.png":"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","사진 및 문서/Pasted image 20241224093159.png":"사진-및-문서/pasted-image-20241224093159.png","사진 및 문서/Pasted image 20241224093207.png":"사진-및-문서/pasted-image-20241224093207.png","사진 및 문서/Pasted image 20241224093225.png":"사진-및-문서/pasted-image-20241224093225.png","사진 및 문서/Pasted image 20250305173344.png":"사진-및-문서/pasted-image-20250305173344.png","사진 및 문서/Pasted image 20250313103346.png":"사진-및-문서/pasted-image-20250313103346.png","사진 및 문서/do-messenger_screenshot_2025-03-13_10_41_16.png":"사진-및-문서/do-messenger_screenshot_2025-03-13_10_41_16.png","사진 및 문서/Pasted image 20250313104418.png":"사진-및-문서/pasted-image-20250313104418.png","사진 및 문서/Pasted image 20250313104505.png":"사진-및-문서/pasted-image-20250313104505.png","사진 및 문서/Pasted image 20250313105635.png":"사진-및-문서/pasted-image-20250313105635.png","사진 및 문서/Pasted image 20250313105543.png":"사진-및-문서/pasted-image-20250313105543.png","사진 및 문서/Pasted image 20250110122312.png":"사진-및-문서/pasted-image-20250110122312.png","사진 및 문서/Pasted image 20250110101642.png":"사진-및-문서/pasted-image-20250110101642.png","사진 및 문서/Pasted image 20250110103409.png":"사진-및-문서/pasted-image-20250110103409.png","사진 및 문서/Pasted image 20250122111223.png":"사진-및-문서/pasted-image-20250122111223.png","사진 및 문서/Pasted image 20250307172522.png":"사진-및-문서/pasted-image-20250307172522.png","사진 및 문서/Pasted image 20250218151731.png":"사진-및-문서/pasted-image-20250218151731.png","사진 및 문서/Pasted image 20250218151806.png":"사진-및-문서/pasted-image-20250218151806.png","사진 및 문서/Pasted image 20250218152044.png":"사진-및-문서/pasted-image-20250218152044.png","사진 및 문서/Pasted image 20250218152103.png":"사진-및-문서/pasted-image-20250218152103.png","사진 및 문서/Pasted image 20250218153131.png":"사진-및-문서/pasted-image-20250218153131.png","사진 및 문서/Pasted image 20250218153319.png":"사진-및-문서/pasted-image-20250218153319.png","사진 및 문서/Pasted image 20250218153445.png":"사진-및-문서/pasted-image-20250218153445.png","사진 및 문서/Pasted image 20250218153543.png":"사진-및-문서/pasted-image-20250218153543.png","사진 및 문서/Pasted image 20250218153553.png":"사진-및-문서/pasted-image-20250218153553.png","사진 및 문서/Pasted image 20250218151330.png":"사진-및-문서/pasted-image-20250218151330.png","사진 및 문서/Pasted image 20250218153814.png":"사진-및-문서/pasted-image-20250218153814.png","사진 및 문서/Pasted image 20250218153858.png":"사진-및-문서/pasted-image-20250218153858.png","사진 및 문서/Pasted image 20250218154352.png":"사진-및-문서/pasted-image-20250218154352.png","사진 및 문서/Pasted image 20250218154433.png":"사진-및-문서/pasted-image-20250218154433.png","사진 및 문서/Pasted image 20250218154615.png":"사진-및-문서/pasted-image-20250218154615.png","사진 및 문서/Pasted image 20250218154633.png":"사진-및-문서/pasted-image-20250218154633.png","사진 및 문서/Pasted image 20250218154647.png":"사진-및-문서/pasted-image-20250218154647.png","사진 및 문서/Pasted image 20250218155524.png":"사진-및-문서/pasted-image-20250218155524.png","사진 및 문서/Pasted image 20250218160328.png":"사진-및-문서/pasted-image-20250218160328.png","사진 및 문서/Pasted image 20250218160359.png":"사진-및-문서/pasted-image-20250218160359.png","사진 및 문서/Pasted image 20250218160428.png":"사진-및-문서/pasted-image-20250218160428.png","사진 및 문서/Pasted image 20250218160532.png":"사진-및-문서/pasted-image-20250218160532.png","사진 및 문서/Pasted image 20250218160956.png":"사진-및-문서/pasted-image-20250218160956.png","사진 및 문서/Pasted image 20250218161424.png":"사진-및-문서/pasted-image-20250218161424.png","사진 및 문서/Pasted image 20250218161515.png":"사진-및-문서/pasted-image-20250218161515.png","사진 및 문서/Pasted image 20250218161728.png":"사진-및-문서/pasted-image-20250218161728.png","사진 및 문서/Pasted image 20250218161824.png":"사진-및-문서/pasted-image-20250218161824.png","사진 및 문서/Pasted image 20250218161847.png":"사진-및-문서/pasted-image-20250218161847.png","사진 및 문서/Pasted image 20250218161937.png":"사진-및-문서/pasted-image-20250218161937.png","사진 및 문서/Pasted image 20250218162355.png":"사진-및-문서/pasted-image-20250218162355.png","사진 및 문서/do-messenger_screenshot_2025-02-19_16_19_04.png":"사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png","사진 및 문서/Pasted image 20250219154331.png":"사진-및-문서/pasted-image-20250219154331.png","사진 및 문서/Pasted image 20250219154315.png":"사진-및-문서/pasted-image-20250219154315.png","사진 및 문서/Pasted image 20241224144309.png":"사진-및-문서/pasted-image-20241224144309.png","사진 및 문서/Pasted image 20241226111559.png":"사진-및-문서/pasted-image-20241226111559.png","사진 및 문서/Pasted image 20250102160223.png":"사진-및-문서/pasted-image-20250102160223.png","사진 및 문서/Pasted image 20241226152219.png":"사진-및-문서/pasted-image-20241226152219.png","사진 및 문서/Pasted image 20241226171158.png":"사진-및-문서/pasted-image-20241226171158.png","사진 및 문서/Pasted image 20241230135801.png":"사진-및-문서/pasted-image-20241230135801.png","사진 및 문서/Pasted image 20250102160213.png":"사진-및-문서/pasted-image-20250102160213.png","사진 및 문서/Pasted image 20250226145129.png":"사진-및-문서/pasted-image-20250226145129.png","사진 및 문서/output (9).png":"사진-및-문서/output-(9).png","사진 및 문서/Pasted image 20241206113120.png":"사진-및-문서/pasted-image-20241206113120.png","사진 및 문서/Pasted image 20240610171904.png":"사진-및-문서/pasted-image-20240610171904.png","사진 및 문서/Pasted image 20240531103441.png":"사진-및-문서/pasted-image-20240531103441.png","사진 및 문서/Pasted image 20240531103549.png":"사진-및-문서/pasted-image-20240531103549.png","사진 및 문서/Pasted image 20240531105228.png":"사진-및-문서/pasted-image-20240531105228.png","사진 및 문서/Pasted image 20240531105241.png":"사진-및-문서/pasted-image-20240531105241.png","사진 및 문서/Pasted image 20240531104351.png":"사진-및-문서/pasted-image-20240531104351.png","사진 및 문서/Pasted image 20240531104418.png":"사진-및-문서/pasted-image-20240531104418.png","사진 및 문서/Pasted image 20240531104751.png":"사진-및-문서/pasted-image-20240531104751.png","사진 및 문서/Pasted image 20240531104803.png":"사진-및-문서/pasted-image-20240531104803.png","사진 및 문서/Pasted image 20240828104032.png":"사진-및-문서/pasted-image-20240828104032.png","사진 및 문서/Pasted image 20240828104728.png":"사진-및-문서/pasted-image-20240828104728.png","사진 및 문서/Pasted image 20250228150552.png":"사진-및-문서/pasted-image-20250228150552.png","사진 및 문서/Pasted image 20250102181842.png":"사진-및-문서/pasted-image-20250102181842.png","사진 및 문서/Pasted image 20250221112429.png":"사진-및-문서/pasted-image-20250221112429.png","사진 및 문서/Pasted image 20250221114856.png":"사진-및-문서/pasted-image-20250221114856.png","사진 및 문서/Pasted image 20250221114901.png":"사진-및-문서/pasted-image-20250221114901.png","사진 및 문서/Pasted image 20250221114932.png":"사진-및-문서/pasted-image-20250221114932.png","사진 및 문서/Pasted image 20250221114945.png":"사진-및-문서/pasted-image-20250221114945.png","사진 및 문서/Pasted image 20250221114951.png":"사진-및-문서/pasted-image-20250221114951.png","사진 및 문서/Pasted image 20250221114959.png":"사진-및-문서/pasted-image-20250221114959.png","사진 및 문서/Pasted image 20250221115004.png":"사진-및-문서/pasted-image-20250221115004.png","사진 및 문서/Pasted image 20250221115010.png":"사진-및-문서/pasted-image-20250221115010.png","사진 및 문서/Pasted image 20250221115019.png":"사진-및-문서/pasted-image-20250221115019.png","사진 및 문서/Pasted image 20250221115024.png":"사진-및-문서/pasted-image-20250221115024.png","사진 및 문서/Pasted image 20250221115030.png":"사진-및-문서/pasted-image-20250221115030.png","사진 및 문서/Pasted image 20250221115035.png":"사진-및-문서/pasted-image-20250221115035.png","사진 및 문서/Pasted image 20250221115040.png":"사진-및-문서/pasted-image-20250221115040.png","사진 및 문서/Pasted image 20250221115046.png":"사진-및-문서/pasted-image-20250221115046.png","사진 및 문서/Pasted image 20250221115052.png":"사진-및-문서/pasted-image-20250221115052.png","사진 및 문서/Pasted image 20250221115058.png":"사진-및-문서/pasted-image-20250221115058.png","사진 및 문서/Pasted image 20250221115102.png":"사진-및-문서/pasted-image-20250221115102.png","사진 및 문서/Pasted image 20250221115117.png":"사진-및-문서/pasted-image-20250221115117.png","사진 및 문서/Pasted image 20250221115122.png":"사진-및-문서/pasted-image-20250221115122.png","사진 및 문서/Pasted image 20250221115129.png":"사진-및-문서/pasted-image-20250221115129.png","사진 및 문서/Pasted image 20250221115132.png":"사진-및-문서/pasted-image-20250221115132.png","사진 및 문서/Pasted image 20250221115136.png":"사진-및-문서/pasted-image-20250221115136.png","사진 및 문서/Pasted image 20250221115140.png":"사진-및-문서/pasted-image-20250221115140.png","사진 및 문서/Pasted image 20250221115146.png":"사진-및-문서/pasted-image-20250221115146.png","사진 및 문서/Pasted image 20250221115151.png":"사진-및-문서/pasted-image-20250221115151.png","사진 및 문서/Pasted image 20250221115157.png":"사진-및-문서/pasted-image-20250221115157.png","사진 및 문서/Pasted image 20250221115201.png":"사진-및-문서/pasted-image-20250221115201.png","사진 및 문서/Pasted image 20250221115214.png":"사진-및-문서/pasted-image-20250221115214.png","사진 및 문서/Pasted image 20250221115220.png":"사진-및-문서/pasted-image-20250221115220.png","사진 및 문서/Pasted image 20250221115224.png":"사진-및-문서/pasted-image-20250221115224.png","사진 및 문서/Pasted image 20250221115228.png":"사진-및-문서/pasted-image-20250221115228.png","사진 및 문서/Pasted image 20250221115232.png":"사진-및-문서/pasted-image-20250221115232.png","사진 및 문서/Pasted image 20250221114152.png":"사진-및-문서/pasted-image-20250221114152.png","사진 및 문서/Pasted image 20250221114208.png":"사진-및-문서/pasted-image-20250221114208.png","사진 및 문서/Pasted image 20250221114220.png":"사진-및-문서/pasted-image-20250221114220.png","사진 및 문서/Pasted image 20250218145702.png":"사진-및-문서/pasted-image-20250218145702.png","사진 및 문서/Pasted image 20250218145823.png":"사진-및-문서/pasted-image-20250218145823.png","사진 및 문서/Pasted image 20241220113308.png":"사진-및-문서/pasted-image-20241220113308.png","사진 및 문서/Pasted image 20241220113315.png":"사진-및-문서/pasted-image-20241220113315.png","사진 및 문서/Pasted image 20240531162124.png":"사진-및-문서/pasted-image-20240531162124.png","사진 및 문서/Pasted image 20240722180706.png":"사진-및-문서/pasted-image-20240722180706.png","사진 및 문서/Pasted image 20240611144129.png":"사진-및-문서/pasted-image-20240611144129.png","사진 및 문서/Pasted image 20240605160336.png":"사진-및-문서/pasted-image-20240605160336.png","사진 및 문서/Pasted image 20240723134224.png":"사진-및-문서/pasted-image-20240723134224.png","사진 및 문서/Pasted image 20240723134333.png":"사진-및-문서/pasted-image-20240723134333.png","사진 및 문서/Pasted image 20240603173517.png":"사진-및-문서/pasted-image-20240603173517.png","사진 및 문서/Pasted image 20240603180042.png":"사진-및-문서/pasted-image-20240603180042.png","사진 및 문서/Pasted image 20240604102140.png":"사진-및-문서/pasted-image-20240604102140.png","사진 및 문서/Pasted image 20240604144026.png":"사진-및-문서/pasted-image-20240604144026.png","custom-head-content.html":"lib/html/custom-head-content.html","":"lib/search-index.json","project/MeloMeter Project/✈MM_클라우드 마이그레이션.md":"project/melometer-project/✈mm_클라우드-마이그레이션.html","사진 및 문서/do-messenger_screenshot_2025-05-02_14_28_33.png":"사진-및-문서/do-messenger_screenshot_2025-05-02_14_28_33.png","project/🚞 Java 대용량 Excel 리펙토링.md":"project/🚞-java-대용량-excel-리펙토링.html","사진 및 문서/Pasted image 20250512180307.png":"사진-및-문서/pasted-image-20250512180307.png","사진 및 문서/Pasted image 20250513101628.png":"사진-및-문서/pasted-image-20250513101628.png","사진 및 문서/Pasted image 20250513101743.png":"사진-및-문서/pasted-image-20250513101743.png","Issue_TroubleShooting/🍧 JPA의 SAVE동작원리와 데이터 로그.md":"issue_troubleshooting/🍧-jpa의-save동작원리와-데이터-로그.html","사진 및 문서/Pasted image 20250516163401.png":"사진-및-문서/pasted-image-20250516163401.png","사진 및 문서/Pasted image 20250516163522.png":"사진-및-문서/pasted-image-20250516163522.png","사진 및 문서/Pasted image 20250516154726.png":"사진-및-문서/pasted-image-20250516154726.png","사진 및 문서/Pasted image 20250516164727.png":"사진-및-문서/pasted-image-20250516164727.png","사진 및 문서/Pasted image 20250516164550.png":"사진-및-문서/pasted-image-20250516164550.png","사진 및 문서/Pasted image 20250516164537.png":"사진-및-문서/pasted-image-20250516164537.png","사진 및 문서/Pasted image 20250516165030.png":"사진-및-문서/pasted-image-20250516165030.png","사진 및 문서/Pasted image 20250516165307.png":"사진-및-문서/pasted-image-20250516165307.png","사진 및 문서/Pasted image 20250516165250.png":"사진-및-문서/pasted-image-20250516165250.png","사진 및 문서/Pasted image 20250516165344.png":"사진-및-문서/pasted-image-20250516165344.png","사진 및 문서/Pasted image 20250516165523.png":"사진-및-문서/pasted-image-20250516165523.png","사진 및 문서/Pasted image 20250516165617.png":"사진-및-문서/pasted-image-20250516165617.png","사진 및 문서/Pasted image 20250516165627.png":"사진-및-문서/pasted-image-20250516165627.png","사진 및 문서/스크린샷 2025-05-15 오후 10.33.42.png":"사진-및-문서/스크린샷-2025-05-15-오후-10.33.42.png","사진 및 문서/스크린샷 2025-05-15 오후 10.38.28.png":"사진-및-문서/스크린샷-2025-05-15-오후-10.38.28.png","사진 및 문서/스크린샷 2025-05-15 오후 10.41.15.png":"사진-및-문서/스크린샷-2025-05-15-오후-10.41.15.png","Issue_TroubleShooting/🍧 JPA의 SAVE동작원리와 데이터 로그 이슈.md":"issue_troubleshooting/🍧-jpa의-save동작원리와-데이터-로그-이슈.html","짧은 키워드/영속성 컨텍스트.md":"짧은-키워드/영속성-컨텍스트.html","Issue_TroubleShooting/🍧 JPA의 영속성 상태와 데이터 Log 이슈.md":"issue_troubleshooting/🍧-jpa의-영속성-상태와-데이터-log-이슈.html","study/CS/🌋 OSIV란 무엇인가.md":"study/cs/🌋-osiv란-무엇인가.html","사진 및 문서/Pasted image 20250519144842.png":"사진-및-문서/pasted-image-20250519144842.png","사진 및 문서/Pasted image 20250520142253.png":"사진-및-문서/pasted-image-20250520142253.png","짧은 키워드/프록시.md":"짧은-키워드/프록시.html","짧은 키워드/@ 어노테이션이란 무엇인인가.md":"짧은-키워드/@-어노테이션이란-무엇인인가.html","짧은 키워드/@Component.md":"짧은-키워드/@component.html","짧은 키워드/객체지향설계 5원칙 S.O.L.I.D.md":"짧은-키워드/객체지향설계-5원칙-s.o.l.i.d.html","짧은 키워드/데이터 검증 (Validation).md":"짧은-키워드/데이터-검증-(validation).html","짧은 키워드/데코레이션 패턴 vs 프록시 패턴.md":"짧은-키워드/데코레이션-패턴-vs-프록시-패턴.html","짧은 키워드/많이쓰이는 DB용어.md":"짧은-키워드/많이쓰이는-db용어.html","짧은 키워드/빌더패턴을 왜쓰는가.md":"짧은-키워드/빌더패턴을-왜쓰는가.html","짧은 키워드/상속과 합성.md":"짧은-키워드/상속과-합성.html","짧은 키워드/엘라스틱서치 인덱스와 샤드 분할.md":"짧은-키워드/엘라스틱서치-인덱스와-샤드-분할.html","짧은 키워드/예외처리(Exception).md":"짧은-키워드/예외처리(exception).html","짧은 키워드/오버로딩 & 오버라이딩.md":"짧은-키워드/오버로딩-&-오버라이딩.html","짧은 키워드/젠킨스의 간단한 설명.md":"짧은-키워드/젠킨스의-간단한-설명.html","짧은 키워드/컨테이너란 무엇일까.md":"짧은-키워드/컨테이너란-무엇일까.html","짧은 키워드/쿠버네티스의 매니페스트 파일이란.md":"짧은-키워드/쿠버네티스의-매니페스트-파일이란.html","짧은 키워드/현재 HF서비스의 CICD과정.md":"짧은-키워드/현재-hf서비스의-cicd과정.html","짧은 키워드/APP - SERVICE - API 통신 플로우.md":"짧은-키워드/app-service-api-통신-플로우.html","짧은 키워드/Argo CD란.md":"짧은-키워드/argo-cd란.html","짧은 키워드/Batch 용어 설명.md":"짧은-키워드/batch-용어-설명.html","짧은 키워드/Bean이란 무엇인가.md":"짧은-키워드/bean이란-무엇인가.html","짧은 키워드/CND(Content Delivery Network)란.md":"짧은-키워드/cnd(content-delivery-network)란.html","짧은 키워드/DataBase 정규화  과정.md":"짧은-키워드/database-정규화-과정.html","짧은 키워드/DB Connection이란 무엇일까.md":"짧은-키워드/db-connection이란-무엇일까.html","짧은 키워드/DB의 저장 프로시저 (SP - Stored Procedure)란.md":"짧은-키워드/db의-저장-프로시저-(sp-stored-procedure)란.html","짧은 키워드/DispatcherServlet의 역할.md":"짧은-키워드/dispatcherservlet의-역할.html","짧은 키워드/Docker에 대한 간단한 설명.md":"짧은-키워드/docker에-대한-간단한-설명.html","짧은 키워드/Dual 테이블이란.md":"짧은-키워드/dual-테이블이란.html","짧은 키워드/Entity와 DTO를 분리해야하는 이유.md":"짧은-키워드/entity와-dto를-분리해야하는-이유.html","짧은 키워드/Equals() 와 HashCode() 재정의.md":"짧은-키워드/equals()-와-hashcode()-재정의.html","짧은 키워드/Git Lab(깃랩) Git Hub(깃허브) 차이.md":"짧은-키워드/git-lab(깃랩)-git-hub(깃허브)-차이.html","짧은 키워드/GitOps란.md":"짧은-키워드/gitops란.html","짧은 키워드/Grafana Loki 란.md":"짧은-키워드/grafana-loki-란.html","짧은 키워드/HTTP Method - Mapping.md":"짧은-키워드/http-method-mapping.html","짧은 키워드/Java에서 String을 선언하는 두 가지 방법.md":"짧은-키워드/java에서-string을-선언하는-두-가지-방법.html","짧은 키워드/Java의 람다란.md":"짧은-키워드/java의-람다란.html","짧은 키워드/Java의 리플렉션이란.md":"짧은-키워드/java의-리플렉션이란.html","짧은 키워드/JPA에서 BooleanBuilder 와 BooleanExpression 이란.md":"짧은-키워드/jpa에서-booleanbuilder-와-booleanexpression-이란.html","짧은 키워드/JPA의 지연로딩.md":"짧은-키워드/jpa의-지연로딩.html","짧은 키워드/JPAQueryFactory란.md":"짧은-키워드/jpaqueryfactory란.html","짧은 키워드/JPQL과 QueryDSL 비교.md":"짧은-키워드/jpql과-querydsl-비교.html","짧은 키워드/JVM의 Stack과 Heap.md":"짧은-키워드/jvm의-stack과-heap.html","짧은 키워드/k8s(쿠버네티스)에 대한 간단한 설명.md":"짧은-키워드/k8s(쿠버네티스)에-대한-간단한-설명.html","짧은 키워드/Load Balancer란.md":"짧은-키워드/load-balancer란.html","짧은 키워드/Lock ( 데이터베이스 락 ) 이란.md":"짧은-키워드/lock-(-데이터베이스-락-)-이란.html","짧은 키워드/Lombok 사용시 주의사항.md":"짧은-키워드/lombok-사용시-주의사항.html","짧은 키워드/Maven VS Gradle.md":"짧은-키워드/maven-vs-gradle.html","짧은 키워드/Multi Thread환경에서의 Singleton.md":"짧은-키워드/multi-thread환경에서의-singleton.html","짧은 키워드/Netty란.md":"짧은-키워드/netty란.html","짧은 키워드/REST 기반의 트랜잭션.md":"짧은-키워드/rest-기반의-트랜잭션.html","짧은 키워드/Service의 순환참조를 막는 방법.md":"짧은-키워드/service의-순환참조를-막는-방법.html","짧은 키워드/Spring 어노테이션@ 간단설명모음.md":"짧은-키워드/spring-어노테이션@-간단설명모음.html","짧은 키워드/Spring AOP.md":"짧은-키워드/spring-aop.html","짧은 키워드/Spring Batch란.md":"짧은-키워드/spring-batch란.html","짧은 키워드/Spring Batch에서의 파티셔닝(Partitioning).md":"짧은-키워드/spring-batch에서의-파티셔닝(partitioning).html","짧은 키워드/Spring Integration이란.md":"짧은-키워드/spring-integration이란.html","짧은 키워드/Spring MVC의 Service와 ServiceImpl 구조.md":"짧은-키워드/spring-mvc의-service와-serviceimpl-구조.html","짧은 키워드/Spring WebFlux란.md":"짧은-키워드/spring-webflux란.html","짧은 키워드/Spring에서의 의존성 주입 방법.md":"짧은-키워드/spring에서의-의존성-주입-방법.html","짧은 키워드/Spring의 EntityManager는 무엇일까.md":"짧은-키워드/spring의-entitymanager는-무엇일까.html","짧은 키워드/Static 키워드에 대하여.md":"짧은-키워드/static-키워드에-대하여.html"},"modifiedTime":1747811155822,"siteName":"Category","exportRoot":"/","pluginVersion":"1.9.0-3b","themeName":"Things","bodyClasses":"publish css-settings-manager theme-dark show-inline-title show-ribbon is-focused","addCustomHead":true,"addFavicon":true}