{"createdTime":1739951706866,"shownInTree":["issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html","issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html","lectur/🏫-강의.html","lectur/1.-객체-지향-설계와-스프링.html","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/note-ci_cd/⛈-obsidian-aws연동.html","project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","project/💻-프로젝트.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/커리큘럼/🆕-dev-커리큘럼.html","study/coding-test/👽-algorithm.html","study/coding-test/🤠-coding-test-풀이-모음.html","study/cs/☕-java-,-oop.html","study/cs/🍃-spring.html","study/cs/🎩-devops.html","study/cs/🐞-etc.html","study/cs/📔-database.html","study/cs/📭-server.html","study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html","study/dev-seminar/🔹-tdd에-대하여.html","study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","study/dev-seminar/🪕-jpa-에-대한-고찰.html","study/📕-공부.html","tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","tools/aws/🍊-aws-ec2란.html","tools/aws/🍌-elastic-ip(탄력적-ip)란.html","tools/docker/🐋-docker.html","tools/docker/📘-springboot-&-docker-+-reids-연동.html","tools/🎵-obsidian.html","tools/🪓-도구.html","index.html"],"attachments":["사진-및-문서/pasted-image-20250110144021.png","사진-및-문서/pasted-image-20241206140739.png","사진-및-문서/pasted-image-20241206140822.png","사진-및-문서/pasted-image-20241220113308.png","사진-및-문서/pasted-image-20241220113315.png","사진-및-문서/pasted-image-20250218151731.png","사진-및-문서/pasted-image-20250218151806.png","사진-및-문서/pasted-image-20250218152044.png","사진-및-문서/pasted-image-20250218152103.png","사진-및-문서/pasted-image-20250218153131.png","사진-및-문서/pasted-image-20250218153319.png","사진-및-문서/pasted-image-20250218153445.png","사진-및-문서/pasted-image-20250218153543.png","사진-및-문서/pasted-image-20250218153553.png","사진-및-문서/pasted-image-20250218151330.png","사진-및-문서/pasted-image-20250218153814.png","사진-및-문서/pasted-image-20250218153858.png","사진-및-문서/pasted-image-20250218154352.png","사진-및-문서/pasted-image-20250218154433.png","사진-및-문서/pasted-image-20250218154615.png","사진-및-문서/pasted-image-20250218154633.png","사진-및-문서/pasted-image-20250218154647.png","사진-및-문서/pasted-image-20250218155524.png","사진-및-문서/pasted-image-20250218160328.png","사진-및-문서/pasted-image-20250218160359.png","사진-및-문서/pasted-image-20250218160428.png","사진-및-문서/pasted-image-20250218160532.png","사진-및-문서/pasted-image-20250218160956.png","사진-및-문서/pasted-image-20250218161424.png","사진-및-문서/pasted-image-20250218161515.png","사진-및-문서/pasted-image-20250218161728.png","사진-및-문서/pasted-image-20250218161824.png","사진-및-문서/pasted-image-20250218161847.png","사진-및-문서/pasted-image-20250218161937.png","사진-및-문서/pasted-image-20250218162355.png","사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png","사진-및-문서/pasted-image-20250219154331.png","사진-및-문서/pasted-image-20250219154315.png","사진-및-문서/output-(1).png","사진-및-문서/pasted-image-20241206113120.png","사진-및-문서/pasted-image-20241213102128.png","사진-및-문서/pasted-image-20241213102229.png","사진-및-문서/pasted-image-20241213143101.png","사진-및-문서/pasted-image-20241213143217.png","사진-및-문서/pasted-image-20241213103503.png","사진-및-문서/pasted-image-20241217150339.png","사진-및-문서/pasted-image-20241219145746.png","사진-및-문서/output-(9)-1.png","사진-및-문서/output-(10).png","사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","사진-및-문서/pasted-image-20241224093159.png","사진-및-문서/pasted-image-20241224093207.png","사진-및-문서/pasted-image-20241224093225.png","사진-및-문서/회사-은행-서비스1111.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","사진-및-문서/pasted-image-20241224144309.png","사진-및-문서/pasted-image-20241226111559.png","사진-및-문서/pasted-image-20241226152219.png","사진-및-문서/pasted-image-20241226171158.png","사진-및-문서/pasted-image-20241230135801.png","사진-및-문서/pasted-image-20250102160213.png","사진-및-문서/pasted-image-20250102160223.png","사진-및-문서/pasted-image-20240531162124.png","사진-및-문서/pasted-image-20240722180706.png","사진-및-문서/pasted-image-20240610171904.png","사진-및-문서/pasted-image-20240531103441.png","사진-및-문서/pasted-image-20240531103549.png","사진-및-문서/pasted-image-20240531105228.png","사진-및-문서/pasted-image-20240531105241.png","사진-및-문서/pasted-image-20240531104351.png","사진-및-문서/pasted-image-20240531104418.png","사진-및-문서/pasted-image-20240531104751.png","사진-및-문서/pasted-image-20240531104803.png","사진-및-문서/pasted-image-20240828104032.png","사진-및-문서/pasted-image-20240828104728.png","사진-및-문서/output-(9).png","사진-및-문서/pasted-image-20250102181842.png","사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png","사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png","사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png","사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png","사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png","사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png","사진-및-문서/pasted-image-20240611144129.png","사진-및-문서/pasted-image-20240605160336.png","사진-및-문서/pasted-image-20240723134224.png","사진-및-문서/pasted-image-20240723134333.png","사진-및-문서/pasted-image-20240603173517.png","사진-및-문서/pasted-image-20240603180042.png","사진-및-문서/pasted-image-20240604102140.png","사진-및-문서/pasted-image-20240604144026.png","사진-및-문서/pasted-image-20250218145702.png","사진-및-문서/pasted-image-20250218145823.png","사진-및-문서/pasted-image-20250110101642.png","사진-및-문서/pasted-image-20250110103409.png","사진-및-문서/pasted-image-20250110122312.png","사진-및-문서/pasted-image-20250122111223.png","lib/scripts/graph-wasm.wasm","lib/fonts/94f2f163d4b698242fef.otf","lib/fonts/72505e6a122c6acd5471.woff2","lib/fonts/2d5198822ab091ce4305.woff2","lib/fonts/c8ba52b05a9ef10f4758.woff2","lib/fonts/cb10ffd7684cd9836a05.woff2","lib/fonts/b5f0f109bc88052d4000.woff2","lib/fonts/cbe0ae49c52c920fd563.woff2","lib/fonts/535a6cf662596b3bd6a6.woff2","lib/fonts/70cc7ff27245e82ad414.ttf","lib/fonts/454577c22304619db035.ttf","lib/fonts/52ac8f3034507f1d9e53.ttf","lib/fonts/05b618077343fbbd92b7.ttf","lib/fonts/4bb6ac751d1c5478ff3a.woff2","lib/media/6155340132a851f6089e.svg","lib/media/2308ab1944a6bfa5c5b8.svg","lib/html/file-tree.html","lib/scripts/webpage.js","lib/scripts/graph-view.js","lib/scripts/graph-wasm.js","lib/scripts/graph-render-worker.js","lib/scripts/tinycolor.js","lib/scripts/pixi.js","lib/scripts/minisearch.js","lib/media/favicon.png","lib/scripts/graph-data.js","lib/styles/obsidian.css","lib/styles/other-plugins.css","lib/styles/theme.css","lib/styles/global-variable-styles.css","lib/styles/supported-plugins.css","lib/styles/main-styles.css","lib/metadata.json","lib/search-index.json","lib/rss.xml","사진-및-문서/pasted-image-20250220144552.png","사진-및-문서/pasted-image-20250221114306.png","사진-및-문서/pasted-image-20250221114324.png","사진-및-문서/pasted-image-20250221114327.png","사진-및-문서/pasted-image-20250221114334.png","사진-및-문서/pasted-image-20250221114339.png","사진-및-문서/pasted-image-20250221114345.png","사진-및-문서/pasted-image-20250221114353.png","사진-및-문서/pasted-image-20250221114400.png","사진-및-문서/pasted-image-20250221114406.png","사진-및-문서/pasted-image-20250221114411.png","사진-및-문서/pasted-image-20250221114423.png","사진-및-문서/pasted-image-20250221114428.png","사진-및-문서/pasted-image-20250221114434.png","사진-및-문서/pasted-image-20250221114439.png","사진-및-문서/pasted-image-20250221114443.png","사진-및-문서/pasted-image-20250221114501.png","사진-및-문서/pasted-image-20250221114448.png","사진-및-문서/pasted-image-20250221114522.png","사진-및-문서/pasted-image-20250221114527.png","사진-및-문서/pasted-image-20250221114531.png","사진-및-문서/pasted-image-20250221114535.png","사진-및-문서/pasted-image-20250221114539.png","사진-및-문서/pasted-image-20250221114543.png","사진-및-문서/pasted-image-20250221114600.png","사진-및-문서/pasted-image-20250221114605.png","사진-및-문서/pasted-image-20250221114610.png","사진-및-문서/pasted-image-20250221114616.png","사진-및-문서/pasted-image-20250221114621.png","사진-및-문서/pasted-image-20250221114628.png","사진-및-문서/pasted-image-20250221114633.png","사진-및-문서/pasted-image-20250221114638.png","사진-및-문서/pasted-image-20250221114644.png","사진-및-문서/pasted-image-20250221114648.png","사진-및-문서/pasted-image-20250221114743.png","사진-및-문서/pasted-image-20250221112429.png","사진-및-문서/pasted-image-20250221114856.png","사진-및-문서/pasted-image-20250221114901.png","사진-및-문서/pasted-image-20250221114932.png","사진-및-문서/pasted-image-20250221114945.png","사진-및-문서/pasted-image-20250221114951.png","사진-및-문서/pasted-image-20250221114959.png","사진-및-문서/pasted-image-20250221115004.png","사진-및-문서/pasted-image-20250221115010.png","사진-및-문서/pasted-image-20250221115019.png","사진-및-문서/pasted-image-20250221115024.png","사진-및-문서/pasted-image-20250221115030.png","사진-및-문서/pasted-image-20250221115035.png","사진-및-문서/pasted-image-20250221115040.png","사진-및-문서/pasted-image-20250221115046.png","사진-및-문서/pasted-image-20250221115052.png","사진-및-문서/pasted-image-20250221115058.png","사진-및-문서/pasted-image-20250221115102.png","사진-및-문서/pasted-image-20250221115117.png","사진-및-문서/pasted-image-20250221115122.png","사진-및-문서/pasted-image-20250221115129.png","사진-및-문서/pasted-image-20250221115132.png","사진-및-문서/pasted-image-20250221115136.png","사진-및-문서/pasted-image-20250221115140.png","사진-및-문서/pasted-image-20250221115146.png","사진-및-문서/pasted-image-20250221115151.png","사진-및-문서/pasted-image-20250221115157.png","사진-및-문서/pasted-image-20250221115201.png","사진-및-문서/pasted-image-20250221115214.png","사진-및-문서/pasted-image-20250221115220.png","사진-및-문서/pasted-image-20250221115224.png","사진-및-문서/pasted-image-20250221115228.png","사진-및-문서/pasted-image-20250221115232.png","사진-및-문서/pasted-image-20250221114152.png","사진-및-문서/pasted-image-20250221114208.png","사진-및-문서/pasted-image-20250221114220.png","사진-및-문서/pasted-image-20250228143143.png","사진-및-문서/pasted-image-20250228150552.png","사진-및-문서/pasted-image-20250226145129.png","사진-및-문서/pasted-image-20241105110415.png","사진-및-문서/pasted-image-20250227140437.png","사진-및-문서/pasted-image-20250227140620.png","사진-및-문서/pasted-image-20241105110637.png","사진-및-문서/pasted-image-20241105110713.png","사진-및-문서/pasted-image-20241107115602.png","사진-및-문서/pasted-image-20241107115830.png","사진-및-문서/pasted-image-20241107121044.png","사진-및-문서/pasted-image-20241107121202.png","사진-및-문서/pasted-image-20241107121939.png","사진-및-문서/pasted-image-20250227114750.png","사진-및-문서/pasted-image-20250227114826.png","사진-및-문서/pasted-image-20250227115004.png","사진-및-문서/pasted-image-20250227115015.png","사진-및-문서/pasted-image-20250227115158.png","사진-및-문서/pasted-image-20250227115148.png","사진-및-문서/pasted-image-20250227121009.png","사진-및-문서/pasted-image-20250227121046.png","사진-및-문서/pasted-image-20250227121942.png","사진-및-문서/pasted-image-20250227122010.png","사진-및-문서/pasted-image-20250227122736.png","사진-및-문서/output-(14).png","사진-및-문서/pasted-image-20250225161448.png"],"allFiles":["project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html","issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html","index.html","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/💻-프로젝트.html","study/📕-공부.html","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html","study/cs/📔-database.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","사진-및-문서/pasted-image-20250228150552.png","사진-및-문서/pasted-image-20250228143143.png","tools/aws/🍌-elastic-ip(탄력적-ip)란.html","사진-및-문서/pasted-image-20250227140620.png","사진-및-문서/pasted-image-20250227140437.png","사진-및-문서/output-(14).png","사진-및-문서/pasted-image-20250227122736.png","사진-및-문서/pasted-image-20250227122010.png","사진-및-문서/pasted-image-20250227121942.png","사진-및-문서/pasted-image-20250227121046.png","사진-및-문서/pasted-image-20250227121009.png","사진-및-문서/pasted-image-20250227115158.png","사진-및-문서/pasted-image-20250227115148.png","사진-및-문서/pasted-image-20250227115015.png","사진-및-문서/pasted-image-20250227115004.png","사진-및-문서/pasted-image-20250227114826.png","사진-및-문서/pasted-image-20250227114750.png","lectur/🏫-강의.html","project/note-ci_cd/⛈-obsidian-aws연동.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","사진-및-문서/pasted-image-20250226145129.png","사진-및-문서/pasted-image-20250225161448.png","tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","tools/aws/🍊-aws-ec2란.html","tools/🪓-도구.html","lectur/1.-객체-지향-설계와-스프링.html","study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","tools/docker/📘-springboot-&-docker-+-reids-연동.html","tools/docker/🐋-docker.html","study/coding-test/👽-algorithm.html","project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","study/coding-test/🤠-coding-test-풀이-모음.html","사진-및-문서/pasted-image-20250220144552.png","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/커리큘럼/🆕-dev-커리큘럼.html","tools/🎵-obsidian.html","study/dev-seminar/🪕-jpa-에-대한-고찰.html","study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","study/dev-seminar/🔹-tdd에-대하여.html","study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/cs/🎩-devops.html","study/cs/🍃-spring.html","study/cs/📭-server.html","study/cs/🐞-etc.html","study/cs/☕-java-,-oop.html","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","사진-및-문서/회사-은행-서비스1111.png","사진-및-문서/output-(9).png","사진-및-문서/output-(9)-1.png","사진-및-문서/output-(10).png","사진-및-문서/output-(1).png","사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","사진-및-문서/pasted-image-20250102181842.png","사진-및-문서/pasted-image-20250102160223.png","사진-및-문서/pasted-image-20250102160213.png","사진-및-문서/pasted-image-20241230135801.png","사진-및-문서/pasted-image-20241226171158.png","사진-및-문서/pasted-image-20241226111559.png","사진-및-문서/pasted-image-20241226152219.png","사진-및-문서/pasted-image-20241224144309.png","사진-및-문서/pasted-image-20241224093225.png","사진-및-문서/pasted-image-20241224093159.png","사진-및-문서/pasted-image-20241224093207.png","사진-및-문서/pasted-image-20241219145746.png","사진-및-문서/pasted-image-20241217150339.png","사진-및-문서/pasted-image-20241213143217.png","사진-및-문서/pasted-image-20241213143101.png","사진-및-문서/pasted-image-20241213103503.png","사진-및-문서/pasted-image-20241213102229.png","사진-및-문서/pasted-image-20241213102128.png","사진-및-문서/pasted-image-20241206113120.png","사진-및-문서/pasted-image-20241107121939.png","사진-및-문서/pasted-image-20241107121202.png","사진-및-문서/pasted-image-20241107121044.png","사진-및-문서/pasted-image-20241107115830.png","사진-및-문서/pasted-image-20241107115602.png","사진-및-문서/pasted-image-20241105110713.png","사진-및-문서/pasted-image-20241105110637.png","사진-및-문서/pasted-image-20241105110415.png","사진-및-문서/pasted-image-20240828104728.png","사진-및-문서/pasted-image-20240828104032.png","사진-및-문서/pasted-image-20240610171904.png","사진-및-문서/pasted-image-20240531105241.png","사진-및-문서/pasted-image-20240531105228.png","사진-및-문서/pasted-image-20240531104803.png","사진-및-문서/pasted-image-20240531104418.png","사진-및-문서/pasted-image-20240531104751.png","사진-및-문서/pasted-image-20240531104351.png","사진-및-문서/pasted-image-20240531103441.png","사진-및-문서/pasted-image-20240531103549.png","lib/scripts/graph-wasm.wasm","lib/fonts/94f2f163d4b698242fef.otf","lib/fonts/72505e6a122c6acd5471.woff2","lib/fonts/2d5198822ab091ce4305.woff2","lib/fonts/c8ba52b05a9ef10f4758.woff2","lib/fonts/cb10ffd7684cd9836a05.woff2","lib/fonts/b5f0f109bc88052d4000.woff2","lib/fonts/cbe0ae49c52c920fd563.woff2","lib/fonts/535a6cf662596b3bd6a6.woff2","lib/fonts/70cc7ff27245e82ad414.ttf","lib/fonts/454577c22304619db035.ttf","lib/fonts/52ac8f3034507f1d9e53.ttf","lib/fonts/05b618077343fbbd92b7.ttf","lib/fonts/4bb6ac751d1c5478ff3a.woff2","lib/media/6155340132a851f6089e.svg","lib/media/2308ab1944a6bfa5c5b8.svg","lib/html/file-tree.html","lib/scripts/webpage.js","lib/scripts/graph-view.js","lib/scripts/graph-wasm.js","lib/scripts/graph-render-worker.js","lib/scripts/tinycolor.js","lib/scripts/pixi.js","lib/scripts/minisearch.js","lib/media/favicon.png","lib/scripts/graph-data.js","lib/styles/obsidian.css","lib/styles/other-plugins.css","lib/styles/theme.css","lib/styles/global-variable-styles.css","lib/styles/supported-plugins.css","lib/styles/main-styles.css"],"webpages":{"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#프로젝트","#개발","#Hosting","#Obsidian","#CI/CD"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","pathToRoot":"../..","createdTime":1739783693575,"modifiedTime":1740033321729,"sourceSize":6374,"sourcePath":"project/note CI_CD/👻 Obsidian 정적호스팅 CICD 과정.md","exportPath":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#실기","#키워드","#정리"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","pathToRoot":"../../..","createdTime":1739777477564,"modifiedTime":1740028264015,"sourceSize":52862,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 키워드.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946883587,"sourceSize":21325,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 1과목 - 소프트웨어 설계.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946885204,"sourceSize":11745,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 2과목 - 소프트웨어 개발.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946886923,"sourceSize":11355,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 3과목 - 데이터베이스 구축.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","pathToRoot":"../../..","createdTime":1739783025899,"modifiedTime":1739946888780,"sourceSize":25268,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 4과목 - 프로그래밍 언어 활용.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#정보처리기사","#필기","#정리"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","pathToRoot":"../../..","createdTime":1739783043089,"modifiedTime":1739946892799,"sourceSize":21328,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 5과목 - 정보시스템 구축관리.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/☕-java-,-oop.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#OOP"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/cs/☕-java-,-oop.html","pathToRoot":"../..","createdTime":1739844224869,"modifiedTime":1739946524872,"sourceSize":36029,"sourcePath":"study/CS/☕ JAVA , OOP.md","exportPath":"study/cs/☕-java-,-oop.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🍃-spring.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#SPRING","#FRAMWORK"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/cs/🍃-spring.html","pathToRoot":"../..","createdTime":1739844578975,"modifiedTime":1739946652730,"sourceSize":46710,"sourcePath":"study/CS/🍃 Spring.md","exportPath":"study/cs/🍃-spring.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🎩-devops.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#DevOps","#CI/CD"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/cs/🎩-devops.html","pathToRoot":"../..","createdTime":1739844345143,"modifiedTime":1739946867084,"sourceSize":14371,"sourcePath":"study/CS/🎩 DevOps.md","exportPath":"study/cs/🎩-devops.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/🐞-etc.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#기타"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/cs/🐞-etc.html","pathToRoot":"../..","createdTime":1739844790888,"modifiedTime":1739946635882,"sourceSize":3884,"sourcePath":"study/CS/🐞 etc.md","exportPath":"study/cs/🐞-etc.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/cs/📔-database.html":{"title":"📔 DataBase","icon":"","description":"<a class=\"tag\" href=\"?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"?query=tag:DB\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DB</a> <a class=\"tag\" href=\"?query=tag:DataBase\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DataBase</a> <br> <a href=\".?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\".?query=tag:DB\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DB\">#DB</a> <a href=\".?query=tag:DataBase\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DataBase\">#DataBase</a><br>\n<br>간단히 설명하면 \"여러 쿼리를 한번에 실행하는 것\" 이다.\n<br>SQL의 Function과 비슷해 보이지만 차이가 있다.<br>\nfunction : 클라이언트에서 처리, 리턴값 필수, 리턴값은 한개만 반환 가능<br>\n프로시저 : 서버로 보내서 처리, 리턴값 선택, 리컨값 여러개 가능\n<br>속도면에서는 함수에 비해 프로시저가 더 빠르다.<br>\n그렇기 때문에 프로시저같은 경우는 실행,처리를 할때 주로 사용하고, 함수는 간단한 계산이나 수치 결과를 나타낼 때 사용한다.<br>\n<br>하나의 요청으로 여러 SQL문을 실행 할 수 있음\n<br>네트워크 소요 시간을 줄일 수 있음(여러개의 쿼리를 처리하는 시점에서 네트워크 부하를 줄임)\n<br>보수성이 뛰어나다\n<br>개발 업무를 구분하여 개발할 수 있다.(DB관련 처리를 API처럼 만들어 사용가능)\n<br>\n<br>재사용성이 낮다(DB버전 별 구문/규칙과 호환성이 다르기 때문)\n<br>처리 성능이 좋지 않다(MySQL스토어드 프로그램 처리 성능이 낮다)\n<br><img alt=\"Pasted image 20240610171904.png\" src=\"사진-및-문서/pasted-image-20240610171904.png\" target=\"_self\"><br>파라미터 선언은 프로시저명() 안에서 선언하고, SQL문과 변수는 BEGIN - END 안에서 작성한다.\n<br>SELECT사용시 반드시, 조회한 컬럼의 값을 INTO로 변수 안에 넣어주어야 한다.\n<br>프로시저안에서 사용하는 SQL문은 세미콜론(;)으로 문장 끝을 맺어주어야 한다.\n<br>if, case, loop 문을 사용할 수 있다.\n<br>프로시저내에서 다른 프로시저를 호출 할 수 있다.\n<br>- 커넥션이란 어플리케이션과 데이터베이스 서버간의 통신 링크를 뜻한다. 애플리케이션이 쿼리를 실행하고, 데이터를 검색하고, 데이터베이스에서 트랜젝션을 수행 할 수 있는 세션을\n설정하는데 사용된다.\n말그대로 애플리케이션과 DB를 연결하는 통신링크이며, 이가 모여있는것을 커넥션 풀 이라고 한다.\n매번 연결하고 끊고 하는것 보다 커넥션풀에 등록하는 것이 성능적인 향상을 기대할 수 있기 때문이다.\n<br>\n<br>테이블 간에 중복된 데이터를 허용하지 않는다는 기본 목표를 갖는다. <br>중복된 데이터를 허용하지 않음으로 써 무결성 을 유지할 수 있다.\n<br>\n<br>DB의 저장 용량 또한 줄일 수 있다.\n<br>데이터 테이블을 분해하여 이상현상이 발생할 가능성을 줄이고, 확장/수정시 구조 변경을<br>\n최소화 할 수 있다.\n<br>\n<br>\n릴레이션의 분해로 인해 Join연산이 늘어날 수 있다. <br>\n쿼리시 응답시간이 느려질 수 있다. 데이터의 중복속성을 최대한 제거하는 것 이기때문에, 속성이 하나의 테이블에 집약되므로<br>\n데이터 용량이 최소화 되어 상황에따라 처리속도가 빨라질 수도 있고, 느려질 수도 있다.<br>\n만약 조인이 만연하여 속도저하가 발생하게 된다면 반정규화를 통해 속도를 개선할 수 있다. <br>\n<br>테이블의 컬럼이 원자값(하나의 값)을 갖도록 테이블을 분해하는 것이다.\n<br>각 컬럼의 순서가 상관이 없어야한다.\n<br>하나의 컬럼은 같은 종류의 타입을 가져야 한다.<br>\n<img alt=\"Pasted image 20240531103441.png\" src=\"사진-및-문서/pasted-image-20240531103441.png\" target=\"_self\"><br>\n원자값을 갖도록 컬럼을 나눈다.<br>\n<img alt=\"Pasted image 20240531103549.png\" src=\"사진-및-문서/pasted-image-20240531103549.png\" target=\"_self\">\n<br>\n<br>제 1 정규화를 진행한 테이블에 대해 \"완전 함수 종속\"을 만족하도록 테이블을 분해하는 것이다.\n<br>여기서 완전 함수 종속이란, 기본키의 부분집합이 결정자가 되어선 안된다는 것을 의미한다.<br>\n즉, 부분적 종속을 없애는 것이다.\n<br><img alt=\"Pasted image 20240531105228.png\" src=\"사진-및-문서/pasted-image-20240531105228.png\" target=\"_self\"><br>\n해당 테이블의 기본키는 (학생번호, 강좌이름)으로 복합키 이다.<br>\n성적은 (학생번호, 강좌이름)인 기본키가 결정하지만,<br>\n강의실은 기본키의 부분집합인 강좌이름이 결정하게 된다.<br>즉, 부분집합이 결정자가 되지 않도록 테이블을 분리시키는 것으로 완전 함수 종속을 만족시킬 수 있다.<br>\n<img alt=\"Pasted image 20240531105241.png\" src=\"사진-및-문서/pasted-image-20240531105241.png\" target=\"_self\"><br>\n<br>제2 정규화를 진행한 테이블에 대해 \"이행적 종속\"을 없애도록 테이블을 분해하는 것이다.\n<br>여기서 이행적 종속이란 A -&gt; B , B -&gt; C 가 성립할때, A -&gt; C 가 성립되는 것을 의미한다.<br>\n<img alt=\"Pasted image 20240531104351.png\" src=\"사진-및-문서/pasted-image-20240531104351.png\" target=\"_self\"><br>\n다음의 경유 이행적 종속상태 로 말할 수 있다.\n<br>그 경우 테이블을 분리하여 데이터 변경시에 다른 데이터까지 변경되는 상황을 막을 수 있다.<br>\n<img alt=\"Pasted image 20240531104418.png\" src=\"사진-및-문서/pasted-image-20240531104418.png\" target=\"_self\"><br>\n<br>제3 정규화를 좀 더 강화한 것이라 생각하면 된다.\n<br>BCNF정규화란 제3 정규화를 진행한 테이블에 대해 모든 결정자가 후보키가 되도록<br>\n테이블을 분해하는 것을 말한다.\n<br><img alt=\"Pasted image 20240531104751.png\" src=\"사진-및-문서/pasted-image-20240531104751.png\" target=\"_self\"><br>\n특수 수강 테이블에서 기본키는 (학생번호, 특강이름)이다. 그리고 기본키는 교수를 결정하고 있다.<br>\n또한, 여기서 교수는 특강이름을 결정하고있다.<br>문제는 교수가 특강이름을 결정하는 결정자 이지만, 후보키가 아니다.<br>\n그렇기 때문에 BCNF 정규화를 만족시키기 위해서는 테이블을 분해하여 아래와 같이 분리할 수 있다.<br><img alt=\"Pasted image 20240531104803.png\" src=\"사진-및-문서/pasted-image-20240531104803.png\" target=\"_self\"><br>\n<br>컬럼값의 중복을 제거하는것이다.\n<br>\n<br>중복을 제거하기 위해 분해할 수 있을만큼 최대한 분해하는 것이다.\n<br> 그 이상 정규화를 진행하면 오히려 정규화의 단점이 더 커지기 때문이다.\n<br>인덱스 : 단일데이터 단위인 도큐먼트(document)를 모아놓은 집합을 인덱스(index)라고 한다.<br>\n색인 : 데이터를 Elasticsearch에 저장하는 행위<br>\n샤드 : 인덱스는 기본적으로 샤드(shard)라는 단위로 분리되고, 각 노드에 분산되어 저장된다 (검색의 기본단위는 샤드이다.)<br>\n<img alt=\"Pasted image 20240828104032.png\" src=\"사진-및-문서/pasted-image-20240828104032.png\" target=\"_self\"><br>데이터를 범위나 카테고리로 나누어 관리하는 기법을 파티셔닝 이라고 한다.\n<br>\n<br>\n인덱스를 생성할 때, 처음 생성된 샤드를 프라이머리 샤드, 복제본은 리플리카 라고 부른다. <br>\n예를 들어 한 인덱스가 5개의 샤드로 구성되어있고, 클러스터가 4개의 노드로 구성되어있다고 가정하면,<br>\n각각 5개의 프라이머리 샤드와 복제본, 총 10개의 샤드들이 전체 노드에 골고루 분산되어 저장된다.<br>\n<img alt=\"Pasted image 20240828104728.png\" src=\"사진-및-문서/pasted-image-20240828104728.png\" target=\"_self\"><br>\n노드가 1개만 존재한다면 복제본은 생성되지 않는다. Elasticsearch는 아무리 작은 클러스터라도 최소 3개의 노드로 구성할 것을 권장하고 있다. <br>\n이렇게 프라이머리 샤드와 리플리카를 통해 Elasticsearch는 운영 중에 노드가 유실되어도 데이터를 잃어버리지 않고, 데이터 가용성과 무결성을 보장하게 된다. <br>샤드는 여러 서버에 분산되어 병렬 및 병행으로 검색되므로, 인덱스가 같던 다르던 상관이 없다.\n검색의 기본 단위는 샤드이기 때문이다. 따라서 인덱스를 나누는 것은 운영의 편의성을 고려할 때 선택하는 방법이다.\n<br>전체색인을 할 경우 인덱스 1개가 7억건 이라면 색인이 모두 끝날때 까지 몇시간이 걸리게 된다.\n그 와중에 데이터에 변경이 있게 된다면 전체 색인 후 일괄적용이 들어가게 될텐데, 대기시간이 길어질 수록 일괄적용 시간도 함께 늘어나게 된다.\n결국 더 빠른 색인을 위해서는 하나의 인덱스를 여러개로 나누너 병행처리를 시키도록 해야한다. 다나와 에서는 상품DB특성상 카테고리군 별로 인덱스를 나누고 있다. 이때의 장점은 특정 카테고리만 검색할때 해당 인덱스만 검색하면 되므로, 검색 속도가 현저히 감소하게 된다.\n<br>\n<br>일반적인 시스템 로그와 같은 로그성 문서는 색인을 하고 나면 수정이 필요없는 정적 컨텐츠인 반면<br>\n상품문서같은 경우 색인이 끝나도 계속 갱신되어야 하는 살아있는 동적 컨텐츠이다. 따라서 동적색인에 원할하고, 검색성능도 높은 설계를 요구한다.\n<br>트렌젝션<br>\n- 데이터베이스의 상태를 변화시키기 위해 수행하는 작업의 단위<br>트렌젝션매니저<br>\n- Spring에서 제공하는 트렌젝션 관리 기능과 JPA를 연결하는 역할을 수행.<br>@Transactional<br>\n- 클래스나 메서드에 삽입하면, AOP레벨(프록시를 사용하여)에서 트렌젝션매니저를 이용한 동작을 공통으로 적용.<br>앤티티매니저<br>\n- 영속성 컨텍스트를 관리하는 인터페이스<br>\n- 엔티티의 저장/수정/삭제/조회 작업을 수행<br>\n- 스레드 세이프하지 않으므로 한트레젝션 내에서만 사용<br>\n- 앤티티매니저펙토리는 스레드세이프하므로 공유 가능<br>영속성컨텍스트<br>\n- JPA의 엔티티를 관리하는 1차 캐시 역할을 하는 메모리 공간<br>\n- 엔티티와 DB데이터간의 상태 동기화를 책임<br>\n- 1차캐싱 / 변경 감지 / 지연 로딩 의 특징을 갖는다<br>\n- 지연로딩 : 관계된 엔티티를 실제로 필요할때만 가져오며, 변경점을 한번만 commit한다<br>스냅샷<br>\n- DB스냅샷 :<br>\n- 트렌젝션이 시작될때 생성된다.<br>\n- 독립적인 데이터베이스 복사본으로, 원본데이터 변경과 무관하다.<br>\n- 고급 격리 수준(REPEATABLE READ, SERIALIZABLE)에서 MVCC(Multi-Version Concurrency Control)를 구현할 때 사용한다.<br>\n- 물리적인 복사본이 아닌, 논리적으로 매 쿼리마다 동적으로 가공이 되는 방식이다.<br>\n- 앤티티매니저_스냅샷 :<br>\n- 엔티티가 영속성 컨텍스트에 로드될 때 생성된다.<br>\n- 엔티티의 초기 상태를 저장하여 변경 감지에 사용된다.","aliases":[],"tags":["#공부","#DB","#DataBase"],"headers":[{"heading":"📔 DataBase","level":1,"id":"📔 DataBase"},{"heading":"프로시저란?","level":1,"id":"프로시저란?"},{"heading":"프로시저를 사용하는 이유","level":3,"id":"프로시저를_사용하는_이유"},{"heading":"프로시저의 단점","level":3,"id":"프로시저의_단점"},{"heading":"DB Connection이란 무엇일까?","level":1,"id":"DB_Connection이란_무엇일까?"},{"heading":"DataBase 정규화 과정","level":1,"id":"DataBase_정규화__과정"},{"heading":"정규화란?","level":2,"id":"정규화란?"},{"heading":"장점","level":2,"id":"장점"},{"heading":"단점","level":2,"id":"단점"},{"heading":"제 1 정규화","level":3,"id":"제_1_정규화"},{"heading":"제 2 정규화","level":3,"id":"제_2_정규화"},{"heading":"제3 정규화","level":3,"id":"제3_정규화"},{"heading":"BCNF 정규화","level":3,"id":"BCNF_정규화"},{"heading":"제4 정규화는 다치 종속을 없애는것이다","level":3,"id":"제4_정규화는_다치_종속을_없애는것이다"},{"heading":"제5 정규화는 조인 종속을 없애는것이다.","level":3,"id":"제5_정규화는_조인_종속을_없애는것이다."},{"heading":"보통 정규화는 BCNF정규화 까지만 진행하는 경우가 많다.","level":4,"id":"보통_정규화는_BCNF정규화_까지만_진행하는_경우가_많다."},{"heading":"Dual 테이블이란??","level":1,"id":"Dual_테이블이란??"},{"heading":"오라클 자체에서 제공되는 테이블","level":2,"id":"오라클_자체에서_제공되는_테이블"},{"heading":"간단하게 함수를 이용해서 계산결과값을 확인할 때 사용하는 테이블","level":2,"id":"간단하게_함수를_이용해서_계산결과값을_확인할_때_사용하는_테이블"},{"heading":"오직 한 행, 한 컬럼 만을 담고 있는 Dummy 테이블이다.","level":3,"id":"오직_한_행,_한_컬럼_만을_담고_있는_Dummy_테이블이다."},{"heading":"엘라스틱서치 인덱스와 샤드 분할","level":1,"id":"엘라스틱서치_인덱스와_샤드_분할"},{"heading":"프라이머리 샤드와 복제본(Replica)","level":2,"id":"프라이머리_샤드와_복제본(Replica)"},{"heading":"검색시 샤드와 인덱스","level":3,"id":"검색시_샤드와_인덱스"},{"heading":"색인시 인덱스","level":3,"id":"색인시_인덱스"},{"heading":"결론","level":2,"id":"결론"},{"heading":"트렌젝션 / DB스냅샷 / 앤티티매니저 / 영속성컨텍스트 / JPA","level":1,"id":"트렌젝션_/_DB스냅샷_/_앤티티매니저_/_영속성컨텍스트_/_JPA"},{"heading":"각각의 정의","level":2,"id":"각각의_정의"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:DB","?query=tag:DataBase","study/cs/📔-database.html#📔 DataBase","study/cs/📔-database.html#프로시저란?","study/cs/📔-database.html#프로시저를_사용하는_이유","study/cs/📔-database.html#프로시저의_단점","study/cs/📔-database.html#DB_Connection이란_무엇일까?","study/cs/📔-database.html#DataBase_정규화__과정","study/cs/📔-database.html#정규화란?","study/cs/📔-database.html#장점","study/cs/📔-database.html#단점","study/cs/📔-database.html#제_1_정규화","study/cs/📔-database.html#제_2_정규화","study/cs/📔-database.html#제3_정규화","study/cs/📔-database.html#BCNF_정규화","study/cs/📔-database.html#제4_정규화는_다치_종속을_없애는것이다","study/cs/📔-database.html#제5_정규화는_조인_종속을_없애는것이다.","study/cs/📔-database.html#보통_정규화는_BCNF정규화_까지만_진행하는_경우가_많다.","study/cs/📔-database.html#Dual_테이블이란??","study/cs/📔-database.html#오라클_자체에서_제공되는_테이블","study/cs/📔-database.html#간단하게_함수를_이용해서_계산결과값을_확인할_때_사용하는_테이블","study/cs/📔-database.html#오직_한_행,_한_컬럼_만을_담고_있는_Dummy_테이블이다.","study/cs/📔-database.html#엘라스틱서치_인덱스와_샤드_분할","study/cs/📔-database.html#프라이머리_샤드와_복제본(Replica)","study/cs/📔-database.html#검색시_샤드와_인덱스","study/cs/📔-database.html#색인시_인덱스","study/cs/📔-database.html#결론","study/cs/📔-database.html#트렌젝션_/_DB스냅샷_/_앤티티매니저_/_영속성컨텍스트_/_JPA","study/cs/📔-database.html#각각의_정의"],"author":"","coverImageURL":"","fullURL":"study/cs/📔-database.html","pathToRoot":"../..","createdTime":1739844411985,"modifiedTime":1740733278020,"sourceSize":10929,"sourcePath":"study/CS/📔 DataBase.md","exportPath":"study/cs/📔-database.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20240610171904.png","사진-및-문서/pasted-image-20240531103441.png","사진-및-문서/pasted-image-20240531103549.png","사진-및-문서/pasted-image-20240531105228.png","사진-및-문서/pasted-image-20240531105241.png","사진-및-문서/pasted-image-20240531104351.png","사진-및-문서/pasted-image-20240531104418.png","사진-및-문서/pasted-image-20240531104751.png","사진-및-문서/pasted-image-20240531104803.png","사진-및-문서/pasted-image-20240828104032.png","사진-및-문서/pasted-image-20240828104728.png"]},"study/cs/📭-server.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Server"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/cs/📭-server.html","pathToRoot":"../..","createdTime":1739844706654,"modifiedTime":1739946645157,"sourceSize":6987,"sourcePath":"study/CS/📭 Server.md","exportPath":"study/cs/📭-server.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#JPA","#Java","#Mybatis","#DeadLock"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","pathToRoot":"../..","createdTime":1739950661685,"modifiedTime":1739951453006,"sourceSize":7041,"sourcePath":"study/Dev Seminar/🍂 JPA, Mybatis , Dead Lock.md","exportPath":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#DB","#DataBase","#설계"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","pathToRoot":"../..","createdTime":1739950797888,"modifiedTime":1739951081414,"sourceSize":6184,"sourcePath":"study/Dev Seminar/📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가.md","exportPath":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🔹-tdd에-대하여.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#TDD","#Test"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/🔹-tdd에-대하여.html","pathToRoot":"../..","createdTime":1739950748159,"modifiedTime":1739951382850,"sourceSize":13216,"sourcePath":"study/Dev Seminar/🔹 TDD에 대하여.md","exportPath":"study/dev-seminar/🔹-tdd에-대하여.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Hello","#Redis","#Cash","#설계"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","pathToRoot":"../..","createdTime":1739950696311,"modifiedTime":1739951282911,"sourceSize":11984,"sourcePath":"study/Dev Seminar/🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성.md","exportPath":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🪕-jpa-에-대한-고찰.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#JPA","#DB","#SPRING"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/🪕-jpa-에-대한-고찰.html","pathToRoot":"../..","createdTime":1739950614572,"modifiedTime":1739951494022,"sourceSize":9300,"sourcePath":"study/Dev Seminar/🪕 JPA 에 대한 고찰.md","exportPath":"study/dev-seminar/🪕-jpa-에-대한-고찰.html","showInTree":true,"treeOrder":0,"attachments":[]},"index.html":{"title":"🏠 taesung's Blog","icon":"","description":"<a class=\"tag\" href=\"?query=tag:home\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#home</a> <a class=\"tag\" href=\"?query=tag:index\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#index</a> <a class=\"tag\" href=\"?query=tag:blog\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#blog</a> <a class=\"tag\" href=\"?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <br> <a href=\".?query=tag:home\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#home\">#home</a> <a href=\".?query=tag:index\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#index\">#index</a> <a href=\".?query=tag:blog\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#blog\">#blog</a> <a href=\".?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a><br><a data-tooltip-position=\"top\" aria-label=\"https://github.com/LeeTaeSung0628\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/LeeTaeSung0628\" target=\"_self\"><span alt=\"Pasted image 20250220144552.png\" src=\"Pasted image 20250220144552.png\" class=\"internal-embed media-embed image-embed is-loaded\" style=\"width: 220px; max-width: 100%;\"></span></a><img alt=\"Pasted image 20250220144552.png\" src=\"사진-및-문서/pasted-image-20250220144552.png\" style=\"width: 220px; max-width: 100%;\" target=\"_self\"><br>\n<a data-tooltip-position=\"top\" aria-label=\"https://github.com/LeeTaeSung0628\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/LeeTaeSung0628\" target=\"_self\"><font color=\"#ffffff\"></font></a>🔗git Hub 이동<br><a data-tooltip-position=\"top\" aria-label=\"https://git.io/typing-svg\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://git.io/typing-svg\" target=\"_self\"></a><img alt=\"Typing SVG\" src=\"https://readme-typing-svg.demolab.com?font=Fira+Code&amp;pause=1000&amp;color=36A9F7&amp;random=false&amp;width=435&amp;lines=%EC%97%AC%EA%B8%B0%EB%8A%94+%EA%B3%B5%EB%B6%80%ED%95%98%EA%B3%A0%2C+%EA%B8%B0%EB%A1%9D%ED%95%98%EB%8A%94+%EA%B3%B3%EC%9E%85%EB%8B%88%EB%8B%A4\" referrerpolicy=\"no-referrer\" target=\"_self\" class=\"is-unresolved\"><br> <br> <br> <br> <br> <br> <br> <br> <br> <br>Soon <br>깃 레포에서도 블로그 주소로 이어질 수 있도록 Readme 설정하기. <br>리드미 또한 옵시디언에서 작업이 가능하다. <br>Netlify 셋팅 추가하기","aliases":[],"tags":["#home","#index","#blog","#공부"],"headers":[{"heading":"🏠 taesung's Blog","level":1,"id":"🏠 taesung's Blog"},{"heading":"Hi, there ","level":1,"id":"Hi,_there_<img_src=\"https//raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Hand%20gestures/Hand%20with%20Fingers%20Splayed%20Light%20Skin%20Tone.png\"_alt=\"Hand_with_Fingers_Splayed_Light_Skin_Tone\"_width=\"25\"_height=\"25\"_/>"},{"heading":"💻 프로젝트 🖱Click!","level":1,"id":"[[💻_프로젝트]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>"},{"heading":"🌍 Obsidian CI/CD","level":2,"id":"🌍_**Obsidian_CI/CD**"},{"heading":"🍃 Spring Batch","level":2,"id":"🍃_**Spring_Batch**"},{"heading":"〽 Spring AOP","level":2,"id":"〽_**Spring_AOP**"},{"heading":"💁 infra settings","level":2,"id":"💁_**infra_settings**"},{"heading":"📕 공부 🖱Click!","level":1,"id":"[[📕_공부]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>"},{"heading":"🌺 Issue / TroubleShooting","level":2,"id":"🌺_**Issue**_/_**TroubleShooting**"},{"heading":"❄ CS","level":2,"id":"❄_**CS**"},{"heading":"🧪 Coding Test","level":2,"id":"🧪_**Coding_Test**"},{"heading":"🧑‍🤝‍🧑 Company Seminar","level":2,"id":"🧑‍🤝‍🧑_**Company_Seminar**"},{"heading":"📔 license","level":2,"id":"📔_**license**"},{"heading":"🪓 도구 🖱Click!","level":1,"id":"[[🪓_도구]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>"},{"heading":"🐻 Obsidian","level":2,"id":"🐻_**Obsidian**"},{"heading":"☁ AWS","level":2,"id":"☁_**AWS**"},{"heading":"🐋 docker","level":2,"id":"🐋_**docker**"},{"heading":"🏫 강의 🖱Click!","level":1,"id":"[[🏫_강의]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>"},{"heading":"🐊 Spring Core Basic","level":2,"id":"🐊_**Spring_Core_Basic**"}],"backlinks":[],"links":["?query=tag:home","?query=tag:index","?query=tag:blog","?query=tag:%EA%B3%B5%EB%B6%80","https://github.com/LeeTaeSung0628","https://github.com/LeeTaeSung0628","https://git.io/typing-svg","project/💻-프로젝트.html","study/📕-공부.html","tools/🪓-도구.html","lectur/🏫-강의.html","index.html#🏠 taesung's Blog","index.html#Hi,_there_<img_src=\"https//raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Hand%20gestures/Hand%20with%20Fingers%20Splayed%20Light%20Skin%20Tone.png\"_alt=\"Hand_with_Fingers_Splayed_Light_Skin_Tone\"_width=\"25\"_height=\"25\"_/>","index.html#[[💻_프로젝트]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>","index.html#🌍_**Obsidian_CI/CD**","index.html#🍃_**Spring_Batch**","index.html#〽_**Spring_AOP**","index.html#💁_**infra_settings**","index.html#[[📕_공부]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>","index.html#🌺_**Issue**_/_**TroubleShooting**","index.html#❄_**CS**","index.html#🧪_**Coding_Test**","index.html#🧑‍🤝‍🧑_**Company_Seminar**","index.html#📔_**license**","index.html#[[🪓_도구]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>","index.html#🐻_**Obsidian**","index.html#☁_**AWS**","index.html#🐋_**docker**","index.html#[[🏫_강의]]_<font_color=\"#7f7f7f\"_size=3.5px>🖱Click!</font>","index.html#🐊_**Spring_Core_Basic**"],"author":"","coverImageURL":"","fullURL":"index.html","pathToRoot":"","createdTime":1739779810544,"modifiedTime":1740734103202,"sourceSize":1654,"sourcePath":"index.md","exportPath":"index.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250220144552.png"]},"tools/🎵-obsidian.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#메모","#Obsidian"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"tools/🎵-obsidian.html","pathToRoot":"..","createdTime":1739863713458,"modifiedTime":1739954777611,"sourceSize":5657,"sourcePath":"Tools/🎵 Obsidian.md","exportPath":"tools/🎵-obsidian.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/커리큘럼/🆕-dev-커리큘럼.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#개발","#초보","#기초"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/커리큘럼/🆕-dev-커리큘럼.html","pathToRoot":"../..","createdTime":1740017929179,"modifiedTime":1740027066919,"sourceSize":69,"sourcePath":"study/커리큘럼/🆕 Dev 커리큘럼.md","exportPath":"study/커리큘럼/🆕-dev-커리큘럼.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/💻-프로젝트.html":{"title":"💻 프로젝트","icon":"","description":"<a class=\"tag\" href=\"?query=tag:프로젝트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#프로젝트</a> <a class=\"tag\" href=\"?query=tag:모음\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#모음</a> <br> <a href=\".?query=tag:프로젝트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#프로젝트\">#프로젝트</a> <a href=\".?query=tag:모음\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#모음\">#모음</a><br>프로젝트\npublic하게 공개할 수 있는 프로젝트의 제작 과정입니다.\n<br>\n<br><a data-href=\"👻 Obsidian 정적호스팅 CICD 과정\" href=\"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">👻 Obsidian 정적호스팅 CICD 과정</a>\n<br><a data-href=\"⛈ Obsidian-AWS연동\" href=\"project/note-ci_cd/⛈-obsidian-aws연동.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">⛈ Obsidian-AWS연동</a>\n<br>\n<br><a data-href=\"🏹 예치금 차액 비교 Spring Batch 리펙토링\" href=\"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🏹 예치금 차액 비교 Spring Batch 리펙토링</a>\n<br><a data-href=\"🏹 예치금 차액 비교 Spring Batch 리펙토링 부록\" href=\"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🏹 예치금 차액 비교 Spring Batch 리펙토링 부록</a>\n<br><a data-href=\"✏ Chunk_Partitioning Batch 구조 드로잉\" href=\"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">✏ Chunk_Partitioning Batch 구조 드로잉</a>\n<br>\n<br><a data-href=\"👩‍👧‍👦 marketing Analytics 공통모듈 제작기\" href=\"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">👩‍👧‍👦 marketing Analytics 공통모듈 제작기</a>\n<br><a data-href=\"👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출\" href=\"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출</a>\n<br>\n<br><a data-href=\"📘 SpringBoot &amp; Docker + Reids 연동\" href=\"tools/docker/📘-springboot-&amp;-docker-+-reids-연동.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📘 SpringBoot &amp; Docker + Reids 연동</a>\n<br><a data-href=\"🌥 aws(EC2)셋팅부터 배포까지\" href=\"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🌥 aws(EC2)셋팅부터 배포까지</a>","aliases":[],"tags":["#프로젝트","#모음"],"headers":[{"heading":"💻 프로젝트","level":1,"id":"💻 프로젝트"},{"heading":"🌍 Obsidian CI/CD","level":1,"id":"🌍_**Obsidian_CI/CD**"},{"heading":"🍃 Spring Batch","level":2,"id":"🍃_*Spring_Batch*"},{"heading":"〽 Spring AOP","level":2,"id":"〽_*Spring_AOP*"},{"heading":"💁 infra settings","level":2,"id":"💁_*infra_settings*"}],"backlinks":[],"links":["?query=tag:%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","?query=tag:%EB%AA%A8%EC%9D%8C","project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","project/note-ci_cd/⛈-obsidian-aws연동.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","tools/docker/📘-springboot-&-docker-+-reids-연동.html","tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","project/💻-프로젝트.html#💻 프로젝트","project/💻-프로젝트.html#🌍_**Obsidian_CI/CD**","project/💻-프로젝트.html#🍃_*Spring_Batch*","project/💻-프로젝트.html#〽_*Spring_AOP*","project/💻-프로젝트.html#💁_*infra_settings*"],"author":"","coverImageURL":"","fullURL":"project/💻-프로젝트.html","pathToRoot":"..","createdTime":1740028413454,"modifiedTime":1740733839079,"sourceSize":750,"sourcePath":"project/💻 프로젝트.md","exportPath":"project/💻-프로젝트.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/📕-공부.html":{"title":"📕 공부","icon":"","description":"<a class=\"tag\" href=\"?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"?query=tag:모음\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#모음</a> <br> <a href=\".?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\".?query=tag:모음\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#모음\">#모음</a><br>공부\n보고 배운 지식 중 공유하고 싶은 정보를 모아둔 카테고리 입니다.\n<br>\n<br><a data-href=\"⏰ Script 로딩 지연 트러블 슈팅\" href=\"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">⏰ Script 로딩 지연 트러블 슈팅</a>\n<br><a data-href=\"📓 EntityManager와 Transaction 그리고 ConnectionPool\" href=\"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📓 EntityManager와 Transaction 그리고 ConnectionPool</a>\n<br><a data-href=\"🔐 Lock이란 무엇인가. 데이터 정합성을 위한 여정\" href=\"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🔐 Lock이란 무엇인가. 데이터 정합성을 위한 여정</a>\n<br><a data-href=\"⚔ 도대체 어디서 StckOverflow가..\" href=\"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">⚔ 도대체 어디서 StckOverflow가..</a>\n<br>\n<br><a data-href=\"☕ JAVA , OOP\" href=\"study/cs/☕-java-,-oop.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">☕ JAVA , OOP</a>\n<br><a data-href=\"🍃 Spring\" href=\"study/cs/🍃-spring.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🍃 Spring</a>\n<br><a data-href=\"🎩 DevOps\" href=\"study/cs/🎩-devops.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🎩 DevOps</a>\n<br><a data-href=\"📔 DataBase\" href=\"study/cs/📔-database.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📔 DataBase</a>\n<br><a data-href=\"📭 Server\" href=\"study/cs/📭-server.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📭 Server</a>\n<br><a data-href=\"🐞 etc\" href=\"study/cs/🐞-etc.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🐞 etc</a>\n<br>\n<br><a data-href=\"🤠 Coding Test 풀이 모음\" href=\"study/coding-test/🤠-coding-test-풀이-모음.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🤠 Coding Test 풀이 모음</a>\n<br><a data-href=\"👽 Algorithm\" href=\"study/coding-test/👽-algorithm.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">👽 Algorithm</a>\n<br>\n<br><a data-href=\"🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성\" href=\"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성</a>\n<br><a data-href=\"🍂 JPA, Mybatis , Dead Lock\" href=\"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🍂 JPA, Mybatis , Dead Lock</a>\n<br><a data-href=\"🔹 TDD에 대하여\" href=\"study/dev-seminar/🔹-tdd에-대하여.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🔹 TDD에 대하여</a>\n<br><a data-href=\"🪕 JPA 에 대한 고찰\" href=\"study/dev-seminar/🪕-jpa-에-대한-고찰.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🪕 JPA 에 대한 고찰</a>\n<br><a data-href=\"🔒 투자하기 서비스 락(Lock)기법 개선안\" href=\"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🔒 투자하기 서비스 락(Lock)기법 개선안</a>\n<br><a data-href=\"🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여\" href=\"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여</a>\n<br><a data-href=\"📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가\" href=\"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가</a>\n<br>\n<br><a data-href=\"🥈 필기 1과목 - 소프트웨어 설계\" href=\"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥈 필기 1과목 - 소프트웨어 설계</a>\n<br><a data-href=\"🥈 필기 2과목 - 소프트웨어 개발\" href=\"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥈 필기 2과목 - 소프트웨어 개발</a>\n<br><a data-href=\"🥈 필기 3과목 - 데이터베이스 구축\" href=\"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥈 필기 3과목 - 데이터베이스 구축</a>\n<br><a data-href=\"🥈 필기 4과목 - 프로그래밍 언어 활용\" href=\"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥈 필기 4과목 - 프로그래밍 언어 활용</a>\n<br><a data-href=\"🥈 필기 5과목 - 정보시스템 구축관리\" href=\"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥈 필기 5과목 - 정보시스템 구축관리</a>\n<br>\n<br><a data-href=\"🥇 정보처리 기사 실기 키워드\" href=\"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥇 정보처리 기사 실기 키워드</a>\n<br><a data-href=\"🥇 정보처리 기사 실기 SQL 문제\" href=\"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🥇 정보처리 기사 실기 SQL 문제</a>","aliases":[],"tags":["#공부","#모음"],"headers":[{"heading":"📕 공부","level":1,"id":"📕 공부"},{"heading":"Issue / TroubleShooting","level":2,"id":"**Issue**_/_*TroubleShooting*"},{"heading":"CS","level":2,"id":"*CS*"},{"heading":"CodingTest","level":2,"id":"*CodingTest*"},{"heading":"Company Seminar","level":2,"id":"**Company_Seminar**"},{"heading":"license","level":2,"id":"*license*"},{"heading":"정보처리기사 필기","level":3,"id":"정보처리기사_필기"},{"heading":"정보처리기사 실기","level":3,"id":"정보처리기사_실기"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:%EB%AA%A8%EC%9D%8C","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html","issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html","study/cs/☕-java-,-oop.html","study/cs/🍃-spring.html","study/cs/🎩-devops.html","study/cs/📔-database.html","study/cs/📭-server.html","study/cs/🐞-etc.html","study/coding-test/🤠-coding-test-풀이-모음.html","study/coding-test/👽-algorithm.html","study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","study/dev-seminar/🔹-tdd에-대하여.html","study/dev-seminar/🪕-jpa-에-대한-고찰.html","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html","study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/📕-공부.html#📕 공부","study/📕-공부.html#**Issue**_/_*TroubleShooting*","study/📕-공부.html#*CS*","study/📕-공부.html#*CodingTest*","study/📕-공부.html#**Company_Seminar**","study/📕-공부.html#*license*","study/📕-공부.html#정보처리기사_필기","study/📕-공부.html#정보처리기사_실기"],"author":"","coverImageURL":"","fullURL":"study/📕-공부.html","pathToRoot":"..","createdTime":1740028632740,"modifiedTime":1740733661958,"sourceSize":1474,"sourcePath":"study/📕 공부.md","exportPath":"study/📕-공부.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/coding-test/👽-algorithm.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Coding","#Test","#알고리즘"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/coding-test/👽-algorithm.html","pathToRoot":"../..","createdTime":1740031282530,"modifiedTime":1740107593302,"sourceSize":140,"sourcePath":"study/Coding Test/👽 Algorithm.md","exportPath":"study/coding-test/👽-algorithm.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/coding-test/🤠-coding-test-풀이-모음.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Coding","#Test","#모음"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/coding-test/🤠-coding-test-풀이-모음.html","pathToRoot":"../..","createdTime":1740030994816,"modifiedTime":1740032047241,"sourceSize":673,"sourcePath":"study/Coding Test/🤠 Coding Test 풀이 모음.md","exportPath":"study/coding-test/🤠-coding-test-풀이-모음.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/note-ci_cd/⛈-obsidian-aws연동.html":{"title":"⛈ Obsidian-AWS연동","icon":"","description":"<a class=\"tag\" href=\"?query=tag:프로젝트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#프로젝트</a> <a class=\"tag\" href=\"?query=tag:개발\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#개발</a> <a class=\"tag\" href=\"?query=tag:Hosting\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Hosting</a> <a class=\"tag\" href=\"?query=tag:Obsidian\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Obsidian</a> <a class=\"tag\" href=\"?query=tag:CI/CD\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#CI/CD</a> <br> <a href=\".?query=tag:프로젝트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#프로젝트\">#프로젝트</a> <a href=\".?query=tag:개발\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#개발\">#개발</a> <a href=\".?query=tag:Hosting\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Hosting\">#Hosting</a> <a href=\".?query=tag:Obsidian\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Obsidian\">#Obsidian</a> <a href=\".?query=tag:CI/CD\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#CI/CD\">#CI/CD</a><br>추가예정.","aliases":[],"tags":["#프로젝트","#개발","#Hosting","#Obsidian","#CI/CD"],"headers":[{"heading":"⛈ Obsidian-AWS연동","level":1,"id":"⛈ Obsidian-AWS연동"}],"backlinks":[],"links":["?query=tag:%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","?query=tag:%EA%B0%9C%EB%B0%9C","?query=tag:Hosting","?query=tag:Obsidian","?query=tag:CI/CD","project/note-ci_cd/⛈-obsidian-aws연동.html#⛈ Obsidian-AWS연동"],"author":"","coverImageURL":"","fullURL":"project/note-ci_cd/⛈-obsidian-aws연동.html","pathToRoot":"../..","createdTime":1740035686504,"modifiedTime":1740558017469,"sourceSize":95,"sourcePath":"project/note CI_CD/⛈ Obsidian-AWS연동.md","exportPath":"project/note-ci_cd/⛈-obsidian-aws연동.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#AWS","#Amazon","#Cloud","#Docker","#Redis","#EC2"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1740361077682,"sourceSize":9994,"sourcePath":"Tools/aws/🌥 aws(EC2)셋팅부터 배포까지.md","exportPath":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/aws/🍊-aws-ec2란.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#AWS","#Amazon","#Cloud","#EC2"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"tools/aws/🍊-aws-ec2란.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1740361069051,"sourceSize":3324,"sourcePath":"Tools/aws/🍊 aws EC2란.md","exportPath":"tools/aws/🍊-aws-ec2란.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/docker/🐋-docker.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#도커","#Docker"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"tools/docker/🐋-docker.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1740108237156,"sourceSize":3097,"sourcePath":"Tools/docker/🐋 docker.md","exportPath":"tools/docker/🐋-docker.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/docker/📘-springboot-&-docker-+-reids-연동.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#도커","#Docker","#SPRING","#Boot","#Redis"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"tools/docker/📘-springboot-&-docker-+-reids-연동.html","pathToRoot":"../..","createdTime":1740105237396,"modifiedTime":1740113417219,"sourceSize":10946,"sourcePath":"Tools/docker/📘 SpringBoot & Docker + Reids 연동.md","exportPath":"tools/docker/📘-springboot-&-docker-+-reids-연동.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/🏫-강의.html":{"title":"🏫 강의","icon":"","description":"<a class=\"tag\" href=\"?query=tag:강의\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#강의</a> <a class=\"tag\" href=\"?query=tag:모음\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#모음</a> <a class=\"tag\" href=\"?query=tag:lectur\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#lectur</a> <br> <a href=\".?query=tag:강의\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#강의\">#강의</a> <a href=\".?query=tag:모음\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#모음\">#모음</a> <a href=\".?query=tag:lectur\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#lectur\">#lectur</a><br>강의\n강의를 수강하며, 정리한 내용 모음집 입니다.\n<br>정보\ninflearn - SpringCoreBasic.김영한 님의 강의 입니다.\n<br> <br> <br> <br> <br>","aliases":[],"tags":["#강의","#모음","#lectur"],"headers":[{"heading":"🏫 강의","level":1,"id":"🏫 강의"},{"heading":"🐊 *Spring Core","level":2,"id":"🐊_*Spring_Core"},{"heading":"1. 객체 지향 설계와 스프링","level":3,"id":"[[1._객체_지향_설계와_스프링]]"},{"heading":"2. 스프링 핵심 원리 이해","level":3,"id":"[[2._스프링_핵심_원리_이해]]"},{"heading":"3. 스프링 컨테이너와 스프링 빈","level":3,"id":"[[3._스프링_컨테이너와_스프링_빈]]"},{"heading":"4. 싱글톤 컨테이너","level":3,"id":"[[4._싱글톤_컨테이너]]"},{"heading":"5. 컴포넌트 스캔","level":3,"id":"[[5._컴포넌트_스캔]]"},{"heading":"6. 의존관계 자동 주입","level":3,"id":"[[6._의존관계_자동_주입]]"},{"heading":"7. 빈 생명주기 콜백","level":3,"id":"[[7._빈_생명주기_콜백]]"},{"heading":"8. 빈 스포크","level":3,"id":"[[8._빈_스포크]]"}],"backlinks":[],"links":["?query=tag:%EA%B0%95%EC%9D%98","?query=tag:%EB%AA%A8%EC%9D%8C","?query=tag:lectur","lectur/1.-객체-지향-설계와-스프링.html","2. 스프링 핵심 원리 이해","3. 스프링 컨테이너와 스프링 빈","4. 싱글톤 컨테이너","5. 컴포넌트 스캔","6. 의존관계 자동 주입","7. 빈 생명주기 콜백","8. 빈 스포크","lectur/🏫-강의.html#🏫 강의","lectur/🏫-강의.html#🐊_*Spring_Core","lectur/🏫-강의.html#[[1._객체_지향_설계와_스프링]]","lectur/🏫-강의.html#[[2._스프링_핵심_원리_이해]]","lectur/🏫-강의.html#[[3._스프링_컨테이너와_스프링_빈]]","lectur/🏫-강의.html#[[4._싱글톤_컨테이너]]","lectur/🏫-강의.html#[[5._컴포넌트_스캔]]","lectur/🏫-강의.html#[[6._의존관계_자동_주입]]","lectur/🏫-강의.html#[[7._빈_생명주기_콜백]]","lectur/🏫-강의.html#[[8._빈_스포크]]"],"author":"","coverImageURL":"","fullURL":"lectur/🏫-강의.html","pathToRoot":"..","createdTime":1740115400228,"modifiedTime":1740558233386,"sourceSize":552,"sourcePath":"lectur/🏫 강의.md","exportPath":"lectur/🏫-강의.html","showInTree":true,"treeOrder":0,"attachments":[]},"lectur/1.-객체-지향-설계와-스프링.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#SpringCoreBasic","#SPRING","#lectur","#강의"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"lectur/1.-객체-지향-설계와-스프링.html","pathToRoot":"..","createdTime":1740116090884,"modifiedTime":1740129126117,"sourceSize":1269,"sourcePath":"lectur/1. 객체 지향 설계와 스프링.md","exportPath":"lectur/1.-객체-지향-설계와-스프링.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/🪓-도구.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#Tools","#모음","#도구"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"tools/🪓-도구.html","pathToRoot":"..","createdTime":1740028927813,"modifiedTime":1740361051667,"sourceSize":496,"sourcePath":"Tools/🪓 도구.md","exportPath":"tools/🪓-도구.html","showInTree":true,"treeOrder":0,"attachments":[]},"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html":{"title":"","icon":"","description":"","aliases":[],"tags":["#공부","#Java","#SPRING","#Security","#Tokken","#Session","#Cookie"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","pathToRoot":"../..","createdTime":1739950706177,"modifiedTime":1740127908434,"sourceSize":9716,"sourcePath":"study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md","exportPath":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","showInTree":true,"treeOrder":0,"attachments":[]},"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html":{"title":"⏰ Script 로딩 지연 트러블 슈팅","icon":"","description":"<a class=\"tag\" href=\"?query=tag:트러블슈팅\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#트러블슈팅</a> <a class=\"tag\" href=\"?query=tag:스크립트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#스크립트</a> <a class=\"tag\" href=\"?query=tag:로딩지연\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#로딩지연</a> <br> <a href=\".?query=tag:트러블슈팅\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#트러블슈팅\">#트러블슈팅</a> <a href=\".?query=tag:스크립트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#스크립트\">#스크립트</a> <a href=\".?query=tag:로딩지연\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#로딩지연\">#로딩지연</a><br><img alt=\"Pasted image 20241105110415.png\" src=\"사진-및-문서/pasted-image-20241105110415.png\" style=\"width: 575px; max-width: 100%;\" target=\"_self\"><br>mainLayout은 Contents loading 후 Script를 호출하기 때문에, 특정 정적 오브젝트의 로딩이 완전히 마무리 될때 까지 실행되지 않음.<br>\n=&gt; ex) 상품이 로딩되지 않은 상태로 최대 20초 가량을 대기 하게 됨<br>\n<img alt=\"Pasted image 20250227140437.png\" src=\"사진-및-문서/pasted-image-20250227140437.png\" style=\"width: 600px; max-width: 100%;\" target=\"_self\">\n<br><img alt=\"Pasted image 20250227140620.png\" src=\"사진-및-문서/pasted-image-20250227140620.png\" target=\"_self\"><br>icon(아이콘)\n<br>font(폰트)\n<br> 현재 원인이 되는 외부자원(이미지/CSS)가 로딩되기 이전에 이벤트를 트리거 할 수 있다.<br>\n이때, HTML DOM 트리가 준비 된 후(HTML 템플릿이 준비된 후)에 실행되기 때문에 modelAndView.addObject()로 전달한 데이터를 확정적으로 받아올 수 있다.<br>\n<br>기존 메인 진입 소요시간 case 1 (로컬)<br>\n<img alt=\"Pasted image 20241105110637.png\" src=\"사진-및-문서/pasted-image-20241105110637.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n23초\n<br>\n<br>기존 메인 진입 소요시간 case 2 (로컬)<br>\n<img alt=\"Pasted image 20241105110713.png\" src=\"사진-및-문서/pasted-image-20241105110713.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n22초\n<br>\n<br>기존 메인 진입 소요시간 case 1 (운영)<br>\n<img alt=\"Pasted image 20241107115602.png\" src=\"사진-및-문서/pasted-image-20241107115602.png\" style=\"width: 475px; max-width: 100%;\" target=\"_self\"><br>\n21초\n<br>\n<br>기존 메인 진입 소요시간 case 2 (운영)<br>\n<img alt=\"Pasted image 20241107115830.png\" src=\"사진-및-문서/pasted-image-20241107115830.png\" style=\"width: 475px; max-width: 100%;\" target=\"_self\"><br>\n21초\n<br>\n<br>변경된 메인 진입 소요시간 case 1 (로컬)<br>\n<img alt=\"Pasted image 20241107121044.png\" src=\"사진-및-문서/pasted-image-20241107121044.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n0.201초\n<br>\n<br>변경된 메인 진입 소요시간 case 2 (로컬)<br>\n<img alt=\"Pasted image 20241107121202.png\" src=\"사진-및-문서/pasted-image-20241107121202.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n0.297초\n<br>\n<br>변경된 메인 진입 소요시간 case 3 (로컬)<br>\n<img alt=\"Pasted image 20241107121939.png\" src=\"사진-및-문서/pasted-image-20241107121939.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n0.232초\n<br>\n리로드 후 스크립트(상품 리스트)로드 시까지\n<br>기존 투자하기 소요시간 case 1<br>\n<img alt=\"Pasted image 20250227114750.png\" src=\"사진-및-문서/pasted-image-20250227114750.png\" target=\"_self\"><br>\n22.4초<br>\n<img alt=\"Pasted image 20250227114826.png\" src=\"사진-및-문서/pasted-image-20250227114826.png\" target=\"_self\">\n<br>\n<br>기존 투자하기 소요시간 case 2<br>\n<img alt=\"Pasted image 20250227115004.png\" src=\"사진-및-문서/pasted-image-20250227115004.png\" target=\"_self\"><br>\n22.6초<br>\n<img alt=\"Pasted image 20250227115015.png\" src=\"사진-및-문서/pasted-image-20250227115015.png\" target=\"_self\">\n<br>\n<br>기존 투자하기 소요시간 case 3<br>\n<img alt=\"Pasted image 20250227115158.png\" src=\"사진-및-문서/pasted-image-20250227115158.png\" target=\"_self\"><br>\n22.5초<br>\n<img alt=\"Pasted image 20250227115148.png\" src=\"사진-및-문서/pasted-image-20250227115148.png\" target=\"_self\">\n<br>\n<br>변경 투자하기 소요시간 case 1<br>\n<img alt=\"Pasted image 20250227121009.png\" src=\"사진-및-문서/pasted-image-20250227121009.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n0.373초\n<br>\n<br>변경 투자하기 소요시간 case 2<br>\n<img alt=\"Pasted image 20250227121046.png\" src=\"사진-및-문서/pasted-image-20250227121046.png\" style=\"width: 500px; max-width: 100%;\" target=\"_self\"><br>\n0.362초\n<br>\n<br>변경 투자하기 소요시간 case 3<br>\n<img alt=\"Pasted image 20250227121942.png\" src=\"사진-및-문서/pasted-image-20250227121942.png\" style=\"width: 475px; max-width: 100%;\" target=\"_self\"><br>\n0.360초\n<br><img alt=\"Pasted image 20250227122010.png\" src=\"사진-및-문서/pasted-image-20250227122010.png\" target=\"_self\"><br><img alt=\"Pasted image 20250227122736.png\" src=\"사진-및-문서/pasted-image-20250227122736.png\" target=\"_self\"><br>\n<br>aceat.js?advid=1954816599 - 에이스트레이더<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://cdn.nhnace.com/libs/aceat.js?advid=195481\" target=\"_self\">https://cdn.nhnace.com/libs/aceat.js?advid=195481</a>\n<br>synchronizer.js - 네이버 관련 서버<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ssl.pstatic.net/melona/libs/gfp-nac-module/synchronizer.js\" target=\"_self\">https://ssl.pstatic.net/melona/libs/gfp-nac-module/synchronizer.js</a>\n<br>collect?en=page_view&amp;dr=localhost&amp;dl=http%... - 구글<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.google.com/ccm/collect\" target=\"_self\">https://www.google.com/ccm/collect</a>... - 구글\n<br>869613409/?random=1740626824235&amp;cv=11&amp;f...<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.google.com/pagead/1p\" target=\"_self\">https://www.google.com/pagead/1p</a>...\n<br>869613409/?random=1740626824235&amp;cv=11&amp;f... <br>869613409/?random=1110219531&amp;cv=11&amp;fst=... <br>\n내부망 사용으로 인한 요청 실패, 중요 데이터 없음.\n<br><img alt=\"output (14).png\" src=\"사진-및-문서/output-(14).png\" target=\"_self\"><br>Main 페이지: 기존 21~23초 → 0.201~0.297초로 약 99% 속도 향상<br>\nProductList 페이지: 기존 22.4~22.6초 → 0.360~0.373초로 약 98% 속도 향상","aliases":[],"tags":["#트러블슈팅","#스크립트","#로딩지연"],"headers":[{"heading":"⏰ Script 로딩 지연 트러블 슈팅","level":1,"id":"⏰ Script 로딩 지연 트러블 슈팅"},{"heading":"원인","level":1,"id":"원인"},{"heading":"- 특정 정적오브젝트의 로딩 지연","level":2,"id":"-_특정_정적오브젝트의_로딩_지연"},{"heading":"로딩 지연 오브젝트","level":1,"id":"로딩_지연_오브젝트"},{"heading":"수정","level":1,"id":"수정"},{"heading":"document.addEventListener('DOMContentLoaded', function())","level":4,"id":"document.addEventListener('DOMContentLoaded',_function())"},{"heading":"DOMContentLoaded 리스너를 사용하게 된다면,","level":2,"id":"DOMContentLoaded_리스너를_사용하게_된다면,"},{"heading":"Case","level":1,"id":"Case"},{"heading":"APP main 진입시","level":2,"id":"APP_**main**_진입시"},{"heading":"Local","level":3,"id":"Local"},{"heading":"prod","level":3,"id":"prod"},{"heading":"변경 후 case","level":1,"id":"변경_후_case"},{"heading":"APP 투자하기 진입시","level":2,"id":"APP_**투자하기**_진입시"},{"heading":"변경 후","level":1,"id":"변경_후"},{"heading":"main.html 템플릿이 완료됨과 동시에 출력이 가눙하다","level":4,"id":"main.html_템플릿이_완료됨과_동시에_출력이_가눙하다"},{"heading":"스크립트 데이터 로드 실패 검증","level":1,"id":"스크립트_데이터_로드_실패_검증"},{"heading":"👵기존 로직 로드","level":2,"id":"👵기존_로직_로드"},{"heading":"변경 후 로직 로드","level":2,"id":"변경_후_로직_로드"},{"heading":"❌ 실패한 요청 목록","level":2,"id":"❌_**실패한_요청_목록**"},{"heading":"성능 요약 📊","level":1,"id":"성능_요약_📊"},{"heading":"✅ 성능 데이터 (단위: 초)","level":2,"id":"✅_성능_데이터_(단위_초)"}],"backlinks":[],"links":["?query=tag:%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85","?query=tag:%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8","?query=tag:%EB%A1%9C%EB%94%A9%EC%A7%80%EC%97%B0","https://cdn.nhnace.com/libs/aceat.js?advid=195481","https://ssl.pstatic.net/melona/libs/gfp-nac-module/synchronizer.js","https://www.google.com/ccm/collect","https://www.google.com/pagead/1p","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#⏰ Script 로딩 지연 트러블 슈팅","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#원인","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#-_특정_정적오브젝트의_로딩_지연","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#로딩_지연_오브젝트","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#수정","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#document.addEventListener('DOMContentLoaded',_function())","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#DOMContentLoaded_리스너를_사용하게_된다면,","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#Case","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#APP_**main**_진입시","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#Local","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#prod","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#변경_후_case","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#APP_**투자하기**_진입시","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#변경_후","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#main.html_템플릿이_완료됨과_동시에_출력이_가눙하다","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#스크립트_데이터_로드_실패_검증","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#👵기존_로직_로드","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#변경_후_로직_로드","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#❌_**실패한_요청_목록**","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#성능_요약_📊","issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html#✅_성능_데이터_(단위_초)"],"author":"","coverImageURL":"","fullURL":"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html","pathToRoot":"..","createdTime":1740732986345,"modifiedTime":1740733476629,"sourceSize":4234,"sourcePath":"Issue_TroubleShooting/⏰ Script 로딩 지연 트러블 슈팅.md","exportPath":"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20241105110415.png","사진-및-문서/pasted-image-20250227140437.png","사진-및-문서/pasted-image-20250227140620.png","사진-및-문서/pasted-image-20241105110637.png","사진-및-문서/pasted-image-20241105110713.png","사진-및-문서/pasted-image-20241107115602.png","사진-및-문서/pasted-image-20241107115830.png","사진-및-문서/pasted-image-20241107121044.png","사진-및-문서/pasted-image-20241107121202.png","사진-및-문서/pasted-image-20241107121939.png","사진-및-문서/pasted-image-20250227114750.png","사진-및-문서/pasted-image-20250227114826.png","사진-및-문서/pasted-image-20250227115004.png","사진-및-문서/pasted-image-20250227115015.png","사진-및-문서/pasted-image-20250227115158.png","사진-및-문서/pasted-image-20250227115148.png","사진-및-문서/pasted-image-20250227121009.png","사진-및-문서/pasted-image-20250227121046.png","사진-및-문서/pasted-image-20250227121942.png","사진-및-문서/pasted-image-20250227122010.png","사진-및-문서/pasted-image-20250227122736.png","사진-및-문서/output-(14).png"]},"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html":{"title":"⚔ 도대체 어디서 StckOverflow가..","icon":"","description":"<br><img alt=\"Pasted image 20250228143143.png\" src=\"사진-및-문서/pasted-image-20250228143143.png\" target=\"_self\">","aliases":[],"tags":[],"headers":[{"heading":"⚔ 도대체 어디서 StckOverflow가..","level":1,"id":"⚔ 도대체 어디서 StckOverflow가.."}],"backlinks":[],"links":["issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html#⚔ 도대체 어디서 StckOverflow가.."],"author":"","coverImageURL":"","fullURL":"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html","pathToRoot":"..","createdTime":1740733661950,"modifiedTime":1740734105217,"sourceSize":36,"sourcePath":"Issue_TroubleShooting/⚔ 도대체 어디서 StckOverflow가...md","exportPath":"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250228143143.png"]},"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html":{"title":"📓 EntityManager와 Transaction 그리고 ConnectionPool","icon":"","description":"<a class=\"tag\" href=\"?query=tag:트러블슈팅\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#트러블슈팅</a> <a class=\"tag\" href=\"?query=tag:EntityManager\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#EntityManager</a> <a class=\"tag\" href=\"?query=tag:Transaction\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Transaction</a> <a class=\"tag\" href=\"?query=tag:트렌젝션\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#트렌젝션</a> <br> <a href=\".?query=tag:트러블슈팅\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#트러블슈팅\">#트러블슈팅</a> <a href=\".?query=tag:EntityManager\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#EntityManager\">#EntityManager</a> <a href=\".?query=tag:Transaction\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Transaction\">#Transaction</a> <a href=\".?query=tag:트렌젝션\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#트렌젝션\">#트렌젝션</a><br>청크사이즈가 다름에도 처리속도가 똑같은 이유?<br>grid-size:12 / chunk-size:30\n-\n3분 22.856초\n3분 23.096초 grid-size:12 / chunk-size:20\n-\n3분 23.546초\n3분 23.784초 grid-size:12 / chunk-size:10\n-\n3분 24.243초\n3분 22.389초\n3분 24.667초\n3분 24.789초 grid-size:12 / chunk-size:5\n-\n3분 24.953초\n3분 24.353초\n<br>\n<br>트렌젝션 분리가 되어있지 않았기 떄문에 청크사이즈를 아무리 잘게 쪼개도 시간이 같았던 것이다.\n<br>그럼 트렌젝션이 분리되지 않은 이유는?\n<br>dtoList.stream().parallel() .forEach(dto -&gt; {});\n<br>parallel문으로 내부 병렬처리로직을 구현했기 때문에, chunk의 트렌젝션에서 벗어나,<br>\n매 insert문 마다 커밋을 하였던 것이다.<br>반복 TEST 중.. 커넥션풀 Time Out 문제??<br>SHOW VARIABLES LIKE 'max_connections'; //최대 개수<br>\nSHOW STATUS LIKE 'Threads_connected'; //사용중인 개수<br><img alt=\"Pasted image 20241213102128.png\" src=\"사진-및-문서/pasted-image-20241213102128.png\" target=\"_self\"><br>\n<br>배치를 완료한 이후에도 스레드 풀(히카리 풀)을 반환하지 않는지 확인\n<br><img alt=\"Pasted image 20241213102229.png\" src=\"사진-및-문서/pasted-image-20241213102229.png\" target=\"_self\"><br>\n<br>Step이 마무리될때, 적어도 Job이 마무리 될때 entityManager를 클로즈 시키는것이 자명한데, 어째서 커넥션풀이 해제되지 않는가??\n<br><img alt=\"Pasted image 20241213143101.png\" src=\"사진-및-문서/pasted-image-20241213143101.png\" target=\"_self\"><br><img alt=\"Pasted image 20241213143217.png\" src=\"사진-및-문서/pasted-image-20241213143217.png\" target=\"_self\"><br><img alt=\"Pasted image 20241213103503.png\" src=\"사진-및-문서/pasted-image-20241213103503.png\" target=\"_self\">","aliases":[],"tags":["#트러블슈팅","#EntityManager","#Transaction","#트렌젝션"],"headers":[{"heading":"📓 EntityManager와 Transaction 그리고 ConnectionPool","level":1,"id":"📓 EntityManager와 Transaction 그리고 ConnectionPool"},{"heading":"트러블 슈팅","level":1,"id":"트러블_슈팅"},{"heading":"예상 - 트렌젝션이 분리가 안됬나?","level":3,"id":"예상_-_트렌젝션이_분리가_안됬나?"},{"heading":"원인이 무엇일까?","level":3,"id":"원인이_무엇일까?"},{"heading":"트렌젝션 관리시 병렬처리 로직의 사용에 주의할것.","level":2,"id":"트렌젝션_관리시_병렬처리_로직의_사용에_주의할것."},{"heading":"DB 커넥션 풀 개수 확인","level":3,"id":"DB_커넥션_풀_개수_확인"},{"heading":"처음 몇 번간은 정상실행 되지만, 반복 테스트 중 스레드 풀 점유 대기 타임아웃이 발생했다.","level":2,"id":"처음_몇_번간은_정상실행_되지만,_반복_테스트_중_스레드_풀_점유_대기_타임아웃이_발생했다."},{"heading":"원인은 무엇인가??","level":3,"id":"원인은_무엇인가??"},{"heading":"배치를 반복할 수록 커넥션 엑티브된 커넥션 풀 개수가 점점 늘어나는 모습","level":3,"id":"배치를_반복할_수록_커넥션_엑티브된_==커넥션_풀_개수가_점점_늘어나는==_모습"},{"heading":"원인?","level":2,"id":"원인?"},{"heading":"앤티티 매니저가 클로즈 되었음에도 커넥션풀을 물고있는 모습.","level":3,"id":"앤티티_매니저가_클로즈_되었음에도_커넥션풀을_물고있는_모습."},{"heading":"* 엔티티 매니저는 클로즈 될 때, 트렌젝션이 살아있다면 그 트렌젝션이 종료될때까지 기다린다**","level":2,"id":"***_**엔티티_매니저는_클로즈_될_때,_트렌젝션이_살아있다면_그_트렌젝션이_종료될때까지_기다린다**"},{"heading":"수정 후","level":2,"id":"수정_후"},{"heading":"정상적으로 커넥션 풀이 점유 해제된 모습","level":3,"id":"정상적으로_커넥션_풀이_점유_해제된_모습"}],"backlinks":[],"links":["?query=tag:%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85","?query=tag:EntityManager","?query=tag:Transaction","?query=tag:%ED%8A%B8%EB%A0%8C%EC%A0%9D%EC%85%98","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#📓 EntityManager와 Transaction 그리고 ConnectionPool","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#트러블_슈팅","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#예상_-_트렌젝션이_분리가_안됬나?","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#원인이_무엇일까?","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#트렌젝션_관리시_병렬처리_로직의_사용에_주의할것.","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#DB_커넥션_풀_개수_확인","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#처음_몇_번간은_정상실행_되지만,_반복_테스트_중_스레드_풀_점유_대기_타임아웃이_발생했다.","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#원인은_무엇인가??","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#배치를_반복할_수록_커넥션_엑티브된_==커넥션_풀_개수가_점점_늘어나는==_모습","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#원인?","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#앤티티_매니저가_클로즈_되었음에도_커넥션풀을_물고있는_모습.","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#***_**엔티티_매니저는_클로즈_될_때,_트렌젝션이_살아있다면_그_트렌젝션이_종료될때까지_기다린다**","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#수정_후","issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html#정상적으로_커넥션_풀이_점유_해제된_모습"],"author":"","coverImageURL":"","fullURL":"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html","pathToRoot":"..","createdTime":1740733171557,"modifiedTime":1740734141171,"sourceSize":2346,"sourcePath":"Issue_TroubleShooting/📓 EntityManager와 Transaction 그리고 ConnectionPool.md","exportPath":"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20241213102128.png","사진-및-문서/pasted-image-20241213102229.png","사진-및-문서/pasted-image-20241213143101.png","사진-및-문서/pasted-image-20241213143217.png","사진-및-문서/pasted-image-20241213103503.png"]},"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html":{"title":"Lock ( 데이터베이스 락 ) 이란?","icon":"","description":"<br>왜 락이 풀리지?\nlock으로 묶여있는 로직 안에 너무 많은 동작이 몰려있다.<br>\n-&gt; 그때, 4초가 넘어 버리게 된다면, 락을 놓아버리고 동시성이 깨질 수 있는 가능성이 있다.\n어쩨서?? <br>A, B에 대해 단일 투자자가 투자를 했을 때,<br>\nA상품에 대한 투자를 완료처리하여 예치금 차감이 되지 않은 상태에서 락이 풀려버린다면?<br>\nB상품에 대한 투자도 정상처리가 되어버린다. <br><br><br>세션2에서 동시에 같은 데이터를 수정하게 되면 여러가지 문제가 발생한다.<br>\n이런문제를 방지하기 위해, 세션이 트렌젝션을 시작하고 데이터를 수정하는 동안에 커밋이나 롤백 전까지<br>\n다른세션에서 해당 데이터를 수정할 수 없게 막아야 한다. 이런 문제를 해결하기 위해 DB에서는<br>\nLOCK 락 이라는 개념을 제공한다.<br>\n<br>락은 언제 사용하는가? : 트렌젝션 종료 시점까지 해당 데이터를 다른 곳에서 변경하지 못하도록 강제로 막아야 할 때 사용한다.\n<br>일반적인 조회는 락을 사용하지 않는다.\n<br>락 타임아웃(다른 세션이 데이터를 점유하고 있을때 대기시간이 초과된 경우)에는 익셉션이 발생하게 된다.\n<br><br>동시성 제어(Concurrency Control)란,&nbsp;여러 사용자나 프로세스가 데이터를 공유할 때 발생할 수 있는 문제를 해결하기 위해, 데이터베이스 시스템이 트랜잭션을 순서대로 실행하는 것이 아니라, 트랜잭션이 동시에 실행될 수 있도록 허용하면서도 데이터의 일관성과 무결성을 유지할 수 있도록 하는 기술이며, 데이터베이스 시스템에서 매우 중요한 개념 중 하나이다.<br><br>\n<br>여러 사용자가 DB에 접근하더라도&nbsp;데이터의 일관성을 보장하고 데이터의 무결성을 유지\n<br>위를 만족하며 데이터베이스 시스템의 성능과 효율성을 유지하는 것\n<br>\n<br>분실된 갱신(Lost Update) <br>두개의 트랜잭션이 같은 데이터를 갱신하는 작업을 진행하게 되면서 하나의 작업이 진행되지 않는 경우 <br>모순성(Inconsistency) <br>두개의 트랜잭션이 같은 데이터를 동시에 갱신하게되어 사용자가 원하는 결과와 일치하지 않은 상태가 되는 경우 <br>연쇄복귀(Cascading Rollback) <br>두개의 트랜잭션이 같은 데이터를 갱신하는 작업을 진행하는 과정에서 하나의 트랜잭션이 실패하면 원자성에 의해 두 트랜잭션 모두 복귀하는 경우 <br>비완료 의존성(Uncommitted Dependency) <br>한개의 트랜잭션이 실패하였을때, 이 트랜재션이 회복하기전에 다른 트랜잭션이 실패한 수행 결과를 참조하는 경우 <br><br><br>\n<br>Locking은 공유 자원에 대한 동시 액세스를 제어하는 전통적인 방법이다.\n<br>단일 스레드 또는 단일 프로세스에서만 동작하며, 한 번에 하나의 스레드만 공유 자원에 액세스할 수 있다.\n<br>신뢰성과 안전성이 높으며, 어떤 수준의 locking을 적용하느냐에 따라 교착 상태나 경쟁 조건과 같은 문제를 방지할 수 있다.\n<br>하지만 동시성 처리 속도가 저하될 수 있고, 대기 시간이 발생할 수 있다.\n<br>기본적으로 lock 연산과 unlock 연산을 사용한다.\n<br><br>\n<br>\n공유 잠금 (shared lock/s-lock): 데이터를 읽을 때 사용하는 락 <br>공유잠금을 설정한 트랜잭션은 데이터 항목에 대해&nbsp;읽기 연산(read)만 가능하다. <br>T1에서 x에 대해 S-lock을 설정했다면, T1은 read(x) 연산만 가능하다. <br>하나의 데이터 항목에 대해&nbsp;여러 개의 공유잠금이(S-lock) 가능하다. <br>T1에서 x에 대해 S-lock을 설정한 경우, 동시에 T2에서도 x에 대해 S-lock을 설정할 수 있다. <br>다른 트랜잭션도 읽기 연산(read) 만을 실행할 수 있다. <br>T1에서 x에 대해 S-lock을 설정했다면, T2에서도 T1이 S-lock(x)을 실행하는 동안 read(x) 연산만 가능하다. <br>\n배타 잠금 (exclusive lock/x-lock): 데이터를 변경할 때 사용하는 락 <br>배타잠금을 설정한 트랜잭션은 데이터 항목에 대해서&nbsp;읽기 연산(read)과 쓰기 연산(write) 모두 가능하다. <br>T1에서 x에 대해 S-lock을 설정했다면, T1은 read(x) 연산과 write(x) 연산 모두 가능하다. <br>하나의 데이터 항목에 대해서는&nbsp;하나의 배타잠금(X-lock)만 가능하다.\n<br>동시에 여러 개의 배타잠금은 불가능하다. <br>T1에서 x에 대해 X-lock을 설정했다면, T1에서 unlock(x)를 하기 전까지 T2에서 x에 대해 X-lock을 설정할 수 없다. <br>다른 트랜잭션은 읽기 연산(read)와 쓰기 연산(write) 모두 불가능하다. <br>T1에서 x에 대해 X-lock을 설정했다면, T2에서는 T1에서 unlock(x)를 하기 전까지 read(x), write(x) 연산이 모두 불가능하다. <br>\n추가) 교착상태 (deadlock) <br>모든 transaction이 대기 상태에 들어가 아무런 진행이 일어나지 않는 상태를 교착상태라고 한다. 교착상태에 빠지면 외부에서 강제로 트랜잭션을 중단하거나 잠금을 해제하지 않는 이상 무한정 대기 상태로 남게 된다. <br><br><br>\n<br>\n낙관적 락 (optimistic lock) <br>충돌이 발생할 가능성이 낮은 경우 사용되는 동시성 제어 기법이다.\n<br>충돌이 발생하면 재시도 또는 병합을 통해 충돌을 해결한다.\n<br>실제로 lock을 사용하지 않고&nbsp;version을 이용함으로서 정합성을 맞추는 방법이다. 데이터를 읽을 때 lock을 사용하지 않고, 업데이트 시&nbsp;내가 읽은 version이 맞는지 충돌 여부를 확인하여 처리한다.\n<br>즉, 자원에 lock을 직접 걸어서 선점하지 않고, 동시성 문제가 실제로 발생하면 그때가서 처리하는 방식이다. <br>\n비관적 락 (pessimistic lock) <br>충돌이 발생할 가능성이 높은 경우 사용되는 동시성 제어 기법이다.\n<br>데이터를 읽거나 수정하기 전에 lock을 획득하여 다른 사용자의 액세스를 차단하고, lock을 가진 스레드만 접근하도록 제어한다.\n<br>데이터에 대한 배타적인 액세스 권한을 보장하여 충돌을 방지한다.\n<br>실제로 데이터에 lock을 걸어서 정합성을 맞추는 방법으로, 자원 요청에 따른 동시성 문제가 발생할 것이라고 예상하고 lock을 걸어버리는 방법이다.\n<br>즉, 트랜젝션이 시작할 때 s-lock이나 x-lock을 실제로 걸고 시작한다. <br>\n낙관적 락 vs. 비관적 락<br>\n<img alt=\"Pasted image 20250228150552.png\" src=\"사진-및-문서/pasted-image-20250228150552.png\" target=\"_self\"> <br>\n분산락 (distributed lock) <br>여러 컴퓨터 또는 프로세스 간에 공유된 자원에 대한 동시 액세스를 제어하기 위해 사용된다.\n<br>분산 시스템에서 동시성 문제를 해결하기 위해 사용되며,&nbsp;분산된 서버 또는 클러스터 간의 상호작용이 필요하다.\n<br>주로&nbsp;데이터베이스나 메시지 큐 등의 분산 시스템에서 사용된다.\n<br>대표적인 분산락 기법으로는 ZooKeeper, Redis 등이 있다.\n<br>Redis는 RedLock이라는 알고리즘을 제안하며 3가지 특성을 보장해야한다고 한다. <br>오직 한 순간에 하나의 작업자만이 락(lock) 을 걸 수 있다.\n<br>락 이후, 어떠한 문제로 인해 락을 풀지 못하고, 종료된 경우라도 다른 작업자가 락을 획득할 수 있어야합니다.\n<br>Redis 노드가 작동하는한, 모든 작업자는 락을 걸고 해체할 수 있어야합니다. <br>분산 락을 구현하기 위해 lock에 대한 정보를 Redis에 저장하고 있어야한다. 그리고 분산환경에서 여러대의 서버들은 공통된 Redis를 바라보며, 자신이 공유 자원에 접근할 수 있는지 확인한다. <br>\n스핀락 (spin lock) <br>자원에 대한 접근이 필요할 때 무한루프를 돌면서 반복적으로 확인하며, 다른 스레드가 lock을 해제할 때까지 대기한다.\n<br>경쟁 상태 (2개 이상의 프로세스가 공유 자원을 동시에 읽거나 쓰는 상황)가 짧고 자원 점유 시간이 길지 않은 경우에 효과적이다.\n<br>주로 멀티코어 시스템에서 사용되며, 락 획득을 위해 CPU를 계속 사용하므로 서버에 많은 부하를 주어 주의해야 한다.\n<br> <br>","aliases":[],"tags":[],"headers":[{"heading":"Lock ( 데이터베이스 락 ) 이란?","level":1,"id":"Lock ( 데이터베이스 락 ) 이란?"},{"heading":"세션1이 트렌젝션을 시작하고 데이터를 수정하는 동안 아직 커밋을 수행하지 않았는데,","level":2,"id":"세션1이_트렌젝션을_시작하고_데이터를_수정하는_동안_아직_커밋을_수행하지_않았는데,"},{"heading":"1. 동시성 제어 정의","level":3,"id":"1._동시성_제어_정의"},{"heading":"2. 동시성 제어 목적","level":3,"id":"2._동시성_제어_목적"},{"heading":"3. 동시성 제어 방법","level":3,"id":"3._동시성_제어_방법"},{"heading":"Locking이란?","level":3,"id":"**Locking이란?**"},{"heading":"Locking의 종류","level":3,"id":"**Locking의_종류**"},{"heading":"Locking을 활용한 동시성 제어 기법","level":3,"id":"**Locking을_활용한_동시성_제어_기법**"}],"backlinks":[],"links":["issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#Lock ( 데이터베이스 락 ) 이란?","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#세션1이_트렌젝션을_시작하고_데이터를_수정하는_동안_아직_커밋을_수행하지_않았는데,","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#1._동시성_제어_정의","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#2._동시성_제어_목적","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#3._동시성_제어_방법","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#**Locking이란?**","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#**Locking의_종류**","issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html#**Locking을_활용한_동시성_제어_기법**"],"author":"","coverImageURL":"","fullURL":"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html","pathToRoot":"..","createdTime":1740733250038,"modifiedTime":1740734089313,"sourceSize":8987,"sourcePath":"Issue_TroubleShooting/🔐 Lock이란 무엇인가. 데이터 정합성을 위한 여정.md","exportPath":"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250228150552.png"]},"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html":{"title":"✏ Chunk_Partitioning Batch 구조 드로잉","icon":"","description":"<a class=\"tag\" href=\"?query=tag:excalidraw\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#excalidraw</a> <br> balancePartitionedJobbalanceInitializeStepbalancePartitionStepbalanceSendSnsStepbalanceResetSteppartitionerpartitionHandlerStepExecutionContextReaderprocesserwriterdtochuck sizeSlaveStep-no: 2SlaveStep-no: gridSize balanceQueueResponnse QueueProcessed ItemsProcessed Itemstotal DataProcessed ItemsProcessed ItemsworkingProcessed ItemsProcessed ItemsProcessed ItemsProcessed ItemsSlaveStep-no: 1gridSize - 1gridSize - 2partiton thread-no: 1partiton thread-no: 2partiton thread-no: gridSize totalRecords+ datagridSizeContorllerjobParameters(read only)jobParameters - gridSize - startDate - endDateJob Schedulerexcutedto List(chuck size)dto Listdto Listdto Listdto Listdto Listdto Listdto Listdto ListThe restdto ListfinishedfinishedworkingworkingdtotriggerJobExecutionContextgrid size","aliases":[],"tags":["excalidraw"],"headers":[],"backlinks":[],"links":[],"author":"","coverImageURL":"","fullURL":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","pathToRoot":"../..","createdTime":1739843285680,"modifiedTime":1739844018493,"sourceSize":57706,"sourcePath":"project/hello Batch/✏ Chunk_Partitioning Batch 구조 드로잉.md","exportPath":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","showInTree":true,"treeOrder":0,"attachments":[]},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html":{"title":"🏹 예치금 차액 비교 Spring Batch 리펙토링","icon":"","description":"<a class=\"tag\" href=\"?query=tag:프로젝트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#프로젝트</a> <a class=\"tag\" href=\"?query=tag:개발\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#개발</a> <a class=\"tag\" href=\"?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"?query=tag:Batch\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Batch</a> <a class=\"tag\" href=\"?query=tag:Partitioning\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Partitioning</a> <a class=\"tag\" href=\"?query=tag:Chunk\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Chunk</a> <br> <a href=\".?query=tag:프로젝트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#프로젝트\">#프로젝트</a> <a href=\".?query=tag:개발\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#개발\">#개발</a> <a href=\".?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\".?query=tag:Batch\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Batch\">#Batch</a> <a href=\".?query=tag:Partitioning\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Partitioning\">#Partitioning</a> <a href=\".?query=tag:Chunk\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Chunk\">#Chunk</a><br>기존 예치금 차액비교 Batch의 Tasklet방식의 배치의 단점을 보완하는 chunk 방식의 배치를 구현하고,<br>\n나아가 다른 기능의 Batch에도 효과적으로 빠르게 적용할 수 있는재사용성/유지보수성 높은 코드, 선례를 만들기 위함이다.<br>\n<br>Chunk, Partioning방식을 Job을 추가 개발 (기존 balanceJob 유지)\n<br>당분간 두 Job을 병행하면서 비교\n<br>추가한 Job 기능에 문제없다면 기존 balanceJob 삭제\n<br><img alt=\"회사 은행 서비스1111.png\" src=\"사진-및-문서/회사-은행-서비스1111.png\" target=\"_self\"><br>\n<img alt=\"Spring Batch Tasklet 예치금 잔액 비교 1.png\" src=\"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png\" target=\"_self\"><br>\n<img alt=\"Spring Batch Tasklet 예치금 잔액 비교 잘못된 차액발생 인식 타임라인.png\" src=\"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png\" target=\"_self\"><br>\n<br>평균 소요시간: 약 17.35분\n<br>최대 소요시간: 22분\n<br>최소 소요시간: 12분<br>\n<img alt=\"output (1).png\" src=\"사진-및-문서/output-(1).png\" target=\"_self\">\n<br>\n<br>처음 가져온 Point 배치 완료시 까지 계속 물고있다. -&gt; 한 트렌젝션의 범위가 넓다.\n<br>정보 <br>병목이 있진 않으나, 한 배치서비스의 트렌젝션에서 외부 api의 값 변동을 반영하지 못함. <br>\n<br>G5-Point 등은 처음 7시 시점에 묶여있다. 회원별로 실데이터를 건건이 api(신한)를 호출하여 비교한다. 때문에, 7시 이후에 수정된데이터를 실시간으로 반영하지 못한다.\n<br>\n<br>목적 : batch의 step 레벨에서의 스레드 분리 ( 병렬처리 )\n<br>\n<br>독립적인 ExecutionContext가 주어져 상태를 안전하게 관리할 수 있다.\n<br>\n<br>목적 : 각 step내의 트렌젝션 단위 분리\n<br>Reader / Processor / writer 가 역할을 분담\n<br>\n<br>\nPartition 생성: <br>Partition 1 : ID 1 ~ 25 / 대기열1 : ID 101 ~ 125 / 대기열2 : ID 201 ~ 225\n<br>Partition 2 : ID 26 ~ 50 / 대기열 : ID 126 ~ 150 / 대기열2 : ID 226 ~ 250\n<br>Partition 3 : ID 51 ~ 75 / 대기열 : ID 151 ~ 175 / 대기열2 : -\n<br>Partition 4 : ID 76 ~ 100 / 대기열 : ID 176 ~ 200 / 대기열2 : - <br>\n각 Partition에서 Chunk 처리: <br>Partition 1: <br>Chunk 1: ID 1 ~ 10 → 커밋\n<br>Chunk 2: ID 11 ~ 20 → 커밋\n<br>Chunk 3: ID 21 ~ 25 → 커밋 <br>Partition 2: <br>Chunk 1: ID 26 ~ 35 → 커밋\n<br>Chunk 2: ID 36 ~ 45 → 커밋\n<br>Chunk 3: ID 46 ~ 50 → 커밋 <br>나머지 Partition도 동일 방식으로 처리. <br>\n병렬 실행: <br>스레드 풀 크기 = 4이므로 4개의 Partition이 동시에 실행됩니다.\n<br>Partition 처리 순서는 스레드 풀에서 처리되는 순서에 따라 다를 수 있음. <br>\n트랜잭션 관리: <br>각 Partition은 독립적인 트랜잭션을 가짐.\n<br>각 Chunk가 커밋될 때마다 트랜잭션이 종료됨. <br>\n<br>\nPartition 생성: <br>Partition 1 : ID 1 ~ 25 / 대기열1 : ID 101 ~ 125 / 대기열2 : ID 201 ~ 225\n<br>Partition 2 : ID 26 ~ 50 / 대기열 : ID 126 ~ 150 / 대기열2 : ID 226 ~ 250\n<br>Partition 3 : ID 51 ~ 75 / 대기열 : ID 151 ~ 175 / 대기열2 : ID 251 ~ 275\n<br>Partition 4 : ID 76 ~ 100 / 대기열 : ID 176 ~ 200 / 대기열2 : ID 276 ~ 300\n<br>추가 스레드 풀 생성\n<br>Partition 5 : ID 300 ~ 325 / 대기열 : ID 326 ~ 350 / 대기열2 : ID 351 ~ 375\n<br>추가 스레드 풀 생성\n<br>Partition 6 : ID 376 ~ 400 / 대기열 : ID 401 ~ 425 / 대기열2 : ID 426 ~ 450 모든 대기열 소모 및 최대 스레드 풀 도달 =&gt; 작업 중단 및 오류 <br>-&gt; 이로볼때, 쿼리작업보다 api호출작업의 소요시간이 길어보임<br>범위 - 2017-11-07 ~ 2017-12-01\nstartDate=2017-11-07&amp;endDate=2017-12-01\n<br>## 컬럼 개수 - 292개 기존 병렬처리 : 1분 7초\n기존로직 : 6분 32초 t:스레드 개수 / c:각 스레드별 청크 파티션 수 ###### SimpleAsyncTaskExecutor vs ThreadPoolTaskExecutor SimpleAsyncTaskExecutor\ng4/c10 : 1분 41.586초\ng5/c10 : 1분 30.037초\ng5/c3 : 1분 28.997초\ng5/c1 : 1분 29.931초\ng8/c10 : 1분 36.019초\ng10/c1 : 1분 24.529초 - ThreadPoolTaskExecutor\nTh min/maxSize64, g64/c10 : 1분 42.848초\nTh min/maxSize32, g32/c10 : 1분 26.551초 Th min/maxSize16, g16/c10 : 1분 46.753초 / 1분 33.779초 / 2분 25.759초\n1분 11.668초 / 2분 5.773초 / 2분 39.553초 Th min/maxSize32, g8/c20 : 3분 25.743초 Th min/maxSize16, g4/c10 : 2분 29.207초 / 2분 8.004초\n<br>\n<br>Grid사이즈(파티셔닝 갯수) 만큼 스레드 풀 계속 생성\n<br>파티셔닝 갯수가 많아졌을 때, 스레드 생성/소멸에 드는 오버헤드 증가\n<br>\n<br>최소 스레드풀 개수 / 최대 스레드풀 개수 / 대기열 큐 크기 / 유휴 시간 모두 설정가능\n<br>파티셔닝 갯수가 많을 경우, 처리 성능에 맞는 스레드 풀에서 대기작업으로 처리하여 오버헤드 감소\n<br>\n<br>총 처리량 기준 1/n로 각 스레드에 할당시 충분히 감당한 양으로, 대기열을 사용할 필요가 없다.\n<br>\n<br>쿼리 호출 및 페이징 기법 직접 구현\n<br>\n<br>Native Query 형태로 호출하여 자동 페이징\n<br>\n<br>Spring Batch에서는 공식적으로 지원하지 않음\n<br>자동 페이징\n<br>Querydsl형태로 쿼리 호출 가능\n<br>\n<br>기존(헬로)의 Querydsl기반 JPAQuery를 그대로 사용 가능\n<br>자동 페이징\n<br>그 외 Querydsl의 장점 보유\n<br>\n<br>기존 PagingItemReader의 메서드를 오버라이딩 하여 사용하며,<br>\nJPQL이 수행되던 부분에 코드를 수정하였다.\n<br>@Bean @Scope(value = \"step\", proxyMode = ScopedProxyMode.TARGET_CLASS) public QuerydslPagingItemReader&lt;HfbatBankBalanceCheckDto&gt; balanceReader() { ExecutionContext jobContext = Objects.requireNonNull(StepSynchronizationManager.getContext()).getStepExecution().getJobExecution().getExecutionContext(); Date startDate = (Date) jobContext.get(START_DATE_KEY); Date endDate = (Date) jobContext.get(END_DATE_KEY); return new QuerydslPagingItemReader&lt;&gt;( entityManagerFactory, executionOrder, DEFAULT_CHUNK_SIZE, queryFactory -&gt; repository.newFindChangeBalanceMemberList( startDate, endDate )); }\n<br>\n<br>각 파티션 스레드 별 종료 시간이 크게 상이하다. 총 소요시간 기준 최대 약 20% 차이\n<br>적용 한다면, 각 스레드 별로 even하게 작업을 수행하여 총 소요시간을 줄일 수 있을것이라 판단 <br>JOB private static AtomicLong executionOrder = new AtomicLong(0); ... new QuerydslPagingItemReader&lt;&gt;( entityManagerFactory, executionOrder, DEFAULT_CHUNK_SIZE, queryFactory -&gt; repository.newFindChangeBalanceMemberList( startDate, endDate ));\n<br>job 레벨에서의 스레드 세이프한 전역 변수를 생성하였다.\n<br>그 후, 각 파티션 별 리더에 인자값으로 넘긴다.\n<br>long currentExecutionOrder = executionOrder.getAndIncrement(); long startIndex = (currentExecutionOrder) * getPageSize(); int totalRecords = stepContext.getInt(\"totalRecords\"); if (startIndex &gt;= totalRecords) { initResults(); // 빈 결과로 초기화 tx.commit(); return; } int chunkSizeToRead = Math.min(getPageSize(), (int) (totalRecords - startIndex)); // 남은 데이터 크기만큼 읽기 // QueryDSL Query 생성 JPQLQuery&lt;T&gt; query = createQuery() .offset(startIndex) .limit(chunkSizeToRead);\n<br>\n<br>먼저 한 청크단위의 작업을 끝낸 파티션은 그 다음 작업을 즉시 할당받게 된다.\n<br>즉, 총 처리시간 기준 가장 빨리끝난 파티션과 가장 늦게 끝난 파티션의 실행 시간 차이는 최대 한 청크사이즈를 처리하는 시간보다 크지 않게 된다.\n<br>1차 비교 이후 차액이 발생한 녀석들의 List 를 한번 더 검증한 후, =&gt; 추후 변경 됨<br>\n검증된 녀석들을 <br>List&lt;BalanceCheckResultDto&gt; realDiffList= new ArrayList&lt;&gt;();\n<br>최종적인 차액 리스트에 넣는다.<br>writer는 각 프로세서의 리턴으로 받은 녀석들을 하나의 DTO List로 합쳐 메세징 처리를 하게 된다.<br>\n<br>유지보수성이 좋다.\n<br>환경셋팅에 리소스가 많이든다. <br>\n<br>구현 레벨이 가장 쉽다\n<br>DTO(데이터)가 많아질 경우, 큰 리소스를 차지한다.\n<br>\n<br>방법 2.보다는 리소스가 적지만, 문자열 처리 시간이 추가로 소모된다.\n<br>\n<br>높은 쓰기 성능을 갖고있다.\n<br>동시성 문제 없이 다중 스레드에서 사용 가능하다.\n<br>인덱스로 접근이 불가능하다.\n<br>QueueManager클래스를 생성하며 공통으로 사용 가능하도록 하였고,<br>@Slf4j public class QueueManager&lt;T&gt; { protected final ConcurrentLinkedQueue&lt;T&gt; sharedQueue = new ConcurrentLinkedQueue&lt;&gt;(); // 데이터 추가 public void addItemToSharedQueue(T item) { if (item != null) { sharedQueue.add(item); } }\n<br>이를 상속받아 특정 오브젝트를 넘길 수 있도록 하였다.<br>public class BalanceQueue extends QueueManager&lt;BalanceCheckResultDto&gt;{ public List&lt;BalanceCheckResultDto&gt; getDtoFromQueue() { return super.getItemsFromQueue(); } }\n<br>이게 무슨소리인지? <br>보통의 Batch 서비스라면 I/O 작업에 부하가 걸려있겠지만, 현재 예치금 차액 배치는 processor 즉, 예치금 비교 연산에서 큰 리소스를 소모하고있다.\n<br>이에 해당하는 시간 소모를 줄이기 위해 processor(서비스로직) 을 병렬처리 함으로 최종 처리시간 단축을 꾀할 수 있을지에 대한 고민이다.\n<br>이후 설명하겠지만, 내부 병렬처리 로직은 청크의 트렌젝션을 무너뜨릴 가능성이 크므로 지양해야함. <br><img alt=\"Pasted image 20241206113120.png\" src=\"사진-및-문서/pasted-image-20241206113120.png\" target=\"_self\"><br>소요시간 : 1분 9초\n<br>-&gt; 기존 limit절을 이용한 로직보다 속도가 더빠르며,<br>\nJpaPagingReader를 적용한다면 중복 select횟수를 줄여 더 빨라질 것으로 예상된다.<br>결론 : 둘 중 하나<br>#### 292 컬럼\n## Processor 삭제(병렬처리)로직\n#### grid-size:6 / chunk-size:20\n54679 ms\n54416 ms\n## Processor 순차처리(writer만 병렬처리) 로직 #### grid-size:6 / chunk-size:20\n60440 ms\n62271 ms\n#### grid-size:10 / chunk-size:20\n58129 ms\n56723 ms\n#### grid-size:16 / chunk-size:20\n58595 ms\n56314 ms #### grid-size:32 / chunk-size:20\n- SQLTransientConnectionException\n- 스레드풀 점유갯수 초과\n<br>하지만, 이후 청크 방식 Batch의 확장성과 유지보수성을 고려하여 리더,프로세서,라이터 방식으로 구현하기로 정했다.<br>청크사이즈가 다름에도 처리속도가 똑같은 이유?<br>grid-size:12 / chunk-size:30\n-\n3분 22.856초\n3분 23.096초 grid-size:12 / chunk-size:20\n-\n3분 23.546초\n3분 23.784초 grid-size:12 / chunk-size:10\n-\n3분 24.243초\n3분 22.389초\n3분 24.667초\n3분 24.789초 grid-size:12 / chunk-size:5\n-\n3분 24.953초\n3분 24.353초\n<br>\n<br>트렌젝션 분리가 되어있지 않았기 떄문에 청크사이즈를 아무리 잘게 쪼개도 시간이 같았던 것이다.\n<br>그럼 트렌젝션이 분리되지 않은 이유는?\n<br>dtoList.stream().parallel() .forEach(dto -&gt; {});\n<br>parallel문으로 내부 병렬처리로직을 구현했기 때문에, chunk의 트렌젝션에서 벗어나,<br>\n매 insert문 마다 커밋을 하였던 것이다.<br>반복 TEST 중.. 커넥션풀 Time Out 문제??<br>SHOW VARIABLES LIKE 'max_connections'; //최대 개수<br>\nSHOW STATUS LIKE 'Threads_connected'; //사용중인 개수<br><img alt=\"Pasted image 20241213102128.png\" src=\"사진-및-문서/pasted-image-20241213102128.png\" target=\"_self\"><br>\n<br>배치를 완료한 이후에도 스레드 풀(히카리 풀)을 반환하지 않는지 확인\n<br><img alt=\"Pasted image 20241213102229.png\" src=\"사진-및-문서/pasted-image-20241213102229.png\" target=\"_self\"><br>\n<br>Step이 마무리될때, 적어도 Job이 마무리 될때 entityManager를 클로즈 시키는것이 자명한데, 어째서 커넥션풀이 해제되지 않는가??\n<br><img alt=\"Pasted image 20241213143101.png\" src=\"사진-및-문서/pasted-image-20241213143101.png\" target=\"_self\"><br><img alt=\"Pasted image 20241213143217.png\" src=\"사진-및-문서/pasted-image-20241213143217.png\" target=\"_self\"><br><img alt=\"Pasted image 20241213103503.png\" src=\"사진-및-문서/pasted-image-20241213103503.png\" target=\"_self\"><br><img alt=\"Pasted image 20241217150339.png\" src=\"사진-및-문서/pasted-image-20241217150339.png\" target=\"_self\"><br>리스너에 너무 많은 역할이 부여된 모습\n<br><img alt=\"Pasted image 20241219145746.png\" src=\"사진-및-문서/pasted-image-20241219145746.png\" target=\"_self\"><br>\n<br>StepExecution-Level ExecutionContext <br>\n각 Step에 고유한 ExecutionContext가 생성됩니다. <br>\nStep 내의 Reader, Processor, Writer 등에서 공유됩니다. <br>\n다른 Step과는 공유되지 않습니다. <br>\nbalanceWorkerStep 내에서는 Reader, Processor, Writer가 동일한 ExecutionContext를 공유합니다. <br>\nbalancePartitionStep과 balanceWorkerStep의 ExecutionContext는 서로 독립적입니다. <br>JobExecution-Level ExecutionContext <br>Job 전체에서 공유되며, 모든 Step이 동일한 ExecutionContext에 접근할 수 있습니다.\n<br>JobExecutionContext는 Step 간 데이터 전달이 필요할 때 유용합니다. <br>JobExecutionListener 객체 생성<br>@Slf4j public class JobTimerExecutionListener implements JobExecutionListener { private final String jobName; private long startTime = System.currentTimeMillis(); public JobTimerExecutionListener(String jobName) { this.jobName = jobName; } @Override public void beforeJob(JobExecution var1) { startTime = System.currentTimeMillis(); } @Override public void afterJob(JobExecution var1) { long endTime = System.currentTimeMillis(); long elapsedTime = endTime - startTime; long minutes = (elapsedTime / 1000) / 60; // 밀리초를 분으로 변환 double seconds = (elapsedTime / 1000.0) % 60; // 남은 밀리초를 초로 변환 (소수점 포함) log.info(\"{}-completed: {} ms | {} minutes {} seconds\", jobName, elapsedTime, minutes, seconds); } }\n<br><img alt=\"output (9) 1.png\" src=\"사진-및-문서/output-(9)-1.png\" target=\"_self\"><br><img alt=\"output (10).png\" src=\"사진-및-문서/output-(10).png\" target=\"_self\"><br><img alt=\"do-messenger_screenshot_2024-12-23_14_40_21.png\" src=\"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png\" target=\"_self\"><br><img alt=\"Pasted image 20241224093159.png\" src=\"사진-및-문서/pasted-image-20241224093159.png\" target=\"_self\"><br>\n<img alt=\"Pasted image 20241224093207.png\" src=\"사진-및-문서/pasted-image-20241224093207.png\" target=\"_self\"><br>\n<img alt=\"Pasted image 20241224093225.png\" src=\"사진-및-문서/pasted-image-20241224093225.png\" target=\"_self\"><br>🙇‍♂<a data-href=\"🏹 예치금 차액 비교 Spring Batch 리펙토링 부록\" href=\"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">🏹 예치금 차액 비교 Spring Batch 리펙토링 부록</a>","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#Batch","#Partitioning","#Chunk"],"headers":[{"heading":"🏹 예치금 차액 비교 Spring Batch 리펙토링","level":1,"id":"🏹 예치금 차액 비교 Spring Batch 리펙토링"},{"heading":"작업 목적","level":1,"id":"작업_목적"},{"heading":"작업 계획","level":1,"id":"작업_계획"},{"heading":"- 플로우 차트","level":2,"id":"+_**플로우_차트**"},{"heading":"예치금차액비교 Batch Job 기존 소요시간 그래프","level":1,"id":"예치금차액비교_Batch_Job_기존_소요시간_그래프"},{"heading":"2024-10-28 ~ 2024-11-19 (주말제외)","level":2,"id":"2024-10-28_~_2024-11-19_(주말제외)"},{"heading":"문제점 분석","level":1,"id":"문제점_분석"},{"heading":"1. 하나의 트렌젝션으로 동작하며, 실패시 처음부터 재시도 해야함","level":2,"id":"1._하나의_트렌젝션으로_동작하며,_실패시_처음부터_재시도_해야함"},{"heading":"2. 한 트렌젝션내에서 긴 시간을 동작하여, 배치중 일어나는 insert/update(예치금 입금 출금) 건을 감지하지 못함","level":2,"id":"2._한_트렌젝션내에서_긴_시간을_동작하여,_배치중_일어나는_insert/update(예치금_입금_출금)_건을_감지하지_못함"},{"heading":"배치 동작 로직","level":1,"id":"배치_동작_로직"},{"heading":"7:00 -> 회원 개개인 별 비교. 문자는 9시 30분에 예약문자로 오지만, 실제 로직은 7시에 돈다","level":3,"id":"700_->_회원_개개인_별_비교._문자는_9시_30분에_예약문자로_오지만,_실제_로직은_7시에_돈다"},{"heading":"신한API가 main데이터.","level":4,"id":"신한API가_main데이터."},{"heading":"New Batch의 주요 기술 및 목적","level":1,"id":"New_Batch의_주요_기술_및_목적"},{"heading":"Partitioning","level":2,"id":"Partitioning"},{"heading":"프로세스(서비스 로직)단계에서 병렬처리를 하는 것과 어떠한차이가 있는가? ex) parallelStream, CompletableFuture","level":5,"id":"**_프로세스(서비스_로직)단계에서_병렬처리를_하는_것과_어떠한차이가_있는가?_ex)_parallelStream,_CompletableFuture_**"},{"heading":"즉, 파티션 별로 독립적인 SlaveStep을 생성하기 떄문에 Spring Batch의 관리를 받을 수 있다.","level":3,"id":"즉,_파티션_별로_독립적인_SlaveStep을_생성하기_떄문에_Spring_Batch의_관리를_받을_수_있다."},{"heading":"Chunk","level":2,"id":"Chunk"},{"heading":"파티셔닝 흐름","level":1,"id":"파티셔닝_흐름"},{"heading":"ThreadPoolSize : 동시에 실행시킬 스테리드의 개수","level":3,"id":"ThreadPoolSize__동시에_실행시킬_스테리드의_개수"},{"heading":"gridSize : 실제로 제단할 사이즈(작업단위)","level":3,"id":"gridSize__실제로_제단할_사이즈(작업단위)"},{"heading":"QueueCapacity : 대기열 크기","level":3,"id":"QueueCapacity__대기열_크기"},{"heading":"MaxPoolSize : 최대 추가 스레드 풀 개수","level":3,"id":"MaxPoolSize__최대_추가_스레드_풀_개수"},{"heading":"ThreadPoolSize : 4 / gridSize : 25","level":5,"id":"ThreadPoolSize__4__/__gridSize__25"},{"heading":"MaxPoolSize : 4 / QueueCapacity : 2 (대기열크기를 벗어나면 Exception 발생)","level":5,"id":"MaxPoolSize__4_/_QueueCapacity__2_(대기열크기를_벗어나면_Exception_발생)"},{"heading":"0. 250개의 데이터","level":4,"id":"0._250개의_데이터"},{"heading":"데이터가 늘어났을때?","level":3,"id":"데이터가_늘어났을때?"},{"heading":"ThreadPoolSize : 4 / gridSize : 25","level":5,"id":"ThreadPoolSize__4__/__gridSize__25"},{"heading":"MaxPoolSize : 6 / QueueCapacity : 2 (대기열크기를 벗어나면 Exception 발생)","level":5,"id":"MaxPoolSize__6_/_QueueCapacity__2_(대기열크기를_벗어나면_Exception_발생)"},{"heading":"실행 흐름:","level":3,"id":"실행_흐름"},{"heading":"0. 500개의 데이터","level":4,"id":"0._500개의_데이터"},{"heading":"파티셔닝 시 스레드 설정 방식 선택","level":1,"id":"파티셔닝_시_스레드_설정_방식_선택"},{"heading":"어떠한 방식을 적용하는게 속도와 안정성 면에서 효율적일지??","level":3,"id":"어떠한_방식을_적용하는게_속도와_안정성_면에서_효율적일지??"},{"heading":"처리할 컬럼 개수가 적을 때는 청크가 세분화되더라도 부하가 크지 않음.","level":2,"id":"처리할_컬럼_개수가_적을_때는_청크가_세분화되더라도_부하가_크지_않음."},{"heading":"SimpleAsyncTaskExecutor vs ThreadPoolTaskExecutor","level":5,"id":"SimpleAsyncTaskExecutor_vs_ThreadPoolTaskExecutor"},{"heading":"정리","level":3,"id":"정리"},{"heading":"SimpleAsyncTaskExecutor","level":4,"id":"SimpleAsyncTaskExecutor"},{"heading":"ThreadPoolTaskExecutor","level":4,"id":"ThreadPoolTaskExecutor"},{"heading":"1. 예치금 차액 처리 건은 총 컬럼수가 많지 않다.","level":3,"id":"1._예치금_차액_처리_건은_총_컬럼수가_많지_않다."},{"heading":"2. 배치 프로젝트 특성상 동시 작업을 고려하지 않아도 된다.","level":3,"id":"2._배치_프로젝트_특성상_동시_작업을_고려하지_않아도_된다."},{"heading":"따라서, SimpleAsyncTaskExecutor를 통해 관리하는 것이 적합하다고 판단하였다.","level":2,"id":"따라서,_==SimpleAsyncTaskExecutor를==_통해_관리하는_것이_적합하다고_판단하였다."},{"heading":"청크 방식의 정확한 동작 로직","level":1,"id":"청크_방식의_정확한_동작_로직"},{"heading":"1. 리더는 청크사이즈 만큼 반복하며, 각 반복마다 특정범위의 값을 return한다.","level":2,"id":"1._==리더==는_청크사이즈_만큼_반복하며,_각_반복마다_특정범위의_값을_return한다."},{"heading":"2. 프로세서는 청크사이즈와 관계없이 리더가 넘긴 return에 따라 동작을 수행한다.","level":2,"id":"2._==프로세서==는_청크사이즈와_관계없이_리더가_넘긴_return에_따라_동작을_수행한다."},{"heading":"3. 롸이터는 청크사이즈만큼 모이면, 그때 1번 동작한다.","level":2,"id":"3._==롸이터==는_청크사이즈만큼_모이면,_그때_1번_동작한다."},{"heading":"QuerydslPagingItemReader 적용기","level":1,"id":"QuerydslPagingItemReader_적용기"},{"heading":"ItemReader 방식","level":2,"id":"ItemReader_방식"},{"heading":"PagingItemReader 방식","level":2,"id":"PagingItemReader_방식"},{"heading":"QuerydslPagingItemReader (커스텀) 방식","level":2,"id":"QuerydslPagingItemReader_(커스텀)_방식"},{"heading":"QuerydslPagingItemReader 방식 구현 목적","level":3,"id":"QuerydslPagingItemReader_방식_구현_목적"},{"heading":"AbstractPagingItemReader를 상속받는 커스텀 QuerydslPagingItemReader 클래스 생성","level":3,"id":"AbstractPagingItemReader를_상속받는_커스텀_QuerydslPagingItemReader_클래스_생성"},{"heading":"구현된 Reader","level":4,"id":"구현된_Reader"},{"heading":"QuerydslPagingItemReader를 사용하며, 다중스레드 스케줄링 하기","level":1,"id":"QuerydslPagingItemReader를_사용하며,_다중스레드_스케줄링_하기"},{"heading":"목적","level":2,"id":"목적"},{"heading":"구현 방법","level":2,"id":"구현_방법"},{"heading":"스레드 세이프한 해당 변수는 각 페이징 리더의 startIndex를 지정 한 후,","level":3,"id":"스레드_세이프한_해당_변수는_각_페이징_리더의_startIndex를_지정_한_후,"},{"heading":"즉시 값을 늘린다. getAndIncrement()","level":3,"id":"즉시_값을_늘린다._getAndIncrement()"},{"heading":"효과","level":2,"id":"효과"},{"heading":"메세징 처리 로직 분리","level":1,"id":"메세징_처리_로직_분리"},{"heading":"1. 로직순서","level":2,"id":"1._로직순서"},{"heading":"메세징 처리할 데이터","level":3,"id":"메세징_처리할_데이터"},{"heading":"스레드 별로 따로 처리되는 녀석들을 processor의 리턴으로 writer에게 넘긴다.","level":3,"id":"스레드_별로_따로_처리되는_녀석들을_processor의_리턴으로_writer에게_넘긴다."},{"heading":"2. 어떻게 메세지(DTO 데이터)를 취합할 것인가?","level":2,"id":"2._어떻게_메세지(DTO_데이터)를_취합할_것인가?"},{"heading":"전역으로 객체를 선언하여 append하는 방식은 스레드 세이프 하지 않기 때문에 배제하였다.","level":5,"id":"전역으로_객체를_선언하여_append하는_방식은_스레드_세이프_하지_않기_때문에_배제하였다."},{"heading":"방법 1. 외부저장소를 사용한다.","level":3,"id":"방법_1._외부저장소를_사용한다."},{"heading":"방법 2. ExecutionContext에 DTO를 직렬화 시켜 저장한다.","level":3,"id":"방법_2._ExecutionContext에_DTO를_직렬화_시켜_저장한다."},{"heading":"방법 3. DTO를 분해하여 기본 데이터만 저장한다.","level":3,"id":"방법_3._DTO를_분해하여_기본_데이터만_저장한다."},{"heading":"방법 4. ConcurrentLinkedQueue 사용 (스레드 안전한 큐 자료구조)","level":3,"id":"방법_4._ConcurrentLinkedQueue_사용_(스레드_안전한_큐_자료구조)"},{"heading":"해당 방법들을 현재 프로젝트와 비교했을 때, 방법 4.가 합리적으로 보인다.","level":4,"id":"해당_방법들을_현재_프로젝트와_비교했을_때,_방법_4.가_합리적으로_보인다."},{"heading":"시행착오","level":1,"id":"**시행착오**"},{"heading":"Limit을 사용하지 않고 JpaPagingReader를 사용했을 때, 프로세서가 모아서 처리할 수 있는 방법이 있는가?","level":1,"id":"Limit을_사용하지_않고_JpaPagingReader를_사용했을_때,_프로세서가_모아서_처리할_수_있는_방법이_있는가?"},{"heading":"- processor는 reader의 return결과로만 트리거 되기 때문에 방법이 없다.","level":3,"id":"-_==processor==는_==reader==의_return결과로만_트리거_되기_때문에_방법이_없다."},{"heading":"필수가 아니라면, processor의 로직을 writer에 할당하여 청크사이즈로 컨트롤 할수 있지 않을까?","level":2,"id":"필수가_아니라면,_==processor==의_로직을_==writer==에_할당하여_청크사이즈로_컨트롤_할수_있지_않을까?"},{"heading":"reader(dto) -> processor -> writer(dtoList)","level":4,"id":"reader(dto)_->_~~processor~~_->_writer(dtoList)"},{"heading":"- 구현 결과 reader의 return인 dto값을 chunk사이즈 만큼 List dto로 합쳐 일괄 처리가 가능하다.","level":5,"id":"-_구현_결과_==reader==의_return인_dto값을_chunk사이즈_만큼_List_dto로_합쳐_일괄_처리가_가능하다."},{"heading":"우려되는 점은 writer가 데이터 가공의 역할까지 맡는게, 설계 목적에 부합한지 생각해보아야 한다.","level":3,"id":"우려되는_점은_writer가_데이터_가공의_역할까지_맡는게,_설계_목적에_부합한지_생각해보아야_한다."},{"heading":"1. 리더,프로세서 각각 dto 1개 씩 처리 (역할 분담)","level":5,"id":"1._리더,프로세서_각각_dto_1개_씩_처리_(역할_분담)"},{"heading":"2. 프로세서 로직을 제거하여 스레드는 유지하돼, 서비스로직에서 dto list로 내부 병렬처리 로직으로 구현하기","level":5,"id":"2._프로세서_로직을_제거하여_스레드는_유지하돼,_서비스로직에서_dto_list로_내부_병렬처리_로직으로_구현하기"},{"heading":"데이터 상으로는 내부 병렬처리의 승리","level":2,"id":"데이터_상으로는_내부_병렬처리의_승리"},{"heading":"트러블 슈팅","level":1,"id":"트러블_슈팅"},{"heading":"예상 - 트렌젝션이 분리가 안됬나?","level":3,"id":"예상_-_트렌젝션이_분리가_안됬나?"},{"heading":"원인이 무엇일까?","level":3,"id":"원인이_무엇일까?"},{"heading":"트렌젝션 관리시 병렬처리 로직의 사용에 주의할것.","level":2,"id":"트렌젝션_관리시_병렬처리_로직의_사용에_주의할것."},{"heading":"DB 커넥션 풀 개수 확인","level":3,"id":"DB_커넥션_풀_개수_확인"},{"heading":"처음 몇 번간은 정상실행 되지만, 반복 테스트 중 스레드 풀 점유 대기 타임아웃이 발생했다.","level":2,"id":"처음_몇_번간은_정상실행_되지만,_반복_테스트_중_스레드_풀_점유_대기_타임아웃이_발생했다."},{"heading":"원인은 무엇인가??","level":3,"id":"원인은_무엇인가??"},{"heading":"배치를 반복할 수록 커넥션 엑티브된 커넥션 풀 개수가 점점 늘어나는 모습","level":3,"id":"배치를_반복할_수록_커넥션_엑티브된_==커넥션_풀_개수가_점점_늘어나는==_모습"},{"heading":"원인?","level":2,"id":"원인?"},{"heading":"앤티티 매니저가 클로즈 되었음에도 커넥션풀을 물고있는 모습.","level":3,"id":"앤티티_매니저가_클로즈_되었음에도_커넥션풀을_물고있는_모습."},{"heading":"* 엔티티 매니저는 클로즈 될 때, 트렌젝션이 살아있다면 그 트렌젝션이 종료될때까지 기다린다**","level":2,"id":"***_**엔티티_매니저는_클로즈_될_때,_트렌젝션이_살아있다면_그_트렌젝션이_종료될때까지_기다린다**"},{"heading":"수정 후","level":2,"id":"수정_후"},{"heading":"정상적으로 커넥션 풀이 점유 해제된 모습","level":3,"id":"정상적으로_커넥션_풀이_점유_해제된_모습"},{"heading":"Listener 역할 분리하고, 재사용 가능하도록 만들자","level":1,"id":"Listener_역할_분리하고,_재사용_가능하도록_만들자"},{"heading":"- Listener에 포함된 초기화 코드 및 로그 로직","level":3,"id":"*_Listener에_포함된_초기화_코드_및_로그_로직"},{"heading":"파티션 핸들러의 grid사이즈를 동적으로 할당하기 위해서 필요한 작업.","level":4,"id":"파티션_핸들러의_grid사이즈를_동적으로_할당하기_위해서_필요한_작업."},{"heading":"파티션 핸들러의 생성 시점을 명확히 한 후에, 리스너에서 주입하던 코드를 STEP으로 분리하였다.","level":2,"id":"파티션_핸들러의_생성_시점을_명확히_한_후에,_리스너에서_주입하던_코드를_STEP으로_분리하였다."},{"heading":"기존 SteoExecution에서 JobExecution으로 하나의 Job에서 공유할 수 있도록 변경하여 gridSize를 다음 Step에서 가져올수 있도록 하였다.","level":5,"id":"기존_SteoExecution에서_JobExecution으로_하나의_Job에서_공유할_수_있도록_변경하여_gridSize를_다음_Step에서_가져올수_있도록_하였다."},{"heading":"비교: JobParameters vs ExecutionContext`","level":3,"id":"비교_JobParameters_vs_ExecutionContext`"},{"heading":"StepExecution vs JobExecution","level":4,"id":"StepExecution_vs_JobExecution"},{"heading":"역할이 분리된 리스너는 재사용을 위해 커스텀 클래스로 생성","level":2,"id":"역할이_분리된_리스너는_재사용을_위해_커스텀_클래스로_생성"},{"heading":"예치금 배치 구조도","level":1,"id":"**예치금_배치_구조도**"},{"heading":"✏ Chunk_Partitioning Batch 구조 드로잉","level":2,"id":"[[✏_Chunk_Partitioning_Batch_구조_드로잉]]"},{"heading":"성과","level":1,"id":"성과"},{"heading":"Batch 총 소요시간 그래프","level":2,"id":"Batch_총_소요시간_그래프"},{"heading":"평균 총 소요시간","level":4,"id":"평균_총_소요시간"},{"heading":"기존로직 : 13.27분","level":5,"id":"기존로직___13.27분"},{"heading":"신규로직 : 4.77분","level":5,"id":"신규로직__4.77분"},{"heading":"1컬럼당 소요시간 그래프","level":2,"id":"1컬럼당_소요시간_그래프"},{"heading":"1컬럼 당 소요시간","level":4,"id":"1컬럼_당_소요시간"},{"heading":"기존로직 : 3.74초","level":5,"id":"기존로직___3.74초"},{"heading":"신규로직 : 0.72초","level":5,"id":"신규로직__0.72초"},{"heading":"grid-size : 6 기준","level":6,"id":"grid-size__6_기준"},{"heading":"기존로직 대비","level":3,"id":"기존로직_대비"},{"heading":"총 소요시간 64.05% 감축","level":3,"id":"==총_소요시간==_**64.05%**_감축"},{"heading":"1컬럼당 처리시간 80.75% 감축","level":3,"id":"==1컬럼당_처리시간==_**80.75%**_감축"},{"heading":"1트렌젝션 최대 처리시간 99.91% 감축","level":3,"id":"==1트렌젝션_최대_처리시간==_**99.91%**_감축"},{"heading":"Grid-Size에 따른 점유 커넥션 풀 및 소요시간","level":1,"id":"Grid-Size에_따른_==점유_커넥션_풀_및_소요시간=="},{"heading":"grid-size를 동적으로 늘려감에 따라 총 소요시간을 더욱 줄일 수 있다.","level":4,"id":"grid-size를_동적으로_늘려감에_따라_==총_소요시간을_더욱_줄일_수_있다==."},{"heading":"API 부하 검증 Elastic APM","level":1,"id":"API_부하_검증_Elastic_APM"}],"backlinks":[],"links":["?query=tag:%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","?query=tag:%EA%B0%9C%EB%B0%9C","?query=tag:SPRING","?query=tag:Batch","?query=tag:Partitioning","?query=tag:Chunk","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#🏹 예치금 차액 비교 Spring Batch 리펙토링","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#작업_목적","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#작업_계획","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#+_**플로우_차트**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#예치금차액비교_Batch_Job_기존_소요시간_그래프","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#2024-10-28_~_2024-11-19_(주말제외)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#문제점_분석","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1._하나의_트렌젝션으로_동작하며,_실패시_처음부터_재시도_해야함","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#2._한_트렌젝션내에서_긴_시간을_동작하여,_배치중_일어나는_insert/update(예치금_입금_출금)_건을_감지하지_못함","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#배치_동작_로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#700_->_회원_개개인_별_비교._문자는_9시_30분에_예약문자로_오지만,_실제_로직은_7시에_돈다","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#신한API가_main데이터.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#New_Batch의_주요_기술_및_목적","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#Partitioning","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#**_프로세스(서비스_로직)단계에서_병렬처리를_하는_것과_어떠한차이가_있는가?_ex)_parallelStream,_CompletableFuture_**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#즉,_파티션_별로_독립적인_SlaveStep을_생성하기_떄문에_Spring_Batch의_관리를_받을_수_있다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#Chunk","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#파티셔닝_흐름","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#ThreadPoolSize__동시에_실행시킬_스테리드의_개수","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#gridSize__실제로_제단할_사이즈(작업단위)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#QueueCapacity__대기열_크기","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#MaxPoolSize__최대_추가_스레드_풀_개수","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#ThreadPoolSize__4__/__gridSize__25","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#MaxPoolSize__4_/_QueueCapacity__2_(대기열크기를_벗어나면_Exception_발생)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#0._250개의_데이터","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#데이터가_늘어났을때?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#ThreadPoolSize__4__/__gridSize__25","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#MaxPoolSize__6_/_QueueCapacity__2_(대기열크기를_벗어나면_Exception_발생)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#실행_흐름","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#0._500개의_데이터","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#파티셔닝_시_스레드_설정_방식_선택","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#어떠한_방식을_적용하는게_속도와_안정성_면에서_효율적일지??","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#처리할_컬럼_개수가_적을_때는_청크가_세분화되더라도_부하가_크지_않음.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#SimpleAsyncTaskExecutor_vs_ThreadPoolTaskExecutor","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#정리","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#SimpleAsyncTaskExecutor","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#ThreadPoolTaskExecutor","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1._예치금_차액_처리_건은_총_컬럼수가_많지_않다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#2._배치_프로젝트_특성상_동시_작업을_고려하지_않아도_된다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#따라서,_==SimpleAsyncTaskExecutor를==_통해_관리하는_것이_적합하다고_판단하였다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#청크_방식의_정확한_동작_로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1._==리더==는_청크사이즈_만큼_반복하며,_각_반복마다_특정범위의_값을_return한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#2._==프로세서==는_청크사이즈와_관계없이_리더가_넘긴_return에_따라_동작을_수행한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#3._==롸이터==는_청크사이즈만큼_모이면,_그때_1번_동작한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#QuerydslPagingItemReader_적용기","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#ItemReader_방식","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#PagingItemReader_방식","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#QuerydslPagingItemReader_(커스텀)_방식","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#QuerydslPagingItemReader_방식_구현_목적","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#AbstractPagingItemReader를_상속받는_커스텀_QuerydslPagingItemReader_클래스_생성","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#구현된_Reader","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#QuerydslPagingItemReader를_사용하며,_다중스레드_스케줄링_하기","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#목적","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#구현_방법","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#스레드_세이프한_해당_변수는_각_페이징_리더의_startIndex를_지정_한_후,","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#즉시_값을_늘린다._getAndIncrement()","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#효과","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#메세징_처리_로직_분리","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1._로직순서","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#메세징_처리할_데이터","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#스레드_별로_따로_처리되는_녀석들을_processor의_리턴으로_writer에게_넘긴다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#2._어떻게_메세지(DTO_데이터)를_취합할_것인가?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#전역으로_객체를_선언하여_append하는_방식은_스레드_세이프_하지_않기_때문에_배제하였다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#방법_1._외부저장소를_사용한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#방법_2._ExecutionContext에_DTO를_직렬화_시켜_저장한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#방법_3._DTO를_분해하여_기본_데이터만_저장한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#방법_4._ConcurrentLinkedQueue_사용_(스레드_안전한_큐_자료구조)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#해당_방법들을_현재_프로젝트와_비교했을_때,_방법_4.가_합리적으로_보인다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#**시행착오**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#Limit을_사용하지_않고_JpaPagingReader를_사용했을_때,_프로세서가_모아서_처리할_수_있는_방법이_있는가?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#-_==processor==는_==reader==의_return결과로만_트리거_되기_때문에_방법이_없다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#필수가_아니라면,_==processor==의_로직을_==writer==에_할당하여_청크사이즈로_컨트롤_할수_있지_않을까?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#reader(dto)_->_~~processor~~_->_writer(dtoList)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#-_구현_결과_==reader==의_return인_dto값을_chunk사이즈_만큼_List_dto로_합쳐_일괄_처리가_가능하다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#우려되는_점은_writer가_데이터_가공의_역할까지_맡는게,_설계_목적에_부합한지_생각해보아야_한다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1._리더,프로세서_각각_dto_1개_씩_처리_(역할_분담)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#2._프로세서_로직을_제거하여_스레드는_유지하돼,_서비스로직에서_dto_list로_내부_병렬처리_로직으로_구현하기","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#데이터_상으로는_내부_병렬처리의_승리","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#트러블_슈팅","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#예상_-_트렌젝션이_분리가_안됬나?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#원인이_무엇일까?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#트렌젝션_관리시_병렬처리_로직의_사용에_주의할것.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#DB_커넥션_풀_개수_확인","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#처음_몇_번간은_정상실행_되지만,_반복_테스트_중_스레드_풀_점유_대기_타임아웃이_발생했다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#원인은_무엇인가??","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#배치를_반복할_수록_커넥션_엑티브된_==커넥션_풀_개수가_점점_늘어나는==_모습","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#원인?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#앤티티_매니저가_클로즈_되었음에도_커넥션풀을_물고있는_모습.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#***_**엔티티_매니저는_클로즈_될_때,_트렌젝션이_살아있다면_그_트렌젝션이_종료될때까지_기다린다**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#수정_후","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#정상적으로_커넥션_풀이_점유_해제된_모습","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#Listener_역할_분리하고,_재사용_가능하도록_만들자","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#*_Listener에_포함된_초기화_코드_및_로그_로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#파티션_핸들러의_grid사이즈를_동적으로_할당하기_위해서_필요한_작업.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#파티션_핸들러의_생성_시점을_명확히_한_후에,_리스너에서_주입하던_코드를_STEP으로_분리하였다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#기존_SteoExecution에서_JobExecution으로_하나의_Job에서_공유할_수_있도록_변경하여_gridSize를_다음_Step에서_가져올수_있도록_하였다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#비교_JobParameters_vs_ExecutionContext`","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#StepExecution_vs_JobExecution","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#역할이_분리된_리스너는_재사용을_위해_커스텀_클래스로_생성","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#**예치금_배치_구조도**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#[[✏_Chunk_Partitioning_Batch_구조_드로잉]]","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#성과","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#Batch_총_소요시간_그래프","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#평균_총_소요시간","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#기존로직___13.27분","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#신규로직__4.77분","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1컬럼당_소요시간_그래프","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#1컬럼_당_소요시간","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#기존로직___3.74초","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#신규로직__0.72초","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#grid-size__6_기준","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#기존로직_대비","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#==총_소요시간==_**64.05%**_감축","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#==1컬럼당_처리시간==_**80.75%**_감축","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#==1트렌젝션_최대_처리시간==_**99.91%**_감축","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#Grid-Size에_따른_==점유_커넥션_풀_및_소요시간==","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#grid-size를_동적으로_늘려감에_따라_==총_소요시간을_더욱_줄일_수_있다==.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html#API_부하_검증_Elastic_APM"],"author":"","coverImageURL":"","fullURL":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","pathToRoot":"../..","createdTime":1739842773924,"modifiedTime":1740734146671,"sourceSize":25038,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/회사-은행-서비스1111.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","사진-및-문서/output-(1).png","사진-및-문서/pasted-image-20241206113120.png","사진-및-문서/pasted-image-20241213102128.png","사진-및-문서/pasted-image-20241213102229.png","사진-및-문서/pasted-image-20241213143101.png","사진-및-문서/pasted-image-20241213143217.png","사진-및-문서/pasted-image-20241213103503.png","사진-및-문서/pasted-image-20241217150339.png","사진-및-문서/pasted-image-20241219145746.png","사진-및-문서/output-(9)-1.png","사진-및-문서/output-(10).png","사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","사진-및-문서/pasted-image-20241224093159.png","사진-및-문서/pasted-image-20241224093207.png","사진-및-문서/pasted-image-20241224093225.png"]},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html":{"title":"🏹 예치금 차액 비교 Spring Batch 리펙토링 부록","icon":"","description":"<a class=\"tag\" href=\"?query=tag:프로젝트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#프로젝트</a> <a class=\"tag\" href=\"?query=tag:개발\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#개발</a> <a class=\"tag\" href=\"?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"?query=tag:Batch\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Batch</a> <a class=\"tag\" href=\"?query=tag:Partitioning\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Partitioning</a> <a class=\"tag\" href=\"?query=tag:Chunk\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Chunk</a> <br> <a href=\".?query=tag:프로젝트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#프로젝트\">#프로젝트</a> <a href=\".?query=tag:개발\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#개발\">#개발</a> <a href=\".?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\".?query=tag:Batch\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Batch\">#Batch</a> <a href=\".?query=tag:Partitioning\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Partitioning\">#Partitioning</a> <a href=\".?query=tag:Chunk\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Chunk\">#Chunk</a><br>1 .GridSize: 4 ActiveConnections: 9/50 소요시간: 6 minutes 23.55<br>\n2 .GridSize: 5 ActiveConnections: 11/50 소요시간: 4 minutes 55.57<br>\n3 .GridSize: 6 ActiveConnections: 13/50 소요시간: 4 minutes 47.01<br>\n4 .GridSize: 7 ActiveConnections: 15/50 소요시간: 3 minutes 47.76<br>\n5 .GridSize: 8 ActiveConnections: 17/50 소요시간: 3 minutes 47.69<br>\n6 .GridSize: 9 ActiveConnections: 19/50 소요시간: 3 minutes 59.85<br>\n7 .GridSize: 10 ActiveConnections: 21/50 소요시간: 3 minutes 6.98<br>\n8 .GridSize: 11 ActiveConnections: 23/50 소요시간: 3 minutes 0.52<br>\n9 .GridSize: 12 ActiveConnections: 25/50 소요시간: 3 minutes 5.61<br>12월21일<br>\n164컬럼<br>\n10분 40.783<br>12월20일<br>\n161컬럼<br>\n10분 10.794<br>12월19일<br>\n223컬럼<br>\n14분 29.279초<br>12월18일<br>\n181컬럼<br>\n11분 09.660초<br>12월17일<br>\n329컬럼<br>\n19분 56.948초<br>\n<br>12월14일<br>\n220컬럼<br>\n13분 28.209초<br>12월13일<br>\n179컬럼<br>\n10분 57.596초<br>12월12일<br>\n236컬럼<br>\n14분 30.033초<br>12월11일<br>\n226컬럼<br>\n14분 02.939초<br>12월21일<br>\nstartDate=2024-12-14 07:30:00:00&amp;endDate=2024-12-21 07:30:00<br>\n388컬럼<br>\n4분 43.53초<br>12월20일<br>\nstartDate=2024-12-13 07:30:00:00&amp;endDate=2024-12-20 07:30:00<br>\n388컬럼<br>\n4분 44.438초<br>12월19일<br>\nstartDate=2024-12-12 07:30:00:00&amp;endDate=2024-12-19 07:30:00<br>\n387컬럼<br>\n4분 41.215초<br>12월18일<br>\nstartDate=2024-12-11 07:30:00:00&amp;endDate=2024-12-18 07:30:00<br>\n395컬럼<br>\n4분 50.9초<br>12월17일<br>\nstartDate=2024-12-10 07:30:00:00&amp;endDate=2024-12-17 07:30:00<br>\n407컬럼<br>\n4분 55.686초<br>\n<br>12월14일<br>\nstartDate=2024-12-07 07:30:00:00&amp;endDate=2024-12-14 07:30:00<br>\n376컬럼<br>\n4분 35.387초<br>12월13일<br>\nstartDate=2024-12-06 07:30:00:00&amp;endDate=2024-12-13 07:30:00<br>\n384컬럼<br>\n4분 43.642초<br>12월12일<br>\nstartDate=2024-12-05 07:30:00:00&amp;endDate=2024-12-12 07:30:00<br>\n438컬럼<br>\n4분 47.027초<br>12월11일<br>\nstartDate=2024-12-04 07:30:00:00&amp;endDate=2024-12-11 07:30:00<br>\n437컬럼<br>\n4분 54.308초<br>4일 7:30분-5일 7:30분\n<br>5일 7:30분-6일 7:30분\n<br>6일 7:30분-7일 7:30분\n<br>7일 7:30분-8일 7:30분\n<br>8일 7:30분-9일 7:30분\n<br>9일 7:30분-10일 7:30분\n<br>10일 7:30분-11일 7:30분\n<br><img alt=\"output (9).png\" src=\"사진-및-문서/output-(9).png\" target=\"_self\"><br>### 300테스트 1\n## 범위 - 2016-09-28 ~ 2016-12-13\nstartDate=2016-09-28&amp;endDate=2016-12-13\n## 컬럼 개수 - 289개\n6분 22초 ### 300테스트 2\n## 범위 - 2016-12-13 ~ 2017-01-16\nstartDate=2016-12-13&amp;endDate=2017-01-16\n## 컬럼 개수 - 280개\n5분 57초 ### 300테스트 3\n## 범위 - 2017-01-11 ~ 2017-02-13\nstartDate=2017-01-11&amp;endDate=2017-02-13\n## 컬럼 개수 - 286개\n6분 23초 ### 300테스트 4\n## 범위 - 2017-05-17 ~ 2017-06-01\nstartDate=2017-05-17&amp;endDate=2017-06-01\n## 컬럼 개수 - 274개\n5분 54초 ### 300테스트 5\n## 범위 - 2017-11-07 ~ 2017-12-01\nstartDate=2017-11-07&amp;endDate=2017-12-01\n## 컬럼 개수 - 292개\n6분 32초 -------------------------------------------------- ### 1100테스트 1-1\n## 범위 - 2018-02-11 ~ 2018-05-06\nstartDate=2018-02-11&amp;endDate=2018-05-06\n## 컬럼 개수 - 1094개(예상)\n22분 45초 ### 1100테스트 1-2\n## 범위 - 2018-02-11 ~ 2018-05-06\nstartDate=2018-02-11&amp;endDate=2018-05-06\n## 컬럼 개수 - 1094개(예상)\n22분 34초\n<br>\n<br>현재 예치금 차액 배치의 서비스로직은, 각 파티션에서 실행되며,\n<br>이렇게 실행된 코드는 parallelStream을 사용하여 내부적인 병렬처리를 진행한다.\n<br>해당 로직의 특징은 cpu에 부하를 주는 계산식이 아닌, 단순 I/O (api호출 대기)의 소요시간이 크다.\n<br>\n<br>API 호출 작업 10,000건 처리\n<br>각 호출 응답 시간 200ms\n<br>\n<br>기본 스레드 풀 크기: CPU 코어 수 - 1 (예: 7개의 코어)\n<br>처리 시간 ≈ 작업&nbsp;개수/스레드&nbsp;수×응답&nbsp;시간\\text{작업 개수} / \\text{스레드 수} \\times \\text{응답 시간}작업&nbsp;개수/스레드&nbsp;수×응답&nbsp;시간\n<br>≈10,000/7×200ms\\approx 10,000 / 7 \\times 200ms≈10,000/7×200ms\n<br>≈286초\\approx 286초≈286초\n<br>\n<br>스레드 풀 크기: 100\n<br>처리 시간 ≈ 작업&nbsp;개수/스레드&nbsp;수×응답&nbsp;시간\\text{작업 개수} / \\text{스레드 수} \\times \\text{응답 시간}작업&nbsp;개수/스레드&nbsp;수×응답&nbsp;시간\n<br>≈10,000/100×200ms\\approx 10,000 / 100 \\times 200ms≈10,000/100×200ms\n<br>≈20초\\approx 20초≈20초\n<br>\n<br>CPU 바운드 작업: <br>CPU를 많이 사용하는 작업(예: 복잡한 계산)이면, 코어 수 이상의 스레드를 실행할 경우 컨텍스트 스위칭(스레드 간 전환) 비용이 증가해 성능이 오히려 떨어질 수 있습니다.\n<br>예: 7개의 코어로 100개의 CPU 작업 스레드를 처리하려 하면 병목이 발생. <br>I/O 바운드 작업(API 호출 포함): <br>네트워크 I/O 작업은 대기 시간이 길고, 대기 중에는 CPU를 거의 사용하지 않습니다.\n<br>이 경우 스레드 수 &gt; 코어 수가 유리하며, 100개의 스레드를 실행해도 대부분의 스레드는 대기 상태에 있으므로 CPU 사용량이 낮습니다. <br>69961 ms<br>\n70048 ms<br>\n70396 ms<br>55180 ms<br>\n55036 ms<br>\n55285 ms<br>\n55442 ms<br>71139 ms<br>\n72220 ms<br>64473 ms<br>\n65609 ms<br>미리 파티션 되어있는 데이터의 특성상 한번에 처리되는 양이 많지 않다.\n<br>또한, stream().parallel()은 forkJoinPool에서 효율적으로 관리되며,\n<br>데이터의 동기화 병목을 줄이고, 컨텍스트 전환 횟수를 줄여 더 효율적인 것으로 보임.\n<br>사실 잘 모르겠음\n<br>\n<br>stream().parallel() 기능이 효율적이다.\n<br>\n<br>아마도 Where절이 추가되면서 reader의 속도가 크게 올라갓으며, 1번의 호출만을 하기 때문에 더 개선되었을것이다.\n<br>chunk-size:20<br>\n55969 ms<br>chunk-size:20<br>\n54679 ms<br>\n54416 ms<br>기존 : reader에서 넘어온녀석들의(옛날기준 날짜범위 내의 가장최신Point)차액 -&gt; 차액이있는녀석들의 (모든날짜 범위내의 최신 Point)의 차액<br>\n현재 : reader에서 가져온녀석들의(모든날짜범위내의 최신 Point)의 차액<br>=&gt; 옛날기준 날짜범위 내의 가장최신포인트와 실시간 포인트는 다를 경우가 많음. 거기 내에<br>전날의 최신포인트 vs 현재 최신포인트(신한) -&gt; 여기엔 안걸리지만<br>\n현재 최신포인트 vs 현재 최신포인트(신한) -&gt; 여기에는 걸리면 <br>\n<br>로컬을 기준으로 잡아도, 운영 서버에서 어떠한 스레드 셋팅이 효과적일지 판단하기 힘듬.\n<br>어떠한 방법을 사용해야 실제 운영 서버 반영 전, 테스트를 할 수 있을지?\n<br>\n<br>1차에서는 어제 범위 Point (서브쿼리도 메인 쿼리에서 .where()에 의해 이미 어제의 데이터로 필터링된 상태에서 작동)\n<br>2차에서는 모든데이터 범위의 최신 Point <br>배치를 돌리는 현재날짜 0시 ~ 7시 사이에 입출금건이 있는 고객의 경우 1차에서 항상 걸릴 수 밖에 없음Point <br>1차에서 모두 검증하는 방법은 어떨지?","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#Batch","#Partitioning","#Chunk"],"headers":[{"heading":"🏹 예치금 차액 비교 Spring Batch 리펙토링 부록","level":1,"id":"🏹 예치금 차액 비교 Spring Batch 리펙토링 부록"},{"heading":"size별 소요시간 데이터","level":1,"id":"size별_소요시간_데이터"},{"heading":"최종 데이터","level":1,"id":"최종_데이터"},{"heading":"기존 예치금 차액 로직 ( 기준일 기준 하루 전 모든 입/출금 회원)","level":2,"id":"기존_예치금_차액_로직_(_기준일_기준_하루_전_모든_입/출금_회원)"},{"heading":"신규 예치금 차액 로직","level":2,"id":"신규_예치금_차액_로직"},{"heading":"최종 테스트","level":1,"id":"최종_테스트"},{"heading":"기존 Batch","level":3,"id":"기존_Batch"},{"heading":"기존 로직","level":3,"id":"기존_로직"},{"heading":"1컬럼당 평균 소요시간 : 1.3 s","level":4,"id":"1컬럼당_평균_소요시간__1.3_s"},{"heading":"parallelStream vs CompletableFuture 서비스의 api호출 로직을 더 효율적으로 관리할 수는 없을까?","level":1,"id":"parallelStream_vs_CompletableFuture_서비스의_api호출_로직을_더_효율적으로_관리할_수는_없을까?"},{"heading":"작업 시나리오","level":4,"id":"**작업_시나리오**"},{"heading":"parallelStream의 성능:","level":4,"id":"**`parallelStream`**의_성능"},{"heading":"CompletableFuture + FixedThreadPool(100)**의 성능:","level":4,"id":"==CompletableFuture==_+_FixedThreadPool(100)**의_성능"},{"heading":"a. 작업의 성격","level":4,"id":"**a._작업의_성격**"},{"heading":"2차 검증로직 삭제 전","level":3,"id":"2차_검증로직_삭제_전"},{"heading":"기존로직","level":2,"id":"기존로직"},{"heading":"2차 검증로직 삭제 후","level":3,"id":"2차_검증로직_삭제_후"},{"heading":"기존 로직","level":2,"id":"기존_로직"},{"heading":"(계산로직 + API호출 로직) - 스레드 고정(20)","level":2,"id":"(계산로직_+_API호출_로직)_-_스레드_고정(20)"},{"heading":"(API호출 로직만 스레드 고정(20)","level":2,"id":"(API호출_로직만_스레드_고정(20)"},{"heading":"결과","level":4,"id":"결과"},{"heading":"QuerydslPagingItemReader를 적용함으로 인하여, 일정한 데이터의 크기를 자동으로 페이징 하기 때문에(Reader는 각 Partition별 1번 작동) 스케줄링이 동작할 수 없다.","level":2,"id":"QuerydslPagingItemReader를_적용함으로_인하여,_일정한_데이터의_크기를_자동으로_페이징_하기_때문에(Reader는_각_Partition별_1번_작동)_스케줄링이_동작할_수_없다."},{"heading":"그럼에도 속도가 더 개선된 이유를 분석해보면 좋을것으로 보인다.","level":3,"id":"그럼에도_속도가_더_개선된_이유를_분석해보면_좋을것으로_보인다."},{"heading":"292Column","level":4,"id":"292Column"},{"heading":"기존 :","level":5,"id":"기존_"},{"heading":"변경후 :","level":5,"id":"변경후_"},{"heading":"2차 검증 삭제시 최종 차액 인원이 다른 이유","level":3,"id":"2차_검증_삭제시_최종_차액_인원이_다른_이유"},{"heading":"현재:281 / 기존:141","level":3,"id":"현재281_/_기존141"},{"heading":"현재차액에 기존차액이 모두 포함되어있음","level":4,"id":"현재차액에_기존차액이_모두_포함되어있음"},{"heading":"회의 안건","level":1,"id":"회의_안건"},{"heading":"1. 스레드 풀 개수 정의 어떻게 할것인가?","level":2,"id":"1._스레드_풀_개수_정의_어떻게_할것인가?"},{"heading":"2. fail list 2차검증 로직 꼭 필요한가?","level":2,"id":"2._fail_list_2차검증_로직_꼭_필요한가?"}],"backlinks":[],"links":["?query=tag:%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","?query=tag:%EA%B0%9C%EB%B0%9C","?query=tag:SPRING","?query=tag:Batch","?query=tag:Partitioning","?query=tag:Chunk","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#🏹 예치금 차액 비교 Spring Batch 리펙토링 부록","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#size별_소요시간_데이터","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#최종_데이터","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#기존_예치금_차액_로직_(_기준일_기준_하루_전_모든_입/출금_회원)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#신규_예치금_차액_로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#최종_테스트","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#기존_Batch","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#기존_로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#1컬럼당_평균_소요시간__1.3_s","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#parallelStream_vs_CompletableFuture_서비스의_api호출_로직을_더_효율적으로_관리할_수는_없을까?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#**작업_시나리오**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#**`parallelStream`**의_성능","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#==CompletableFuture==_+_FixedThreadPool(100)**의_성능","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#**a._작업의_성격**","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#2차_검증로직_삭제_전","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#기존로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#2차_검증로직_삭제_후","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#기존_로직","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#(계산로직_+_API호출_로직)_-_스레드_고정(20)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#(API호출_로직만_스레드_고정(20)","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#결과","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#QuerydslPagingItemReader를_적용함으로_인하여,_일정한_데이터의_크기를_자동으로_페이징_하기_때문에(Reader는_각_Partition별_1번_작동)_스케줄링이_동작할_수_없다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#그럼에도_속도가_더_개선된_이유를_분석해보면_좋을것으로_보인다.","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#292Column","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#기존_","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#변경후_","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#2차_검증_삭제시_최종_차액_인원이_다른_이유","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#현재281_/_기존141","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#현재차액에_기존차액이_모두_포함되어있음","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#회의_안건","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#1._스레드_풀_개수_정의_어떻게_할것인가?","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html#2._fail_list_2차검증_로직_꼭_필요한가?"],"author":"","coverImageURL":"","fullURL":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","pathToRoot":"../..","createdTime":1739842890772,"modifiedTime":1740732859734,"sourceSize":8408,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링 부록.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/output-(9).png"]},"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html":{"title":"👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출","icon":"","description":"<a class=\"tag\" href=\"?query=tag:프로젝트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#프로젝트</a> <a class=\"tag\" href=\"?query=tag:개발\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#개발</a> <a class=\"tag\" href=\"?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"?query=tag:AOP\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#AOP</a> <br> <a href=\".?query=tag:프로젝트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#프로젝트\">#프로젝트</a> <a href=\".?query=tag:개발\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#개발\">#개발</a> <a href=\".?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\".?query=tag:AOP\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#AOP\">#AOP</a><br>hf_marketing_code<br>hf_marketing_target<br>hf_marketing_hit_log<br><img alt=\"Pasted image 20250102181842.png\" src=\"사진-및-문서/pasted-image-20250102181842.png\" target=\"_self\"><br>=&gt; 해당형태로 컬럼을 고정시키고, 동적으로 유입 수 를 출력한다.<br>-&gt; 그 후 페이지에 뿌려주기<br>Date: 01-02\nAd Type: 구글광고\nTotal Inflow: 4\nTotal Hit: 27\nDetail Information: Page Name: 대출하기 페이지 Hit: 9 Page Name: 한도조회 버튼 Hit: 12 Page Name: 이용안내 페이지 Hit: 6","aliases":[],"tags":["#프로젝트","#개발","#SPRING","#AOP"],"headers":[{"heading":"👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출","level":1,"id":"👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출"},{"heading":"작업 개요 먼저 보기","level":1,"id":"**작업_개요_먼저_보기**"},{"heading":"->👩‍👧‍👦 marketing Analytics 공통모듈 제작기","level":1,"id":"->[[👩‍👧‍👦_marketing_Analytics_공통모듈_제작기]]"},{"heading":"DB에서 관리? -> ADMIN페이지로 생성?","level":1,"id":"DB에서_관리?_->_ADMIN페이지로_생성?"},{"heading":"1. enum객체의 상수값들을 빌드시에 DB에서 셋팅할 수 있는지?","level":1,"id":"1._enum객체의_상수값들을_빌드시에_DB에서_셋팅할_수_있는지?"},{"heading":"2. pageURL/pageType 과 targetClass/targetMethod/methodParameters중 하나로 특정","level":1,"id":"2._pageURL/pageType_과_targetClass/targetMethod/methodParameters중_하나로_특정"},{"heading":"3. DB 최적화를 진행하자 -> 중복데이터 제거","level":1,"id":"3._DB_최적화를_진행하자_->_중복데이터_제거"},{"heading":"포인트 컷 생성시 DB 호출하여 타겟 메서드 세팅","level":1,"id":"포인트_컷_생성시_DB_호출하여_타겟_메서드_세팅"},{"heading":"ADMIN에서 어떻게 받을것인가?","level":1,"id":"ADMIN에서_어떻게_받을것인가?"},{"heading":"=> 기존 EXCEL로직을 사용하기 위해 service로직에서 row를 병합하여 view에 건내주도록 개발하였다.","level":4,"id":"=>__기존_EXCEL로직을_사용하기_위해_service로직에서_row를_병합하여_view에_건내주도록_개발하였다."},{"heading":"repositoty에서 세부데이터를 List형태로 받을 수 있도록 쿼리 작성","level":1,"id":"repositoty에서_세부데이터를_List형태로_받을_수_있도록_쿼리_작성"}],"backlinks":[],"links":["?query=tag:%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","?query=tag:%EA%B0%9C%EB%B0%9C","?query=tag:SPRING","?query=tag:AOP","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#**작업_개요_먼저_보기**","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#->[[👩‍👧‍👦_marketing_Analytics_공통모듈_제작기]]","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#DB에서_관리?_->_ADMIN페이지로_생성?","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#1._enum객체의_상수값들을_빌드시에_DB에서_셋팅할_수_있는지?","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#2._pageURL/pageType_과_targetClass/targetMethod/methodParameters중_하나로_특정","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#3._DB_최적화를_진행하자_->_중복데이터_제거","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#포인트_컷_생성시_DB_호출하여_타겟_메서드_세팅","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#ADMIN에서_어떻게_받을것인가?","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#=>__기존_EXCEL로직을_사용하기_위해_service로직에서_row를_병합하여_view에_건내주도록_개발하였다.","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html#repositoty에서_세부데이터를_List형태로_받을_수_있도록_쿼리_작성"],"author":"","coverImageURL":"","fullURL":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","pathToRoot":"../..","createdTime":1739783488509,"modifiedTime":1740733843766,"sourceSize":3178,"sourcePath":"project/hello marketing/👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출.md","exportPath":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250102181842.png"]},"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html":{"title":"👩‍👧‍👦 marketing Analytics 공통모듈 제작기","icon":"","description":"<a class=\"tag\" href=\"?query=tag:프로젝트\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#프로젝트</a> <a class=\"tag\" href=\"?query=tag:개발\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#개발</a> <a class=\"tag\" href=\"?query=tag:DB\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DB</a> <a class=\"tag\" href=\"?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"?query=tag:AOP\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#AOP</a> <br> <a href=\".?query=tag:프로젝트\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#프로젝트\">#프로젝트</a> <a href=\".?query=tag:개발\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#개발\">#개발</a> <a href=\".?query=tag:DB\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DB\">#DB</a> <a href=\".?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\".?query=tag:AOP\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#AOP\">#AOP</a> <br>\n<br>기존 외부 유입 통계 로직의 단점 해결. <br>확장에 닫혀있음\n<br>디테일한 행동 추적 불가능\n<br>중복 접근자 처리로직의 부재 <br>Hello Service의 유입/동작 통계 모듈의 공통화 작업이다.\nSpring AOP를 사용하여 구성하였다.\n<br>\n<br>통계 필요 페이지 내에서(프론트), 쿠키 데이터 페이지 별 최초 진입 확인?\n<br>\n<br>해당 진입시점부터 특정 동작에 대한 모든 타임라인 로그\n<br>\n<br>레디스 가용 메모리에 대한 한계값 산정. -&gt; 아직 적용 X\n<br>\n<br>URL + 함수명 조합\n<br>=&gt; 메인 테이블<br>\n=&gt; 백로직에서 쿠키 데이터 쌓기<br>=&gt; 디테일 테이블 - 타임라인으로 관리 단, 메인테이블에 존재하는 내셕들에 대해서<br>\n=&gt; AOP에서 특정 서비스or메서드orURL로 지정하여 로그 쌀기<br>- 관심사(Aspect)를 분리하여, 각 서비스 메서드에 반복해서 구현하는 것이 아닌, 별도의 Aspect로 관리하여 핵심로직을 공통으로 적용하기 위함이다.\n<br>\n<br>난수 생성 후 물고있기☑ <br>IP로 추적 <br><img alt=\"Pasted image 20241224144309.png\" src=\"사진-및-문서/pasted-image-20241224144309.png\" target=\"_self\"><br>쿠키가 필요한 페이지의 경로가 기본 path와 일치하는 경우(redirect url 이 SP_MARKETING_HIT_TEST1 의 하위 url일 경우)<br>\n에는 명시적으로 표시할 필요가 없지만,<br>AOP에서 Front-end 단의 특정 동작 필터링 하기<br><img alt=\"Pasted image 20241226111559.png\" src=\"사진-및-문서/pasted-image-20241226111559.png\" target=\"_self\"><br>\n<br>장점: <br>코드가 간결하고 읽기 쉽다.\n<br>Spring의 AOP 인프라를 사용하여 메서드 인터셉션을 쉽게 구현할 수 있다. <br>단점:\n- 포인트컷 조건은 컴파일 시점에 고정된다.\n- 복잡한 조건이나 동적으로 변경되는 조건을 처리하기 어렵다. -&gt; @Pointcut 등의 조건에 부합하는 Bean객체를 컴파일 시점에 찾아내어 프록시를 감싼다.\n<br>\n<br>동적 생성: <br>런타임에 프록시를 생성하여 포인트컷과 어드바이스를 동적으로 적용.\n<br>StaticMethodMatcherPointcut 또는 DynamicMethodMatcherPointcut을 사용하여 런타임 조건 기반으로 메서드 매칭. <br>장점: <br>런타임 조건에 따라 동적으로 포인트컷 생성 가능.\n<br>복잡한 조건과 동적 필터링을 처리하기 용이.\n<br>Spring AOP가 아닌 순수 Java 프록시 방식도 지원. <br>단점: <br>코드가 복잡해지고 추가 구현이 필요.\n<br>Spring AOP와 동일한 수준의 간결성을 제공하지 않음. <br>-&gt; 해당 프록시 객체를 적용하고 싶은 Bean객체에 매번 생성(등록)해주어야 함.<br>import org.springframework.aop.Pointcut;\nimport org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;\nimport org.springframework.aop.support.DefaultPointcutAdvisor;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration; @Configuration\npublic class AopConfig { @Bean public Pointcut customPointcut() { return new CustomPointcut(); } @Bean public CustomAdvice customAdvice() { return new CustomAdvice(); } @Bean public DefaultPointcutAdvisor customAdvisor(Pointcut customPointcut, CustomAdvice customAdvice) { return new DefaultPointcutAdvisor(customPointcut, customAdvice); } @Bean public DefaultAdvisorAutoProxyCreator proxyCreator() { return new DefaultAdvisorAutoProxyCreator(); }\n} <br>\n<br>@Pointcut 방식과 동일한 동작: <br>Spring 컨테이너가 관리하는 모든 빈에 대해 조건을 평가하고 프록시를 자동 생성합니다. <br>프록시를 명시적으로 선언할 필요 없음: <br>ProxyFactory처럼 수동으로 프록시를 생성하지 않아도 됩니다. <br>유연성과 효율성 향상: <br>Spring AOP 인프라를 활용하므로, 관리가 용이하고 런타임 성능이 개선됩니다. <br>\n<br>BeanPostProcessor: <br>DefaultAdvisorAutoProxyCreator는 Spring의 BeanPostProcessor를 구현한 클래스이다.\n<br>Spring 컨테이너는 애플리케이션 컨텍스트에 등록된 모든 BeanPostProcessor를 자동으로 호출하여 빈의 초기화 전후 작업을 수행한다.\n<br>이를 통해, Spring AOP는 빈 생성 단계에서 프록시를 생성하고 조건에 맞는 빈에 대해 어드바이저를 적용. <br>Advisor 탐색: <br>DefaultAdvisorAutoProxyCreator는 Spring 컨텍스트에 등록된 모든 Advisor를 자동으로 탐색한다.\n<br>이는 DefaultAdvisorAutoProxyCreator가 BeanFactory를 통해 컨테이너의 모든 Advisor 타입 빈을 조회하기 때문.\n<br>탐색된 Advisor를 사용하여 각 빈의 메서드와 포인트컷 조건을 매칭. <br>Advisor와 빈의 매칭: <br>빈이 생성될 때, DefaultAdvisorAutoProxyCreator는 해당 빈의 메서드가 어떤 Advisor의 포인트컷 조건에 부합하는지 평가.\n<br>조건에 부합하면, 해당 빈을 프록시 객체로 감싸고, 어드바이스를 연결. <br>위 방법의 문제점? <br>\n<br>이렇게 맵핑이 되어야 하나, 이를 동적으로 탐지하지 못한다.\n<br>/* * EnableAspectJAutoProxy &gt; 프록시 적용시 인터페이스/클래스 여부 자동 판단 * 클래스에 인터페이스가 있으면 JDK 동적 프록시. * 인터페이스가 없으면 CGLIB 프록시. * */@Configuration @EnableAspectJAutoProxy public class AopConfig { @Bean public Pointcut customPointcut() { return new CustomPointcut(); } @Bean public CustomAdvice customAdvice() { return new CustomAdvice(); } @Bean public DefaultPointcutAdvisor customAdvisor(Pointcut customPointcut, CustomAdvice customAdvice) { return new DefaultPointcutAdvisor(customPointcut, customAdvice); } /* * @EnableAspectJAutoProxy를 사용해 등록했기 때문에 불필요. * */ // @Bean // public DefaultAdvisorAutoProxyCreator proxyCreator() { // return new DefaultAdvisorAutoProxyCreator(); // } }\n<br>프록시(Proxy)는 대리자라는 뜻으로, 다른 객체에 대한 인터페이스 역할을 하는 객체를 말합니다. 프로그래밍에서 프록시는 실제 객체에 접근하기 전에 특정 작업(로깅, 보안, 트랜잭션 관리 등)을 수행하거나, 객체에 대한 접근을 제어하는 데 사용됩니다.<br>\n<br>대리 객체: 프록시는 실제 객체에 대한 중간다리 역할을 합니다.\n<br>동작 조정: 프록시는 요청을 가로채서 추가적인 작업을 수행하거나, 요청을 변형한 뒤 실제 객체에 전달할 수 있습니다.\n<br>AOP와 연관: 프록시를 사용하면 코드를 변경하지 않고도 객체의 동작을 확장하거나 변경할 수 있습니다.\n<br>Method Name: loanerLoginPage<br>\njavax.servlet.http.HttpServletRequest<br>\norg.springframework.web.bind.annotation.GetMapping <br><img alt=\"Pasted image 20241226152219.png\" src=\"사진-및-문서/pasted-image-20241226152219.png\" target=\"_self\"><br><img alt=\"Pasted image 20241226171158.png\" src=\"사진-및-문서/pasted-image-20241226171158.png\" target=\"_self\"><br>\n<br>외부링크 최초진입. hitCode, hitUid 발급 및 DB저장\n<br>\n<br>외부링크 재진입. hitCode는 변경될 수 있으므로 \"p\"파라미터로 재발급<br>\n=&gt; hitCode는 매번 재발급 / hitUid는 없을때만 발급\n<br>\n<br>일반사용자 이며, 아무동작 하지 않는다.\n<br>\n<br>외부링크 진입 후 동작. 없는 녀석 새로 발급 및 DB저장\n<br>서비스 저장시 동시성 이슈가 발생할 수 있다?<br>@Override @Transactional public ResponseModel insertMarketingHitLog(String hitCode, String hitUid, String pageUrl, String pageType){ try { Optional&lt;HfMarketingHitLog&gt; existingLog = hfMarketingHitLogRepository.findByHitCodeAndHitUidAndPageUrlAndPageType(hitCode, hitUid, pageUrl, pageType); if (existingLog.isPresent()) { HfMarketingHitLog logToUpdate = existingLog.get(); logToUpdate.setUpdateDate(LocalDateTime.now()); hfMarketingHitLogRepository.save(logToUpdate); return new ResponseModel(ResponseModel.ResponseStatus.SUCCESS); } HfMarketingHitLog hfMarketingHitLog = HfMarketingHitLog.builder() .hitCode(hitCode) .hitUid(hitUid) .pageUrl(pageUrl) .pageType(pageType) .build(); hfMarketingHitLogRepository.save(hfMarketingHitLog); return new ResponseModel(ResponseModel.ResponseStatus.SUCCESS); } catch (Exception e) { return new ResponseModel(ResponseModel.ResponseStatus.FAILED, \"데이터 처리 중 오류 발생\"); } }\n<br>\n<br>여러 쓰레드(또는 트랜잭션)가 findByHitCodeAndHitUidAndPageUrlAndPageType 메서드를 호출하여 동일한 조건의 데이터를 동시에 조회할 수 있다.\n<br>두 쓰레드가 모두 existingLog.isPresent() 조건에서 false를 확인한 후, 동시에 새로운 HfMarketingHitLog 객체를 생성하고 저장하려 하면 데이터 중복 문제가 발생할 수 있다.\n<br>. Lock을 쓰면 되나, 이후 업데이트 로직 삭제(로그 테이블화) 변경으로 처리<br><img alt=\"Pasted image 20241230135801.png\" src=\"사진-및-문서/pasted-image-20241230135801.png\" target=\"_self\"><br>1일의 유효기간을 갖는 uid를 발급하여, 인입코드 / Hit된 기능 주소 / 시간 을 저장한다.\n<br>uid는 외부url로 접근시 발급\n<br>page_url는 코드에 미리 등록 / hit_code는 모두(only 영문+숫자) 수용 가능\n<br><img alt=\"Pasted image 20250102160213.png\" src=\"사진-및-문서/pasted-image-20250102160213.png\" target=\"_self\"><br>\n<img alt=\"Pasted image 20250102160223.png\" src=\"사진-및-문서/pasted-image-20250102160223.png\" target=\"_self\"><br>\n<br>enum객체에 정의된 메서드를 DB로 전환하여 pointcut에서 해당 클래스, 메서드를 가져와 조건으로 정의\n<br>해당 조건에 부합하는 메서드를 프록시로 전환\n<br>\n<br>api호출을 통해 advice내의 동작은 런타임 환경에서 동적으로 변경이 가능한 것을 확인했다.\n<br>\n<br>런타입 위빙 방식이라고 하더라도, 변경은 불가능하다.\n<br>컴파일 위빙 방식은 컴파일 단계에서 원본 클래스 바이트코드를 변경하여 직접 위빙을 하는 방식이고,<br>\n런타임 위빙은 런타임단계에서 원본 클래스를 변경하지 않고 프록시 객체를 사용하여 교체하는 방식이다.\n<br>=&gt; 해당하는 부분은 리빌드와 큰 차이가 없고, 각 class에 scope를 따로 적용해야했기 때문에 고려하지 않았다.<br>=&gt; 연관성 있는 모든 참조를 수동으로 재설정해야하기 때문에 매우 복잡해진다.<br>\n<br>참조를 갱신하기 위해서는 Java리플렉션을 사용하여 강제로 참조를 갱신하거나, AspectJ의 런타임 위빙 방식을 활용해야 한다.\n<br>따라서, 서버 Kill을 하는 것과 진배 없으며, 권장하지 않는 방법이다.\n<br>이슈\n내부통계기능(AOP)의 진입URL에서 네이버 아날리틱스(외부 통계 프로그램)가 작동하지 않는 이슈\n<br>\n<br>외부 유입통계 페이지의 인입 주소는 일반적인 메인 페이지가 아닌, Gate를 거쳐서(redirect) 동작하게 된다.\n<br>이 때, 진입 referrer에 변동이 생기면서 집계가 되지 않는 오류가 발생한 것으로 보인다.\n<br>\n<br>해당 방법을 사용하여, View단을 추가하여 replace한다면, 처음 진입시 갖고 있는 referrer를 물고 갈수 있지 않을까?\n<br>redirect대신 view단을 통해 진입하도록 만든 후, naver아날리틱스 스크립트를 추가한다.\n<br>한계 : 외부 유입시 불필요한 페이지 방문이 생기게 되고, 유입과정의 시간이 증가한다. 또한, 해당 오류를 100% 해결할지 미지수\n<br>\n<br>해당 방법은 기존 naver아날리틱스를 사용하고 있는 로직을 그대로 사용하는 것이기 때문에 제일 확실하다.\n<br>한계 : 외부유입자가 아닌, 모든 사용자에게 session및 uid체크가 들어가기 때문에 부하가 증가한다.(DB통신은 X)\n<br>\n<br>BEST🖐\n<br>한계 : 네이버 아날리틱스의 내부로직 파악이 불가함\n<br>\n<br>현재 네이버의 내부 로직 파악이 불가하니, View를 추가하여 네이버 스크립트가 물고 가는지 먼저 TEST하도록 하기\n<br>&lt;html xmlns:th=\"http://www/thymeleaf.org\" th:replace=\"layout/mainLayout :: mainLayout('gate loan')\"&gt; &lt;script th:inline=\"javascript\"&gt; $(document).ready(function() { location.href = [[${urls.SP_LOAN}]]; }); &lt;/script&gt;\n<br>mainLayout을 적용하여 해당 페이지에 default script를 적용시켰다.<br>\n결과는 추후 모니터링 예정<br>Quote\nsp/loan기준으로 레퍼러를 https://www-stg.hellofunding.co.kr/sp/loan/gtLoan?p=Z29vZ2xlMXN0 인입페이지 주소를 갖고있는것을 확인했다.\n<br>2025-02-25 14:34:04 [hello-app-staging-7985c4d74f-47qnx] INFO com.hellofintech.hellofunding.common.interceptor.ServiceHandlerInterceptor[mergeIntoVisitCount:187] - referer = https://www-stg.hellofunding.co.kr/sp/loan/gtLoan?p=Z29vZ2xlMXN0\n<br><img alt=\"Pasted image 20250226145129.png\" src=\"사진-및-문서/pasted-image-20250226145129.png\" target=\"_self\"><br>확인 결과이미 sendRedirect 로직에서도 Header의 Referer를 물고있었다.<br>\n어떠한 referrer를 기준으로 집계를 하는지 정확한 파악이 필요하다.\n<br>[부록]<br>\n<a data-href=\"👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출\" href=\"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출</a>","aliases":[],"tags":["#프로젝트","#개발","#DB","#SPRING","#AOP"],"headers":[{"heading":"👩‍👧‍👦 marketing Analytics 공통모듈 제작기","level":1,"id":"👩‍👧‍👦 marketing Analytics 공통모듈 제작기"},{"heading":"목적","level":1,"id":"목적"},{"heading":"개요","level":1,"id":"개요"},{"heading":"계획(더 자세히 설명할것.)","level":1,"id":"*계획*(더_자세히_설명할것.)"},{"heading":"1. 광고 url 진입자, 파라미터(CODE) 쿠키 저장","level":2,"id":"1._광고_url_진입자,_파라미터(CODE)_쿠키_저장"},{"heading":"2. Hit체크 하고싶은 페이지에서, CODE별 최초 진입 확인시 Hit로그 저장 controller 호출","level":2,"id":"2._Hit체크_하고싶은_페이지에서,_CODE별_최초_진입_확인시_Hit로그_저장_controller_호출"},{"heading":"3. 파라미터로 CODE 및 현재 페이지 주소(ex. /sp/loan) 저장","level":2,"id":"3._파라미터로_CODE_및_현재_페이지_주소(ex._/sp/loan)_저장"},{"heading":"데이터 테이블 구상","level":1,"id":"*데이터_테이블_구상*"},{"heading":"고려사항","level":1,"id":"*고려사항*"},{"heading":"1. 추적을 얼마나 디테일하게 저장할지?","level":2,"id":"1._추적을_얼마나_디테일하게_저장할지?"},{"heading":"2. 디테일에 대한 부하분산은 어떻게 할지?","level":2,"id":"2._디테일에_대한_부하분산은_어떻게_할지?"},{"heading":"3. 인입시점이 아닌 동작에대한 unique값을 어떻게 지정할지?","level":2,"id":"3._인입시점이_아닌_동작에대한_unique값을_어떻게_지정할지?"},{"heading":"정리","level":1,"id":"정리"},{"heading":"1. 첫 외부 URL진입 시점엔 controller redirect로직 으로 로그 쌓기 / 쿠키 셋팅 => 이후 AOP 공통로직 화","level":3,"id":"1._첫_외부_URL진입_시점엔_controller_redirect로직_으로_==로그_쌓기==_/_==쿠키_셋팅==_=>_이후_AOP_공통로직_화"},{"heading":"2. 이후 동작에 대해 쿠기값 비교 / AOP 로그 쌓기 공통 실행","level":3,"id":"2._이후_동작에_대해_==쿠기값_비교==_/_==AOP_로그_쌓기_공통_실행=="},{"heading":"Spring AOP 사용 이유","level":2,"id":"**Spring_AOP_사용_이유**"},{"heading":"어떻게 자신의 메인 테이블을 찾을것인가?","level":4,"id":"어떻게_자신의_메인_테이블을_찾을것인가?"},{"heading":"Path를 명시적으로 설정하여 주지 않았을 때, 쿠키가 등록되지 않는 이유","level":1,"id":"Path를_명시적으로_설정하여_주지_않았을_때,_쿠키가_등록되지_않는_이유"},{"heading":"현재는 하위 URL이 아니기 때문에 경로를 명시적으로 설정해주어야 한다.","level":2,"id":"현재는_하위_URL이_아니기_때문에_경로를_명시적으로_설정해주어야_한다."},{"heading":"1. Pointcut 객체에 동적으로 enum에서 미리 선언한 값 execution으로 삽입하기","level":2,"id":"1._Pointcut_객체에_동적으로_enum에서_미리_선언한_값_execution으로_삽입하기"},{"heading":"(이후 ADMIN 관리를 위해 enum객체 -> DB로 데이터 이전)","level":3,"id":"**(이후_ADMIN_관리를_위해_enum객체_->_DB로_데이터_이전)**"},{"heading":"@Pointcut 어노테이션은 컴파일 시점에 고정된 문자열로 정의된 포인트컷 표현식을 기반으로 동작한다.","level":1,"id":"`@Pointcut`_어노테이션은_컴파일_시점에_고정된_문자열로_정의된_포인트컷_표현식을_기반으로_동작한다."},{"heading":"이를 해결할 방법은?","level":3,"id":"이를_해결할_방법은?"},{"heading":"프록시 기반 동적 포인트컷 생성방식","level":1,"id":"프록시_기반_동적_포인트컷_생성방식"},{"heading":"customAdvisor를 사용한 동적 포인트컷 생성방식","level":1,"id":"customAdvisor를_사용한_동적_포인트컷_생성방식"},{"heading":"위 코드의 DefaultAdvisorAutoProxyCreator객체가 조건에 부합하는 빈에 대해 자동으로 프록시를 생성하여 Advice를 적용한다.","level":4,"id":"위_코드의_`DefaultAdvisorAutoProxyCreator`객체가_조건에_부합하는_빈에_대해_자동으로_프록시를_생성하여_`Advice`를_적용한다."},{"heading":"DefaultAdvisorAutoProxyCreator는 어떻게 customAdvisor의 조건에 부합하는 빈을 찾나?","level":1,"id":"`DefaultAdvisorAutoProxyCreator`는_어떻게_`customAdvisor`의_조건에_부합하는_빈을_찾나?"},{"heading":"클래스에 인터페이스가 있으면 JDK 동적 프록시, 인터페이스가 없으면 CGLIB 프록시","level":2,"id":"클래스에_인터페이스가_있으면_JDK_동적_프록시,_인터페이스가_없으면_CGLIB_프록시"},{"heading":"@EnableAspectJAutoProxy 어노테이션을 사용한다면, 빈 최초등록시 자동으로 판단하여 해당 프록시 객체를 적용할 수 있다.","level":3,"id":"@EnableAspectJAutoProxy_어노테이션을_사용한다면,_빈_최초등록시_자동으로_판단하여_해당_프록시_객체를_적용할_수_있다."},{"heading":"프록시?","level":1,"id":"프록시?"},{"heading":"프록시(Proxy)란?","level":3,"id":"프록시(Proxy)란?"},{"heading":"핵심 개념:","level":4,"id":"핵심_개념"},{"heading":"StaticMethodMatcherPointcut에서 사용가능한 호출 고유정보","level":1,"id":"StaticMethodMatcherPointcut에서_사용가능한_호출_고유정보"},{"heading":"타겟 클래스 / 메서드명 / 파라미터 / 어노테이션","level":2,"id":"타겟_클래스_/_메서드명_/_파라미터_/_어노테이션"},{"heading":"메서드 검증 포인트 컷 추가 후 빌드 시간","level":2,"id":"메서드_검증_포인트_컷_추가_후_빌드_시간"},{"heading":"ENUM객체에, 고유한 정보를 넣어주면 자동 집계가 시작된다","level":1,"id":"ENUM객체에,_고유한_정보를_넣어주면_자동_집계가_시작된다"},{"heading":"customAdvice에 등록된 invoke함수는 Pointcut의 조건에 부합하는 메서드의 정보만을 가져온다.","level":3,"id":"customAdvice에_등록된_invoke함수는_Pointcut의_조건에_부합하는_메서드의_정보만을_가져온다."},{"heading":"케이스 정리","level":1,"id":"케이스_정리"},{"heading":"1. Pointcut에 있는 메서드이며, \"p\"파라미터가 있을때,","level":2,"id":"1._Pointcut에_있는_메서드이며,_`\"p\"파라미터`가_있을때,"},{"heading":"1.1 현재 쿠키에 hitCode / hitUid 가 없을때","level":3,"id":"1.1_현재_쿠키에_`hitCode`_/_`hitUid`_가_없을때"},{"heading":"1.2 현재 쿠키에 hitCode / hitUid 가 있을때","level":3,"id":"1.2_현재_쿠키에_`hitCode`_/_`hitUid`_가_있을때"},{"heading":"2. Pointcut에 있는 메서드이며,\"p\"파라미터가 없을때,","level":2,"id":"2._Pointcut에_있는_메서드이며,`\"p\"파라미터`가_없을때,"},{"heading":"2.1 현재 쿠키에 hitCode / hitUid 가 둘다 없을때","level":3,"id":"2.1_현재_쿠키에_`hitCode`_/_`hitUid`_가_둘다_없을때"},{"heading":"2.2 현재 쿠키에 hitUid 또는 hitUid 가 있을때","level":3,"id":"2.2_현재_쿠키에_`hitUid`_또는_`hitUid`_가_있을때"},{"heading":"1. 중복 데이터 조회와 저장 사이의 타이밍 차이","level":4,"id":"1._**중복_데이터_조회와_저장_사이의_타이밍_차이**"},{"heading":"해결방법","level":2,"id":"해결방법"},{"heading":"결과","level":1,"id":"결과"},{"heading":"이후 PointCut에서 service 생성자 주입으로, DB에서 값로드 형식으로 변경","level":1,"id":"이후_PointCut에서_service_생성자_주입으로,_DB에서_값로드_형식으로_변경"},{"heading":"ENUM객체에서 DB로 전환","level":1,"id":"ENUM객체에서_DB로_전환"},{"heading":"다음 방법을 통해 DB로 admin과 app을 모두 관리 가능하도록 수정.","level":3,"id":"다음_방법을_통해_DB로_admin과_app을_모두_관리_가능하도록_수정."},{"heading":"AOP위빙 방식을 활용해, 동적으로 원하는 시간에 Pointcut에 조건에 해당하는 메서드를 다시 설정할 수 있을까?","level":1,"id":"AOP위빙_방식을_활용해,_동적으로_원하는_시간에_Pointcut에_조건에_해당하는_메서드를_다시_설정할_수_있을까?"},{"heading":"pointcut도 런타임에 변경이 가능하잖아? 런타임 위빙이니까?","level":2,"id":"pointcut도_런타임에_변경이_가능하잖아?_런타임_위빙이니까?"},{"heading":"이때, 런타임단계 라고 하지만 applicationContext가 bean들의 의존성주입을 마치기 이전에 동작하게 된다. 즉, 임의로 나중에 변경할 수 가 없다는 말이다.","level":4,"id":"이때,_==런타임단계==_라고_하지만_applicationContext가_bean들의_의존성주입을_마치기_이전에_동작하게_된다._즉,_임의로_나중에_변경할_수_가_없다는_말이다."},{"heading":"- 그렇기 때문에, pointcut에서 @Autowired를 통해 service를 주입받지 못하였다. *","level":5,"id":"*_그렇기_때문에,_pointcut에서_@Autowired를_통해_service를_주입받지_못하였다._*"},{"heading":"해결방법은 없을까?","level":2,"id":"해결방법은_없을까?"},{"heading":"1. appcontext에서 빈 전체 초기화","level":3,"id":"1._appcontext에서_빈_전체_초기화"},{"heading":"bean을 모두 refresh한다면 의존성이 깨지지 않고 런타입환경에서 AOP를 재적용 할수 있지 않을까?","level":4,"id":"bean을_모두_refresh한다면_의존성이_깨지지_않고_런타입환경에서_AOP를_재적용_할수_있지_않을까?"},{"heading":"2. 원하는 bean객체만 초기화","level":3,"id":"2._원하는_bean객체만_초기화"},{"heading":"의존 관계가 깨지는 영향도를 고려 할 수 없다.","level":4,"id":"의존_관계가_깨지는_영향도를_고려_할_수_없다."},{"heading":"3. Filter를 사용한다.","level":3,"id":"3._Filter를_사용한다."},{"heading":"종단으로 나두는 AOP에서 횡단으로 나누는 필터를 적용한다면 적용 범위가 전체 범위로 확장되어 오버헤드가 크게 증가할 수 있다.","level":4,"id":"종단으로_나두는_AOP에서_횡단으로_나누는_필터를_적용한다면_적용_범위가_전체_범위로_확장되어_오버헤드가_크게_증가할_수_있다."},{"heading":"결론","level":2,"id":"결론"},{"heading":"+ 추가사항","level":1,"id":"*+_추가사항*"},{"heading":"원인?","level":1,"id":"원인?"},{"heading":"해결법?","level":1,"id":"해결법?"},{"heading":"1. redirect -> 하이퍼링크 기반 Replace로 변경하기?","level":3,"id":"1._redirect_->_하이퍼링크_기반_Replace로_변경하기?"},{"heading":"2. 외부유입 페이지를 삭제하고, 메인페이지에서 내부 통계로 변경","level":3,"id":"2._외부유입_페이지를_삭제하고,_메인페이지에서_내부_통계로_변경"},{"heading":"3. 네이버 아날리틱스가 물고있는 Referrer를 찾아 HttpServletResponse에 함께 담아 redirect 하기.","level":3,"id":"3._네이버_아날리틱스가_물고있는_Referrer를_찾아_HttpServletResponse에_함께_담아_redirect_하기."},{"heading":"- 세 해결법 모두 내부망/외부망 분리로 인하여 운영서버에 반영 전, 확실한 테스트가 불가능 하기 때문에 신중한 선택이 필요하다.","level":4,"id":"-_세_해결법_모두_내부망/외부망_분리로_인하여_운영서버에_반영_전,_확실한_테스트가_불가능_하기_때문에_신중한_선택이_필요하다."},{"heading":"방법 1 하이퍼링크 기반 Replace로 변경하기","level":2,"id":"방법_1_하이퍼링크_기반_Replace로_변경하기"},{"heading":"방법 3 네이버 아날리틱스가 물고있는 Referrer를 찾아 HttpServletResponse에 함께 담아 redirect 하기.","level":1,"id":"방법_3_네이버_아날리틱스가_물고있는_Referrer를_찾아_HttpServletResponse에_함께_담아_redirect_하기."},{"heading":"sp/loan(대출페이지)에서 referrer넘기기","level":1,"id":"sp/loan(대출페이지)에서_referrer넘기기"}],"backlinks":[],"links":["?query=tag:%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8","?query=tag:%EA%B0%9C%EB%B0%9C","?query=tag:DB","?query=tag:SPRING","?query=tag:AOP","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#👩‍👧‍👦 marketing Analytics 공통모듈 제작기","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#목적","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#개요","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#*계획*(더_자세히_설명할것.)","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._광고_url_진입자,_파라미터(CODE)_쿠키_저장","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2._Hit체크_하고싶은_페이지에서,_CODE별_최초_진입_확인시_Hit로그_저장_controller_호출","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#3._파라미터로_CODE_및_현재_페이지_주소(ex._/sp/loan)_저장","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#*데이터_테이블_구상*","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#*고려사항*","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._추적을_얼마나_디테일하게_저장할지?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2._디테일에_대한_부하분산은_어떻게_할지?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#3._인입시점이_아닌_동작에대한_unique값을_어떻게_지정할지?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#정리","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._첫_외부_URL진입_시점엔_controller_redirect로직_으로_==로그_쌓기==_/_==쿠키_셋팅==_=>_이후_AOP_공통로직_화","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2._이후_동작에_대해_==쿠기값_비교==_/_==AOP_로그_쌓기_공통_실행==","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#**Spring_AOP_사용_이유**","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#어떻게_자신의_메인_테이블을_찾을것인가?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#Path를_명시적으로_설정하여_주지_않았을_때,_쿠키가_등록되지_않는_이유","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#현재는_하위_URL이_아니기_때문에_경로를_명시적으로_설정해주어야_한다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._Pointcut_객체에_동적으로_enum에서_미리_선언한_값_execution으로_삽입하기","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#**(이후_ADMIN_관리를_위해_enum객체_->_DB로_데이터_이전)**","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#`@Pointcut`_어노테이션은_컴파일_시점에_고정된_문자열로_정의된_포인트컷_표현식을_기반으로_동작한다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#이를_해결할_방법은?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#프록시_기반_동적_포인트컷_생성방식","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#customAdvisor를_사용한_동적_포인트컷_생성방식","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#위_코드의_`DefaultAdvisorAutoProxyCreator`객체가_조건에_부합하는_빈에_대해_자동으로_프록시를_생성하여_`Advice`를_적용한다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#`DefaultAdvisorAutoProxyCreator`는_어떻게_`customAdvisor`의_조건에_부합하는_빈을_찾나?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#클래스에_인터페이스가_있으면_JDK_동적_프록시,_인터페이스가_없으면_CGLIB_프록시","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#@EnableAspectJAutoProxy_어노테이션을_사용한다면,_빈_최초등록시_자동으로_판단하여_해당_프록시_객체를_적용할_수_있다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#프록시?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#프록시(Proxy)란?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#핵심_개념","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#StaticMethodMatcherPointcut에서_사용가능한_호출_고유정보","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#타겟_클래스_/_메서드명_/_파라미터_/_어노테이션","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#메서드_검증_포인트_컷_추가_후_빌드_시간","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#ENUM객체에,_고유한_정보를_넣어주면_자동_집계가_시작된다","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#customAdvice에_등록된_invoke함수는_Pointcut의_조건에_부합하는_메서드의_정보만을_가져온다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#케이스_정리","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._Pointcut에_있는_메서드이며,_`\"p\"파라미터`가_있을때,","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1.1_현재_쿠키에_`hitCode`_/_`hitUid`_가_없을때","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1.2_현재_쿠키에_`hitCode`_/_`hitUid`_가_있을때","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2._Pointcut에_있는_메서드이며,`\"p\"파라미터`가_없을때,","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2.1_현재_쿠키에_`hitCode`_/_`hitUid`_가_둘다_없을때","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2.2_현재_쿠키에_`hitUid`_또는_`hitUid`_가_있을때","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._**중복_데이터_조회와_저장_사이의_타이밍_차이**","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#해결방법","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#결과","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#이후_PointCut에서_service_생성자_주입으로,_DB에서_값로드_형식으로_변경","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#ENUM객체에서_DB로_전환","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#다음_방법을_통해_DB로_admin과_app을_모두_관리_가능하도록_수정.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#AOP위빙_방식을_활용해,_동적으로_원하는_시간에_Pointcut에_조건에_해당하는_메서드를_다시_설정할_수_있을까?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#pointcut도_런타임에_변경이_가능하잖아?_런타임_위빙이니까?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#이때,_==런타임단계==_라고_하지만_applicationContext가_bean들의_의존성주입을_마치기_이전에_동작하게_된다._즉,_임의로_나중에_변경할_수_가_없다는_말이다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#*_그렇기_때문에,_pointcut에서_@Autowired를_통해_service를_주입받지_못하였다._*","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#해결방법은_없을까?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._appcontext에서_빈_전체_초기화","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#bean을_모두_refresh한다면_의존성이_깨지지_않고_런타입환경에서_AOP를_재적용_할수_있지_않을까?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2._원하는_bean객체만_초기화","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#의존_관계가_깨지는_영향도를_고려_할_수_없다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#3._Filter를_사용한다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#종단으로_나두는_AOP에서_횡단으로_나누는_필터를_적용한다면_적용_범위가_전체_범위로_확장되어_오버헤드가_크게_증가할_수_있다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#결론","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#*+_추가사항*","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#원인?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#해결법?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#1._redirect_->_하이퍼링크_기반_Replace로_변경하기?","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#2._외부유입_페이지를_삭제하고,_메인페이지에서_내부_통계로_변경","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#3._네이버_아날리틱스가_물고있는_Referrer를_찾아_HttpServletResponse에_함께_담아_redirect_하기.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#-_세_해결법_모두_내부망/외부망_분리로_인하여_운영서버에_반영_전,_확실한_테스트가_불가능_하기_때문에_신중한_선택이_필요하다.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#방법_1_하이퍼링크_기반_Replace로_변경하기","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#방법_3_네이버_아날리틱스가_물고있는_Referrer를_찾아_HttpServletResponse에_함께_담아_redirect_하기.","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html#sp/loan(대출페이지)에서_referrer넘기기"],"author":"","coverImageURL":"","fullURL":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","pathToRoot":"../..","createdTime":1739783337843,"modifiedTime":1740733839094,"sourceSize":19283,"sourcePath":"project/hello marketing/👩‍👧‍👦 marketing Analytics 공통모듈 제작기.md","exportPath":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20241224144309.png","사진-및-문서/pasted-image-20241226111559.png","사진-및-문서/pasted-image-20241226152219.png","사진-및-문서/pasted-image-20241226171158.png","사진-및-문서/pasted-image-20241230135801.png","사진-및-문서/pasted-image-20250102160213.png","사진-및-문서/pasted-image-20250102160223.png","사진-및-문서/pasted-image-20250226145129.png"]},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html":{"title":"🥇 정보처리 기사 실기 SQL 문제","icon":"","description":"<a class=\"tag\" href=\"?query=tag:정보처리기사\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#정보처리기사</a> <a class=\"tag\" href=\"?query=tag:실기\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#실기</a> <a class=\"tag\" href=\"?query=tag:SQL\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SQL</a> <a class=\"tag\" href=\"?query=tag:정리\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#정리</a> <br> <a href=\".?query=tag:정보처리기사\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#정보처리기사\">#정보처리기사</a> <a href=\".?query=tag:실기\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#실기\">#실기</a> <a href=\".?query=tag:SQL\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SQL\">#SQL</a> <a href=\".?query=tag:정리\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#정리\">#정리</a><br>CREATE TABLE 부서 ( 부서코드 INT PRIMARY KEY, 부서명 VARCHAR(20)\n); CREATE TABLE 직원 ( 직원코드 INT PRIMARY KEY, 부서코드 INT, 직원명 VARCHAR(20), FOREIGN KEY(부서코드) REFERENCES 부서(부서코드) ON DELETE CASCADE\n); INSERT INTO 부서 VALUES(10, '영업부');\nINSERT INTO 부서 VALUES(20, '기획부');\nINSERT INTO 부서 VALUES(30, '개발부'); INSERT INTO 직원 VALUES(1001, 10, '이진수');\nINSERT INTO 직원 VALUES(1002, 10, '곽명경');\nINSERT INTO 직원 VALUES(1003, 20, '김건길');\nINSERT INTO 직원 VALUES(1004, 20, '최민수');\nINSERT INTO 직원 VALUES(1005, 20, '이용광');\nINSERT INTO 직원 VALUES(1006, 30, '한성광');\nINSERT INTO 직원 VALUES(1007, 30, '박미경');\n<br>SELECT DISTINCT COUNT(부서코드) FROM 직원 WHERE 부서코드 = 20;\n<br>결과: 3<br>해설 :<br>DISTINCT(중복 제거)는 부서코드가 아닌 COUNT(부서코드)에 적용되므로, 여전히 부서코드가 20인 컬럼의 수 '3'이 된다.\n<br>DELETE FROM 부서 WHERE 부서코드 = 20;\nSELECT DISTINCT COUNT(부서코드) FROM 직원;\n<br>결과: 4<br>해설 :<br>부서코드가 20인 컬럼을 삭제한 후, 모든 직원테이블의 부서코드 개수를 센다. 이때 DISTINCT(중복 제거)는 COUNT에 적용되므로<br>\n여전히 '4'이다.\n<br>\n<br>DEPT는 '학과'를 뜻한다\n<br>가정: 전기과 학생 50명, 전자과 학생 100명, 전산과 학생 50명<br>SELECT DEPT FROM STUDENT;\n<br>결과: 200<br>SELECT DISTINCT DEPT FROM STUDENT;\n<br>결과: 3<br>해설 :<br>전기/전자/화학 3가지 종류로 이루어진 DEPT 속성의 중복을 제거하면 '3'이 남는다.\n<br>SELECT COUNT(DISTINCT DEPT) FROM STUDENT WHERE DEPT = '전산과';\n<br>결과: 1<br>해설 :<br>전산과인 학생들의 학과를 뽑는다. 이후 해당 학과의 중복을 제거하면 1개만 남게 된다.\n<br>\n<br>'H'제조사의 '단가' 보다 높은 '단가'를 가진 제품의 정보를 조회하는 SQL문이다.\n<br>SELECT 제품명, 단가, 제조사\nFROM 제품\nWHERE 단가 &gt; ( ) (SELECT 단가 FROM 제품 WHERE 제조사 = 'H');\n<br>답: ALL<br>해설 :<br>해당 쿼리는, where절의 하위 질의에 결과를 반영하여 본 질의의 조건에 추가하는 SQL이다.\n<br>만약 서브쿼리에서 'H'제조사의 제품의 단다가 100/200/400 이 나왔다면,\n<br>해당 단가들 보다 높은 단가를 찾기 위해서는 100/200/400을 모두 비교하여야 한다.\n<br>따라서 ALL키워드가 들어간다면 모든 단가를 비교할 수 있다.\n<br>서브쿼리 앞에 아무 키워드도 붙지 않는다면, 서브쿼리가 다중 행일때 오류를 발생시킨다.<br>\n이때, ANY나 ALL 연산자를 사용하여 다중행을 비교할 수 있다.<br>ANY -&gt; 서브쿼리 결과 중 하나라도 참이면 해당 행은 참<br>\nALL -&gt; 서브쿼리 결과 중 모든 것에 참이어야 해당 행은 참<br>TABLE<br>SELECT COUNT(COL2)\nFROM TABLE\nWHERE COL1 IN (2, 3) OR COL2 IN (3, 5);\n<br>결과: 3<br>해설 :<br>COL1 컬럼에 2나 3이 포함되었거나, COL2컬럼에 3이나 5가 포함된 컬럼 (4개)를 찾는다,\n<br>\n<br>여기서 NULL은 COUNT에 집계가 되지 않으므로 답은 '3'이다.\n<br><img alt=\"Pasted image 20250225161448.png\" src=\"사진-및-문서/pasted-image-20250225161448.png\" target=\"_self\"><br>결과 :<br>① TTL - ② 부장 - ③ 대리 - ④ 과장 - ⑤ 차장\n<br>해설 :<br>해당 관계 대수식의 파이는 속성 리스트에 제시된 속성값만을 추출하여 새로운 릴레이션을 만드는 PROJECT연산이다\n<br>따라서, TTL속성이 추출되어 속성명인 TTL부터 모든 속성값이 결과로 나타난다.<br>\n= SELECT TTL FROM EMPLOYEE\n<br>이 연산들은 관계형 데이터베이스의 데이터를 검색하고 변형하는 데 사용됩니다.<br>관계 대수에서 테이블을 하나의 집합(Set)으로 간주하고 수행하는 연산입니다.<br>(단, SQL문은 ISO/IEC 9075 표준을 기반으로 작성하시오.) <br>( 1 ) TABLE 학생 ( 2 ) 주소 VARCHAR(20);\n<br>답 :<br>\n1 -&gt; ALTER<br>\n2 -&gt; ADD<br>해설 :<br>속성을 추가한다 -&gt; 테이블을 수정한다 -&gt; ALTER\n<br>ALTER + ADD 속성 추가.\n<br>\n<br>3, 4학년의 학번, 이름을 조회한다.\n<br>IN 예약어를 사용해야 한다.\n<br>속성명 아래의 괄호는 속성의 자료형을 의미한다.\n<br>정답 :<br>SELECT 학번, 이름 FROM 학생 WHERE 학년 IN (3, 4);\n<br>해설 :<br>IN예약어는 WHERE절과 함께 쓰이며, WHERE 속성 IN (조건,조건,...) 방식으로 사용된다.\n<br>해당 조건을 포함하고 있는 모든 속성이 선택되게 된다.\n<br>student 테이블<br>정답 :<br>CREATE INDEX idx_name ON student(name);\n<br>해설 :<br>인덱스 생성 문법 :<br>\nCREATE INDEX 인덱스명 ON 테이블명(속성);\n<br>(단, 아래의 실행 결과가 되도록 한다.)<br>\n<br>\nWHERE 조건절은 사용할 수 없다. <br>\nGROUP BY는 반드시 포함한다. <br>\n집계함수(Aggregation Function)를 적용한다. <br>\n학과별튜플수 컬럼명을 출력에 Alias(AS)를 활용한다. <br>\n문장 끝의 세미콜론(;)은 생략해도 무방하다. <br>\n인용부호 사용이 필요한 경우 단일 따옴표(' ')를 사용한다.\n정답 : <br>SELECT 학과, COUNT(*) AS 학과별튜플수\nFROM 학생\nGROUP BY 학과;\n<br>&lt;처리 조건&gt;을 참고하여 적합한 SQL문을 작성하시오.<br>\n<br>WHERE문은 사용하지 않는다.\n<br>GROUP BY와 HAVING을 이용한다.\n<br>집계함수(Aggregation Function)를 사용하여 명령문을 구성한다.\n<br>최소점수, 최대점수는 별칭(Alias)을 위한 AS문을 이용한다.\n<br>명령문 마지막의 세미콜론(;)은 생략 가능하다.\n<br>인용 부호가 필요한 경우 작은따옴표(')를 사용한다.\n<br>정답 :<br>SELECT 과목이름, MIN(점수) AS 최소점수, MAX(점수) AS 최대점수 FROM 성적 GROUP BY 과목이름 HAVING AVG(점수) &gt;= 90;\n<br>해설 :<br>과목이름별로 여러 점수의 통계를 내는것 이기 때문에, GROUP BY 과목이름을 사용한다.\n<br>이때, GROUP BY ~ HAVING 조건 을 사용하여, 해당 그릅화된 데이터 중 다음 조건을 만족하는 그룹만 포함한다.\n<br>SELECT COUNT(*) CNT FROM A CROSS JOIN B WHERE A.NAME LIKE B.RULE;\n<br>답 : 4<br>해설 :<br>SELECT COUNT(*) CNT 에서 CNT는 as CNT 가 생략된 형태이다.\n<br>CROSS JOIN이란 카디션 프로덕트(곱)을 수행하는 조인방식으로써,<br>\nA테이블의 모든 행과, B테이블의 모든 행의 모든 가능한 조합을 구한다.\n<br>따라서, 저 중 a.name컬럼이 b.rule을 따르는(like 연산을 했을 때, 참인 결과는)<br>총 4개이다.<br>","aliases":[],"tags":["#정보처리기사","#실기","#SQL","#정리"],"headers":[{"heading":"🥇 정보처리 기사 실기 SQL 문제","level":1,"id":"🥇 정보처리 기사 실기 SQL 문제"},{"heading":"1. 다음과 같이 테이블을 정의하고 튜플을 삽입하였을 때, 각 번호에 SQL문을 실행한 결과를 적으시오.","level":1,"id":"1._다음과_같이_테이블을_정의하고_튜플을_삽입하였을_때,_각_번호에_SQL문을_실행한_결과를_적으시오."},{"heading":"실행 SQL ①","level":3,"id":"실행_SQL_①"},{"heading":"실행 SQL ②","level":3,"id":"실행_SQL_②"},{"heading":"2. 학생(STUDENT) 테이블에서 SQL 실행 결과로 표시되는 튜플의 수를 예측하시오.","level":1,"id":"2._학생(STUDENT)_테이블에서_SQL_실행_결과로_표시되는_*튜플의_수*를_예측하시오."},{"heading":"실행 SQL ①","level":3,"id":"실행_SQL_①"},{"heading":"실행 SQL ②","level":3,"id":"실행_SQL_②"},{"heading":"실행 SQL ③","level":3,"id":"실행_SQL_③"},{"heading":"3. 다음 SQL문에서 괄호 안에 들어갈 알맞은 내용을 작성하시오.","level":1,"id":"3._다음_SQL문에서_괄호_안에_들어갈_알맞은_내용을_작성하시오."},{"heading":"4. 아래 테이블을 기반으로 SQL 실행 결과를 예측하시오.","level":1,"id":"4._아래_테이블을_기반으로_SQL_실행_결과를_예측하시오."},{"heading":"실행 SQL","level":3,"id":"실행_SQL"},{"heading":"5. 다음은 릴레이션에 대해 <관계 대수식>을 수행했을 때 출력되는 <결과>이다. <결과>의 각 칸(①~⑤)에 들어갈 알맞은 답을 쓰시오.","level":1,"id":"5._다음은_`<EMPLOYEE>`_릴레이션에_대해_`<관계_대수식>`을_수행했을_때_출력되는_`<결과>`이다._`<결과>`의_각_칸(①~⑤)에_들어갈_알맞은_답을_쓰시오."},{"heading":"EMPLOYEE 테이블","level":2,"id":"EMPLOYEE_테이블"},{"heading":"결과 테이블","level":2,"id":"결과_테이블"},{"heading":"✅ 1) 순수 관계 연산 (기본 연산)","level":3,"id":"✅_**1)_순수_관계_연산_(기본_연산)**"},{"heading":"✅ 2) 집합 연산 (Set Operations)","level":3,"id":"✅_**2)_집합_연산_(Set_Operations)**"},{"heading":"6. 다음 <속성 정의서>를 참고하여 <학생> 테이블에 대해 20자의 가변 길이를 가진 주소 속성을 추가하는 을 완성하시오.","level":1,"id":"6._다음_`<속성_정의서>`를_참고하여_`<학생>`_테이블에_대해_20자의_가변_길이를_가진_`주소`_속성을_추가하는_`<SQL문>`을_완성하시오."},{"heading":"속성 정의서","level":2,"id":"속성_정의서"},{"heading":"SQL문","level":2,"id":"SQL문"},{"heading":"7. 다음 <학생> 테이블을 참고하여 <처리 조건>에서 요구하는 SQL문을 작성하시오.","level":1,"id":"7._다음_`<학생>`_테이블을_참고하여_`<처리_조건>`에서_요구하는_SQL문을_작성하시오."},{"heading":"학생 테이블","level":2,"id":"학생_테이블"},{"heading":"처리 조건","level":2,"id":"처리_조건"},{"heading":"8. 다음 테이블을 참고하여 name 속성으로 idx_name이라는 인덱스를 생성하는 SQL문을 작성하시오.","level":1,"id":"8._다음_`<student>`_테이블을_참고하여_name_속성으로_idx_name이라는_**인덱스를_생성**하는_SQL문을_작성하시오."},{"heading":"9. 학생 테이블에서 학과별 튜플의 개수를 검색하시오.","level":1,"id":"9._학생_테이블에서_학과별_튜플의_개수를_검색하시오."},{"heading":"<학생> 테이블","level":2,"id":"`<학생>`_테이블"},{"heading":"<실행결과>","level":2,"id":"`<실행결과>`"},{"heading":"<처리 조건>","level":2,"id":"`<처리_조건>`"},{"heading":"10. <성적>` 테이블에서 과목별 점수의 평균이 90점 이상인 과목이름, 최소점수, 최대점수를 검색하고자 한다.","level":1,"id":"10._<성적>`_테이블에서_과목별_점수의_평균이_90점_이상인_과목이름,_최소점수,_최대점수를_검색하고자_한다."},{"heading":"<성적> 테이블","level":2,"id":"`<성적>`_테이블"},{"heading":"<결과>","level":2,"id":"`<결과>`"},{"heading":"<처리 조건>","level":2,"id":"`<처리_조건>`"},{"heading":"11.<A> 테이블과 <B> 테이블을 참고하여 <SQL문>의 실행 결과를 쓰시오.","level":1,"id":"11.`<A>`_테이블과_`<B>`_테이블을_참고하여_`<SQL문>`의_실행_결과를_쓰시오."},{"heading":"<A> 테이블","level":2,"id":"`<A>`_테이블"},{"heading":"<B> 테이블","level":2,"id":"`<B>`_테이블"},{"heading":"<SQL문>","level":2,"id":"`<SQL문>`"}],"backlinks":[],"links":["?query=tag:%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC","?query=tag:%EC%8B%A4%EA%B8%B0","?query=tag:SQL","?query=tag:%EC%A0%95%EB%A6%AC","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#🥇 정보처리 기사 실기 SQL 문제","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#1._다음과_같이_테이블을_정의하고_튜플을_삽입하였을_때,_각_번호에_SQL문을_실행한_결과를_적으시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#실행_SQL_①","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#실행_SQL_②","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#2._학생(STUDENT)_테이블에서_SQL_실행_결과로_표시되는_*튜플의_수*를_예측하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#실행_SQL_①","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#실행_SQL_②","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#실행_SQL_③","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#3._다음_SQL문에서_괄호_안에_들어갈_알맞은_내용을_작성하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#4._아래_테이블을_기반으로_SQL_실행_결과를_예측하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#실행_SQL","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#5._다음은_`<EMPLOYEE>`_릴레이션에_대해_`<관계_대수식>`을_수행했을_때_출력되는_`<결과>`이다._`<결과>`의_각_칸(①~⑤)에_들어갈_알맞은_답을_쓰시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#EMPLOYEE_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#결과_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#✅_**1)_순수_관계_연산_(기본_연산)**","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#✅_**2)_집합_연산_(Set_Operations)**","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#6._다음_`<속성_정의서>`를_참고하여_`<학생>`_테이블에_대해_20자의_가변_길이를_가진_`주소`_속성을_추가하는_`<SQL문>`을_완성하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#속성_정의서","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#SQL문","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#7._다음_`<학생>`_테이블을_참고하여_`<처리_조건>`에서_요구하는_SQL문을_작성하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#학생_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#처리_조건","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#8._다음_`<student>`_테이블을_참고하여_name_속성으로_idx_name이라는_**인덱스를_생성**하는_SQL문을_작성하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#9._학생_테이블에서_학과별_튜플의_개수를_검색하시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<학생>`_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<실행결과>`","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<처리_조건>`","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#10._<성적>`_테이블에서_과목별_점수의_평균이_90점_이상인_과목이름,_최소점수,_최대점수를_검색하고자_한다.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<성적>`_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<결과>`","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<처리_조건>`","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#11.`<A>`_테이블과_`<B>`_테이블을_참고하여_`<SQL문>`의_실행_결과를_쓰시오.","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<A>`_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<B>`_테이블","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html#`<SQL문>`"],"author":"","coverImageURL":"","fullURL":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","pathToRoot":"../../..","createdTime":1740464273334,"modifiedTime":1740551622360,"sourceSize":13344,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 SQL 문제.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","showInTree":true,"treeOrder":0,"attachments":["사진-및-문서/pasted-image-20250225161448.png"]},"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html":{"title":"🔒 투자하기 서비스 락(Lock)기법 개선안","icon":"","description":"<a class=\"tag\" href=\"?query=tag:공부\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#공부</a> <a class=\"tag\" href=\"?query=tag:Lock\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Lock</a> <a class=\"tag\" href=\"?query=tag:DB\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#DB</a> <a class=\"tag\" href=\"?query=tag:SPRING\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#SPRING</a> <a class=\"tag\" href=\"?query=tag:동시성\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#동시성</a> <br> <a href=\".?query=tag:공부\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#공부\">#공부</a> <a href=\".?query=tag:Lock\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Lock\">#Lock</a> <a href=\".?query=tag:DB\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#DB\">#DB</a> <a href=\".?query=tag:SPRING\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#SPRING\">#SPRING</a> <a href=\".?query=tag:동시성\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#동시성\">#동시성</a><br>\n<br>investView.html / 상품 선택 후 투자하기버튼 클릭\n<br>custom.invest.js / kyc체크, 개인투자자 체크 -&gt; go-invest modal(investView.html)\n<br>go-invest modal / 투자위험 동의체크, 유효성 체크 후 투자 실행 -&gt; InvestController\n<br>InvestController / MP_INVEST investAction -&gt; investService.investAction\n<br>investService.investAction / 투자신청기록, api상태체크 -&gt; SERVICE 프로젝트\n<br>SERVICE 프로젝트 investmentsService.p2pCenterInvestmentRegister(투자신청기록)\n<br>p2p(금결원) 투자신청기록 / 투자 유효성검사(시간 내 재투자, 금액체크) -&gt; p2p센터 투자잔액 조회(api)\n<br>잔액조회 후 / 수익률,기간 업데이트 등등 .. 로직 처리 후 P2PCenter 투자신청 등록\n<br>여기까지 정상 처리되면, async(비동기)로 자동기표처리\n<br>\n<br>\n초기에는 동시에 치고들어오는 클라이언트가 굉장히 많았다. <br>\n원활한 서비스를 제공과 데이터 정합성을 유지하기 위해 대기열 서비스가 아닌 락 기법을 사용. <br>\n동시성 이슈를 대응해야할 곳. <br>모집금액과 동일 차주 투자 한도를 넘지 않게 상품의 동시성\n<br>p2p투자한도와 예치금 한도를 넘지 않게 회원별 동시성<br>\n이 두 가지의 동시성 문제를 해결해야한다. <br>\n우리는 외부은행에 투자자,대출자 돈을 모두 맡겨두고 운영(신탁 운영)중이다.<br>\n-&gt; 따라서, 외부 api를 굉장히 많이 사용한다.<br>\n한도를 금결원 api를 통해 매번 체크 <br>\n실제 돈이 빠져나가는 시점은, 모든 투자기록을 마친 후, 대출을 실행하는 시점에서 돈을 가져간다.<br>\n-&gt; 만원만 있어도 여러 상품에 만원씩 여러번 투자가 가능하다. (문제 해결해야함)<br>\n회원별 동시성 <br>\n락을 잡아놓고(lock안에서의 서비스로직) api통신을 하는이유?<br>\n동시성 이슈떄문 <br>\n세마포어 뮤텍스 비관적락 등 여러 방법론이 있지만, 우리는 레디션으로 락을 구현하였다.<br>\n-&gt; 그 이유는, k8s를 통해 여러 server를 띄워놓는 분산환경이기 때문. <br>\n<br>비동기 작업 처리(예: 이메일 전송, 주문 처리, 로그 저장) → 대기열(Queue) 사용\n<br>공유 데이터 동기화(예: 재고 감소, 은행 계좌 거래, 트랜잭션 처리) → 락(Lock) 사용\n<br>분산 환경에서 높은 확장성이 필요할 경우 → 대기열이 유리\n<br>데이터 정합성이 가장 중요한 경우 → 락이 유리\n<br>\n<br>분산환경에서 사용하기 용이함.\n<br>우리의 서비스 프로젝트는 여러 서버로 이루어져있다.\n<br>보통의 락기법은 하나의 로컬(서버)에서 구현이 이뤄지기 떄문에분산락기법 -&gt; 레디션 락기법을 사용하였다.\n<br>왜냐? 우리는 쿠버네티스로 여러 서버(여러 서비스 서버)를 운영하기 때문이다.\n<br>\n<br>\n만약의 락이 풀려버리면 데이터 정합성이 무너질 수 있다.<br>\n-&gt; 락에 유효시간이 있기 떄문이다. 4초 <br>\n투자시 순서를 반드시 보장하지 못한다. <br>왜 락이 풀리지?\nlock으로 묶여있는 로직 안에 너무 많은 동작이 몰려있다.<br>\n-&gt; 그때, 4초가 넘어 버리게 된다면, 락을 놓아버리고 동시성이 깨질 수 있는 가능성이 있다.\n어쩨서?? <br>A, B에 대해 단일 투자자가 투자를 했을 때,<br>\nA상품에 대한 투자를 완료처리하여 예치금 차감이 되지 않은 상태에서 락이 풀려버린다면?<br>\nB상품에 대한 투자도 정상처리가 되어버린다. <br>-&gt; 큐 구조이긴 하나, 순차적으로 허가를 준다고 하여도 먼저 작업이 끝난 녀석부터 실행되기 때문에.<br>\n<br>중앙기록관리기관(p2p)에서 해당 상품에 대한 단일 투자기록을 요구.<br>\n즉, 하나라도 실패하면 실패한 투자건으로써 보낼수 밖에 없는 규정\n<br>\n<br>매 투자 건 별로 조회하는 개인별 투자한도를 redis로 관리하여, 투자건별 속도 개선\n<br>\n<br>상품을 미리 열어, 투자 금액 데이터를 쌓는 원리.\n<br>해당 방법을 사용하면 데이터 정합성 및 경합을위한 락 사용 불필요\n<br>주의 ! 투자 완료 후 실패 처리를 받을 가능성 존재<br>결론\n현재 신탁 운영으로 인한 한도 데이터를 직접관리하지 못하는 문제와,<br>\n보수적인 운영상의 방침으로 큰 구조 개선을 힘들어 보임\n현재는 리펙토링을 통해 lock에 묶여있는 로직을 단순화 하는것에 만족해야겠음.","aliases":[],"tags":["#공부","#Lock","#DB","#SPRING","#동시성"],"headers":[{"heading":"🔒 투자하기 서비스 락(Lock)기법 개선안","level":1,"id":"🔒 투자하기 서비스 락(Lock)기법 개선안"},{"heading":"hello 투자 flow","level":1,"id":"hello_투자_flow"},{"heading":"scf의 상품 특성과 이해","level":1,"id":"scf의_상품_특성과_이해"},{"heading":"언제 대기열 vs 락을 사용할까?","level":2,"id":"**언제_대기열_vs_락을_사용할까?**"},{"heading":"레디션이란? -> redis를 이용한 락이다.","level":2,"id":"*레디션*이란?_->_redis를_이용한_락이다."},{"heading":"투자하기에서 정확히 어떤 이슈가 있는가?","level":1,"id":"투자하기에서_정확히_어떤_이슈가_있는가?"},{"heading":"싱글스레드 큐 방식의 레디스는 왜 순서를 보장하지 않는가?","level":2,"id":"*싱글스레드_큐_방식의_레디스는_왜_순서를_보장하지_않는가?*"},{"heading":"투자 실패시 이전 투자기록까지 실패처리하는 이유??","level":1,"id":"투자_실패시_이전_투자기록까지_실패처리하는_이유??"},{"heading":"해결 방안","level":1,"id":"해결_방안"},{"heading":"1. lock으로 묶여있는 로직 단순화","level":2,"id":"1._lock으로_묶여있는_로직_단순화"},{"heading":"2. 먼저 투자를 받은 후, 데이터 순서대로 한도별 투자처리","level":1,"id":"2._먼저_투자를_받은_후,_데이터_순서대로_한도별_투자처리"}],"backlinks":[],"links":["?query=tag:%EA%B3%B5%EB%B6%80","?query=tag:Lock","?query=tag:DB","?query=tag:SPRING","?query=tag:%EB%8F%99%EC%8B%9C%EC%84%B1","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#🔒 투자하기 서비스 락(Lock)기법 개선안","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#hello_투자_flow","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#scf의_상품_특성과_이해","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#**언제_대기열_vs_락을_사용할까?**","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#*레디션*이란?_->_redis를_이용한_락이다.","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#투자하기에서_정확히_어떤_이슈가_있는가?","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#*싱글스레드_큐_방식의_레디스는_왜_순서를_보장하지_않는가?*","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#투자_실패시_이전_투자기록까지_실패처리하는_이유??","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#해결_방안","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#1._lock으로_묶여있는_로직_단순화","study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html#2._먼저_투자를_받은_후,_데이터_순서대로_한도별_투자처리"],"author":"","coverImageURL":"","fullURL":"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html","pathToRoot":"../..","createdTime":1740720025292,"modifiedTime":1740733287243,"sourceSize":5645,"sourcePath":"study/Dev Seminar/🔒 투자하기 서비스 락(Lock)기법 개선안.md","exportPath":"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html","showInTree":true,"treeOrder":0,"attachments":[]},"tools/aws/🍌-elastic-ip(탄력적-ip)란.html":{"title":"🍌 Elastic IP(탄력적 IP)란","icon":"","description":"<a class=\"tag\" href=\"?query=tag:Tools\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Tools</a> <a class=\"tag\" href=\"?query=tag:AWS\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#AWS</a> <a class=\"tag\" href=\"?query=tag:Amazon\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Amazon</a> <a class=\"tag\" href=\"?query=tag:Cloud\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#Cloud</a> <a class=\"tag\" href=\"?query=tag:EC2\" style=\"background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;\">#EC2</a> <br> <a href=\".?query=tag:Tools\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Tools\">#Tools</a> <a href=\".?query=tag:AWS\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#AWS\">#AWS</a> <a href=\".?query=tag:Amazon\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Amazon\">#Amazon</a> <a href=\".?query=tag:Cloud\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#Cloud\">#Cloud</a> <a href=\".?query=tag:EC2\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#EC2\">#EC2</a><br>\n<br>EIP는 인터넷을 통해 접속할 수 있는 고정적인 IP주소를 할당하고, 인스턴스에 연결할 수 있는 서비스를 말한다.\n<br>모든 인스턴스 또는 네트워크 인터페이스에 EIP 연결이 가능하다.\n<br>EIP를 할당받고 삭제하기 전까지, 해당 EIP를 쭉 유지할 수 있다.\n<br>정보\n도메인과 IP주소를 연결할 떄, IP주소의 변동이 있어선 안되기 때문에, EIP를 사용한다.\n<br>\n<br>aws Ec2를 올리게 되면 ENI(Elastic network interface)가 함께 생성이된다. <br>ENI는 일종의 가상 랜카드 로써, MAC주소와 보안그룹에 연결되어있으며 IP도 갖고있다.<br>\n여기서 ENI에 public IP를 달게 되면 외부에서 접속이 가능하게 되는것이다.\n<br>하지만, EC2 인스턴스의 Public IP는 고정된 주소가 아니라 유동적인 IP이다.<br>만약 DNS에 인스턴스의 Public IP를 연결해놓았는데, 해당 IP주소가 변경된다면 문제가 발생할 수 있다.<br>\n이러한 문제를 해결하고자 AWS에서 한 번 할당하면 바뀌지 않는 EIP를 제공하는 것이다.<br>주의\n다만 AWS EIP(탄력적 IP)는 유료 서비스 임으로, 사용량에 따른 월 사용료를 지불해야 사용할 수 있다.<br>\nfree요금제 또한 마찬가지로 금액이 부과된다.","aliases":[],"tags":["#Tools","#AWS","#Amazon","#Cloud","#EC2"],"headers":[{"heading":"🍌 Elastic IP(탄력적 IP)란","level":1,"id":"🍌 Elastic IP(탄력적 IP)란"},{"heading":"EIP(Elastic IP Address)","level":1,"id":"EIP(Elastic_IP_Address)"},{"heading":"EIP의 사용이유?","level":1,"id":"EIP의_사용이유?"},{"heading":"설명 보러가기🍊 aws EC2란","level":4,"id":"설명_보러가기[[🍊_aws_EC2란]]"}],"backlinks":[],"links":["?query=tag:Tools","?query=tag:AWS","?query=tag:Amazon","?query=tag:Cloud","?query=tag:EC2","tools/aws/🍊-aws-ec2란.html","tools/aws/🍌-elastic-ip(탄력적-ip)란.html#🍌 Elastic IP(탄력적 IP)란","tools/aws/🍌-elastic-ip(탄력적-ip)란.html#EIP(Elastic_IP_Address)","tools/aws/🍌-elastic-ip(탄력적-ip)란.html#EIP의_사용이유?","tools/aws/🍌-elastic-ip(탄력적-ip)란.html#설명_보러가기[[🍊_aws_EC2란]]"],"author":"","coverImageURL":"","fullURL":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html","pathToRoot":"../..","createdTime":1740361053654,"modifiedTime":1740646202048,"sourceSize":1519,"sourcePath":"Tools/aws/🍌 Elastic IP(탄력적 IP)란.md","exportPath":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html","showInTree":true,"treeOrder":0,"attachments":[]}},"fileInfo":{"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html":{"createdTime":1739783693575,"modifiedTime":1740033321729,"sourceSize":6374,"sourcePath":"project/note CI_CD/👻 Obsidian 정적호스팅 CICD 과정.md","exportPath":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html":{"createdTime":1739777477564,"modifiedTime":1740028264015,"sourceSize":52862,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 키워드.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html":{"createdTime":1739783025899,"modifiedTime":1739946883587,"sourceSize":21325,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 1과목 - 소프트웨어 설계.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html":{"createdTime":1739783025899,"modifiedTime":1739946885204,"sourceSize":11745,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 2과목 - 소프트웨어 개발.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html":{"createdTime":1739783025899,"modifiedTime":1739946886923,"sourceSize":11355,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 3과목 - 데이터베이스 구축.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html":{"createdTime":1739783025899,"modifiedTime":1739946888780,"sourceSize":25268,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 4과목 - 프로그래밍 언어 활용.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html"},"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html":{"createdTime":1739783043089,"modifiedTime":1739946892799,"sourceSize":21328,"sourcePath":"study/정보처리기사/정보처리기사 필기/🥈 필기 5과목 - 정보시스템 구축관리.md","exportPath":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html"},"study/cs/☕-java-,-oop.html":{"createdTime":1739844224869,"modifiedTime":1739946524872,"sourceSize":36029,"sourcePath":"study/CS/☕ JAVA , OOP.md","exportPath":"study/cs/☕-java-,-oop.html"},"study/cs/🍃-spring.html":{"createdTime":1739844578975,"modifiedTime":1739946652730,"sourceSize":46710,"sourcePath":"study/CS/🍃 Spring.md","exportPath":"study/cs/🍃-spring.html"},"study/cs/🎩-devops.html":{"createdTime":1739844345143,"modifiedTime":1739946867084,"sourceSize":14371,"sourcePath":"study/CS/🎩 DevOps.md","exportPath":"study/cs/🎩-devops.html"},"study/cs/🐞-etc.html":{"createdTime":1739844790888,"modifiedTime":1739946635882,"sourceSize":3884,"sourcePath":"study/CS/🐞 etc.md","exportPath":"study/cs/🐞-etc.html"},"study/cs/📔-database.html":{"createdTime":1739844411985,"modifiedTime":1740733278020,"sourceSize":10929,"sourcePath":"study/CS/📔 DataBase.md","exportPath":"study/cs/📔-database.html"},"study/cs/📭-server.html":{"createdTime":1739844706654,"modifiedTime":1739946645157,"sourceSize":6987,"sourcePath":"study/CS/📭 Server.md","exportPath":"study/cs/📭-server.html"},"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html":{"createdTime":1739950661685,"modifiedTime":1739951453006,"sourceSize":7041,"sourcePath":"study/Dev Seminar/🍂 JPA, Mybatis , Dead Lock.md","exportPath":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html"},"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html":{"createdTime":1739950797888,"modifiedTime":1739951081414,"sourceSize":6184,"sourcePath":"study/Dev Seminar/📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가.md","exportPath":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html"},"study/dev-seminar/🔹-tdd에-대하여.html":{"createdTime":1739950748159,"modifiedTime":1739951382850,"sourceSize":13216,"sourcePath":"study/Dev Seminar/🔹 TDD에 대하여.md","exportPath":"study/dev-seminar/🔹-tdd에-대하여.html"},"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html":{"createdTime":1739950696311,"modifiedTime":1739951282911,"sourceSize":11984,"sourcePath":"study/Dev Seminar/🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성.md","exportPath":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html"},"study/dev-seminar/🪕-jpa-에-대한-고찰.html":{"createdTime":1739950614572,"modifiedTime":1739951494022,"sourceSize":9300,"sourcePath":"study/Dev Seminar/🪕 JPA 에 대한 고찰.md","exportPath":"study/dev-seminar/🪕-jpa-에-대한-고찰.html"},"index.html":{"createdTime":1739779810544,"modifiedTime":1740734103202,"sourceSize":1654,"sourcePath":"index.md","exportPath":"index.html"},"사진-및-문서/pasted-image-20250110144021.png":{"createdTime":1739950851777,"modifiedTime":1739424429322,"sourceSize":46877,"sourcePath":"사진 및 문서/Pasted image 20250110144021.png","exportPath":"사진-및-문서/pasted-image-20250110144021.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241206140739.png":{"createdTime":1739950851625,"modifiedTime":1739424429279,"sourceSize":207335,"sourcePath":"사진 및 문서/Pasted image 20241206140739.png","exportPath":"사진-및-문서/pasted-image-20241206140739.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241206140822.png":{"createdTime":1739950851626,"modifiedTime":1739424429282,"sourceSize":402790,"sourcePath":"사진 및 문서/Pasted image 20241206140822.png","exportPath":"사진-및-문서/pasted-image-20241206140822.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241220113308.png":{"createdTime":1739950851645,"modifiedTime":1739424429291,"sourceSize":45942,"sourcePath":"사진 및 문서/Pasted image 20241220113308.png","exportPath":"사진-및-문서/pasted-image-20241220113308.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241220113315.png":{"createdTime":1739950851648,"modifiedTime":1739424429292,"sourceSize":29805,"sourcePath":"사진 및 문서/Pasted image 20241220113315.png","exportPath":"사진-및-문서/pasted-image-20241220113315.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218151731.png":{"createdTime":1739863854055,"modifiedTime":1739859451768,"sourceSize":36657,"sourcePath":"사진 및 문서/Pasted image 20250218151731.png","exportPath":"사진-및-문서/pasted-image-20250218151731.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218151806.png":{"createdTime":1739863854057,"modifiedTime":1739859486188,"sourceSize":23625,"sourcePath":"사진 및 문서/Pasted image 20250218151806.png","exportPath":"사진-및-문서/pasted-image-20250218151806.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218152044.png":{"createdTime":1739863854062,"modifiedTime":1739859644718,"sourceSize":46477,"sourcePath":"사진 및 문서/Pasted image 20250218152044.png","exportPath":"사진-및-문서/pasted-image-20250218152044.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218152103.png":{"createdTime":1739863854063,"modifiedTime":1739859663830,"sourceSize":47581,"sourcePath":"사진 및 문서/Pasted image 20250218152103.png","exportPath":"사진-및-문서/pasted-image-20250218152103.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153131.png":{"createdTime":1739863854065,"modifiedTime":1739860291108,"sourceSize":5662,"sourcePath":"사진 및 문서/Pasted image 20250218153131.png","exportPath":"사진-및-문서/pasted-image-20250218153131.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153319.png":{"createdTime":1739863854066,"modifiedTime":1739860399141,"sourceSize":4846,"sourcePath":"사진 및 문서/Pasted image 20250218153319.png","exportPath":"사진-및-문서/pasted-image-20250218153319.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153445.png":{"createdTime":1739863854070,"modifiedTime":1739860485474,"sourceSize":3834,"sourcePath":"사진 및 문서/Pasted image 20250218153445.png","exportPath":"사진-및-문서/pasted-image-20250218153445.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153543.png":{"createdTime":1739863854071,"modifiedTime":1739860543611,"sourceSize":51007,"sourcePath":"사진 및 문서/Pasted image 20250218153543.png","exportPath":"사진-및-문서/pasted-image-20250218153543.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153553.png":{"createdTime":1739863854073,"modifiedTime":1739860553053,"sourceSize":36756,"sourcePath":"사진 및 문서/Pasted image 20250218153553.png","exportPath":"사진-및-문서/pasted-image-20250218153553.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218151330.png":{"createdTime":1739863854053,"modifiedTime":1739859210349,"sourceSize":323323,"sourcePath":"사진 및 문서/Pasted image 20250218151330.png","exportPath":"사진-및-문서/pasted-image-20250218151330.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153814.png":{"createdTime":1739863854075,"modifiedTime":1739860694285,"sourceSize":94156,"sourcePath":"사진 및 문서/Pasted image 20250218153814.png","exportPath":"사진-및-문서/pasted-image-20250218153814.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218153858.png":{"createdTime":1739863854077,"modifiedTime":1739860738867,"sourceSize":18633,"sourcePath":"사진 및 문서/Pasted image 20250218153858.png","exportPath":"사진-및-문서/pasted-image-20250218153858.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154352.png":{"createdTime":1739863854079,"modifiedTime":1739861032727,"sourceSize":32120,"sourcePath":"사진 및 문서/Pasted image 20250218154352.png","exportPath":"사진-및-문서/pasted-image-20250218154352.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154433.png":{"createdTime":1739863854079,"modifiedTime":1739861073109,"sourceSize":71085,"sourcePath":"사진 및 문서/Pasted image 20250218154433.png","exportPath":"사진-및-문서/pasted-image-20250218154433.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154615.png":{"createdTime":1739863854079,"modifiedTime":1739861175610,"sourceSize":19734,"sourcePath":"사진 및 문서/Pasted image 20250218154615.png","exportPath":"사진-및-문서/pasted-image-20250218154615.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154633.png":{"createdTime":1739863854079,"modifiedTime":1739861193533,"sourceSize":7603,"sourcePath":"사진 및 문서/Pasted image 20250218154633.png","exportPath":"사진-및-문서/pasted-image-20250218154633.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218154647.png":{"createdTime":1739863854079,"modifiedTime":1739861207274,"sourceSize":79039,"sourcePath":"사진 및 문서/Pasted image 20250218154647.png","exportPath":"사진-및-문서/pasted-image-20250218154647.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218155524.png":{"createdTime":1739863854079,"modifiedTime":1739861724018,"sourceSize":72167,"sourcePath":"사진 및 문서/Pasted image 20250218155524.png","exportPath":"사진-및-문서/pasted-image-20250218155524.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160328.png":{"createdTime":1739863854079,"modifiedTime":1739862208474,"sourceSize":15278,"sourcePath":"사진 및 문서/Pasted image 20250218160328.png","exportPath":"사진-및-문서/pasted-image-20250218160328.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160359.png":{"createdTime":1739863854079,"modifiedTime":1739862239425,"sourceSize":15865,"sourcePath":"사진 및 문서/Pasted image 20250218160359.png","exportPath":"사진-및-문서/pasted-image-20250218160359.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160428.png":{"createdTime":1739863854096,"modifiedTime":1739862268957,"sourceSize":43414,"sourcePath":"사진 및 문서/Pasted image 20250218160428.png","exportPath":"사진-및-문서/pasted-image-20250218160428.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160532.png":{"createdTime":1739863854099,"modifiedTime":1739862332221,"sourceSize":16755,"sourcePath":"사진 및 문서/Pasted image 20250218160532.png","exportPath":"사진-및-문서/pasted-image-20250218160532.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218160956.png":{"createdTime":1739863854101,"modifiedTime":1739862596018,"sourceSize":71694,"sourcePath":"사진 및 문서/Pasted image 20250218160956.png","exportPath":"사진-및-문서/pasted-image-20250218160956.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161424.png":{"createdTime":1739863854104,"modifiedTime":1739863222819,"sourceSize":88775,"sourcePath":"사진 및 문서/Pasted image 20250218161424.png","exportPath":"사진-및-문서/pasted-image-20250218161424.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161515.png":{"createdTime":1739863854106,"modifiedTime":1739863222820,"sourceSize":66971,"sourcePath":"사진 및 문서/Pasted image 20250218161515.png","exportPath":"사진-및-문서/pasted-image-20250218161515.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161728.png":{"createdTime":1739863854109,"modifiedTime":1739863222821,"sourceSize":36864,"sourcePath":"사진 및 문서/Pasted image 20250218161728.png","exportPath":"사진-및-문서/pasted-image-20250218161728.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161824.png":{"createdTime":1739863854112,"modifiedTime":1739863222822,"sourceSize":81212,"sourcePath":"사진 및 문서/Pasted image 20250218161824.png","exportPath":"사진-및-문서/pasted-image-20250218161824.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161847.png":{"createdTime":1739863854114,"modifiedTime":1739863222823,"sourceSize":57171,"sourcePath":"사진 및 문서/Pasted image 20250218161847.png","exportPath":"사진-및-문서/pasted-image-20250218161847.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218161937.png":{"createdTime":1739863854116,"modifiedTime":1739863222823,"sourceSize":47752,"sourcePath":"사진 및 문서/Pasted image 20250218161937.png","exportPath":"사진-및-문서/pasted-image-20250218161937.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218162355.png":{"createdTime":1739863854120,"modifiedTime":1739863435970,"sourceSize":174935,"sourcePath":"사진 및 문서/Pasted image 20250218162355.png","exportPath":"사진-및-문서/pasted-image-20250218162355.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png":{"createdTime":1739950849162,"modifiedTime":1739949560211,"sourceSize":174630,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-19_16_19_04.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250219154331.png":{"createdTime":1739950852026,"modifiedTime":1739947411858,"sourceSize":151126,"sourcePath":"사진 및 문서/Pasted image 20250219154331.png","exportPath":"사진-및-문서/pasted-image-20250219154331.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250219154315.png":{"createdTime":1739950852024,"modifiedTime":1739947395101,"sourceSize":32194,"sourcePath":"사진 및 문서/Pasted image 20250219154315.png","exportPath":"사진-및-문서/pasted-image-20250219154315.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(1).png":{"createdTime":1739842929644,"modifiedTime":1739424429378,"sourceSize":145878,"sourcePath":"사진 및 문서/output (1).png","exportPath":"사진-및-문서/output-(1).png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241206113120.png":{"createdTime":1739842930067,"modifiedTime":1739424429278,"sourceSize":53681,"sourcePath":"사진 및 문서/Pasted image 20241206113120.png","exportPath":"사진-및-문서/pasted-image-20241206113120.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213102128.png":{"createdTime":1739842930072,"modifiedTime":1739424429282,"sourceSize":22774,"sourcePath":"사진 및 문서/Pasted image 20241213102128.png","exportPath":"사진-및-문서/pasted-image-20241213102128.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213102229.png":{"createdTime":1739842930074,"modifiedTime":1739424429284,"sourceSize":212552,"sourcePath":"사진 및 문서/Pasted image 20241213102229.png","exportPath":"사진-및-문서/pasted-image-20241213102229.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213143101.png":{"createdTime":1739842930077,"modifiedTime":1739424429288,"sourceSize":547915,"sourcePath":"사진 및 문서/Pasted image 20241213143101.png","exportPath":"사진-및-문서/pasted-image-20241213143101.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213143217.png":{"createdTime":1739842930079,"modifiedTime":1739424429289,"sourceSize":19870,"sourcePath":"사진 및 문서/Pasted image 20241213143217.png","exportPath":"사진-및-문서/pasted-image-20241213143217.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241213103503.png":{"createdTime":1739842930076,"modifiedTime":1739424429285,"sourceSize":86553,"sourcePath":"사진 및 문서/Pasted image 20241213103503.png","exportPath":"사진-및-문서/pasted-image-20241213103503.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241217150339.png":{"createdTime":1739842930081,"modifiedTime":1739424429290,"sourceSize":140545,"sourcePath":"사진 및 문서/Pasted image 20241217150339.png","exportPath":"사진-및-문서/pasted-image-20241217150339.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241219145746.png":{"createdTime":1739842930081,"modifiedTime":1739424429291,"sourceSize":86893,"sourcePath":"사진 및 문서/Pasted image 20241219145746.png","exportPath":"사진-및-문서/pasted-image-20241219145746.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(9)-1.png":{"createdTime":1739842929647,"modifiedTime":1739424429382,"sourceSize":156393,"sourcePath":"사진 및 문서/output (9) 1.png","exportPath":"사진-및-문서/output-(9)-1.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(10).png":{"createdTime":1739842929651,"modifiedTime":1739424429379,"sourceSize":133656,"sourcePath":"사진 및 문서/output (10).png","exportPath":"사진-및-문서/output-(10).png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png":{"createdTime":1739842929615,"modifiedTime":1739424429375,"sourceSize":146024,"sourcePath":"사진 및 문서/do-messenger_screenshot_2024-12-23_14_40_21.png","exportPath":"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224093159.png":{"createdTime":1739842930090,"modifiedTime":1739424429294,"sourceSize":85534,"sourcePath":"사진 및 문서/Pasted image 20241224093159.png","exportPath":"사진-및-문서/pasted-image-20241224093159.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224093207.png":{"createdTime":1739842930092,"modifiedTime":1739424429294,"sourceSize":25919,"sourcePath":"사진 및 문서/Pasted image 20241224093207.png","exportPath":"사진-및-문서/pasted-image-20241224093207.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224093225.png":{"createdTime":1739842930093,"modifiedTime":1739424429295,"sourceSize":39658,"sourcePath":"사진 및 문서/Pasted image 20241224093225.png","exportPath":"사진-및-문서/pasted-image-20241224093225.png","showInTree":false,"treeOrder":0},"사진-및-문서/회사-은행-서비스1111.png":{"createdTime":1739842929615,"modifiedTime":1739424429407,"sourceSize":82216,"sourcePath":"사진 및 문서/회사 은행 서비스1111.png","exportPath":"사진-및-문서/회사-은행-서비스1111.png","showInTree":false,"treeOrder":0},"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png":{"createdTime":1739842930208,"modifiedTime":1739424429372,"sourceSize":104557,"sourcePath":"사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 1.png","exportPath":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","showInTree":false,"treeOrder":0},"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png":{"createdTime":1739842930210,"modifiedTime":1739424429373,"sourceSize":113338,"sourcePath":"사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 잘못된 차액발생 인식 타임라인.png","exportPath":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241224144309.png":{"createdTime":1739839894811,"modifiedTime":1739424429296,"sourceSize":65503,"sourcePath":"사진 및 문서/Pasted image 20241224144309.png","exportPath":"사진-및-문서/pasted-image-20241224144309.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241226111559.png":{"createdTime":1739839894815,"modifiedTime":1739424429298,"sourceSize":55022,"sourcePath":"사진 및 문서/Pasted image 20241226111559.png","exportPath":"사진-및-문서/pasted-image-20241226111559.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241226152219.png":{"createdTime":1739839894817,"modifiedTime":1739424429298,"sourceSize":5000,"sourcePath":"사진 및 문서/Pasted image 20241226152219.png","exportPath":"사진-및-문서/pasted-image-20241226152219.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241226171158.png":{"createdTime":1739783575051,"modifiedTime":1739424429299,"sourceSize":37765,"sourcePath":"사진 및 문서/Pasted image 20241226171158.png","exportPath":"사진-및-문서/pasted-image-20241226171158.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241230135801.png":{"createdTime":1739839894821,"modifiedTime":1739424429300,"sourceSize":120367,"sourcePath":"사진 및 문서/Pasted image 20241230135801.png","exportPath":"사진-및-문서/pasted-image-20241230135801.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250102160213.png":{"createdTime":1739839894826,"modifiedTime":1739424429302,"sourceSize":108505,"sourcePath":"사진 및 문서/Pasted image 20250102160213.png","exportPath":"사진-및-문서/pasted-image-20250102160213.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250102160223.png":{"createdTime":1739839894828,"modifiedTime":1739424429303,"sourceSize":29848,"sourcePath":"사진 및 문서/Pasted image 20250102160223.png","exportPath":"사진-및-문서/pasted-image-20250102160223.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531162124.png":{"createdTime":1739844879942,"modifiedTime":1739424428649,"sourceSize":142328,"sourcePath":"사진 및 문서/Pasted image 20240531162124.png","exportPath":"사진-및-문서/pasted-image-20240531162124.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240722180706.png":{"createdTime":1739844880028,"modifiedTime":1739424428938,"sourceSize":191141,"sourcePath":"사진 및 문서/Pasted image 20240722180706.png","exportPath":"사진-및-문서/pasted-image-20240722180706.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240610171904.png":{"createdTime":1739844879954,"modifiedTime":1739424428655,"sourceSize":48061,"sourcePath":"사진 및 문서/Pasted image 20240610171904.png","exportPath":"사진-및-문서/pasted-image-20240610171904.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531103441.png":{"createdTime":1739844879928,"modifiedTime":1739424428629,"sourceSize":13085,"sourcePath":"사진 및 문서/Pasted image 20240531103441.png","exportPath":"사진-및-문서/pasted-image-20240531103441.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531103549.png":{"createdTime":1739844879930,"modifiedTime":1739424428629,"sourceSize":13731,"sourcePath":"사진 및 문서/Pasted image 20240531103549.png","exportPath":"사진-및-문서/pasted-image-20240531103549.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531105228.png":{"createdTime":1739844879938,"modifiedTime":1739424428647,"sourceSize":68992,"sourcePath":"사진 및 문서/Pasted image 20240531105228.png","exportPath":"사진-및-문서/pasted-image-20240531105228.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531105241.png":{"createdTime":1739844879940,"modifiedTime":1739424428648,"sourceSize":74304,"sourcePath":"사진 및 문서/Pasted image 20240531105241.png","exportPath":"사진-및-문서/pasted-image-20240531105241.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104351.png":{"createdTime":1739844879931,"modifiedTime":1739424428630,"sourceSize":47662,"sourcePath":"사진 및 문서/Pasted image 20240531104351.png","exportPath":"사진-및-문서/pasted-image-20240531104351.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104418.png":{"createdTime":1739844879933,"modifiedTime":1739424428631,"sourceSize":27661,"sourcePath":"사진 및 문서/Pasted image 20240531104418.png","exportPath":"사진-및-문서/pasted-image-20240531104418.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104751.png":{"createdTime":1739844879935,"modifiedTime":1739424428631,"sourceSize":24466,"sourcePath":"사진 및 문서/Pasted image 20240531104751.png","exportPath":"사진-및-문서/pasted-image-20240531104751.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240531104803.png":{"createdTime":1739844879937,"modifiedTime":1739424428632,"sourceSize":35445,"sourcePath":"사진 및 문서/Pasted image 20240531104803.png","exportPath":"사진-및-문서/pasted-image-20240531104803.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240828104032.png":{"createdTime":1739844880154,"modifiedTime":1739424429090,"sourceSize":89251,"sourcePath":"사진 및 문서/Pasted image 20240828104032.png","exportPath":"사진-및-문서/pasted-image-20240828104032.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240828104728.png":{"createdTime":1739844880156,"modifiedTime":1739424429091,"sourceSize":123190,"sourcePath":"사진 및 문서/Pasted image 20240828104728.png","exportPath":"사진-및-문서/pasted-image-20240828104728.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(9).png":{"createdTime":1739842929649,"modifiedTime":1739424429383,"sourceSize":156393,"sourcePath":"사진 및 문서/output (9).png","exportPath":"사진-및-문서/output-(9).png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250102181842.png":{"createdTime":1739783575073,"modifiedTime":1739424429304,"sourceSize":30146,"sourcePath":"사진 및 문서/Pasted image 20250102181842.png","exportPath":"사진-및-문서/pasted-image-20250102181842.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png":{"createdTime":1739783573850,"modifiedTime":1739424428406,"sourceSize":99317,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-10_15_04_45.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png":{"createdTime":1739783573853,"modifiedTime":1739424428407,"sourceSize":122009,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-10_17_10_58.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png":{"createdTime":1739783573857,"modifiedTime":1739424428408,"sourceSize":220968,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-11_13_47_16.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png":{"createdTime":1739783573860,"modifiedTime":1739424428409,"sourceSize":63401,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-11_15_32_34.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png":{"createdTime":1739783573863,"modifiedTime":1739424428411,"sourceSize":131078,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-11_16_31_10.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png","showInTree":false,"treeOrder":0},"사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png":{"createdTime":1739783573867,"modifiedTime":1739424428412,"sourceSize":159770,"sourcePath":"사진 및 문서/do-messenger_screenshot_2025-02-12_14_04_58.png","exportPath":"사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240611144129.png":{"createdTime":1739844879956,"modifiedTime":1739424428657,"sourceSize":167252,"sourcePath":"사진 및 문서/Pasted image 20240611144129.png","exportPath":"사진-및-문서/pasted-image-20240611144129.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240605160336.png":{"createdTime":1739844879953,"modifiedTime":1739424428654,"sourceSize":84155,"sourcePath":"사진 및 문서/Pasted image 20240605160336.png","exportPath":"사진-및-문서/pasted-image-20240605160336.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240723134224.png":{"createdTime":1739844880035,"modifiedTime":1739424428974,"sourceSize":33317,"sourcePath":"사진 및 문서/Pasted image 20240723134224.png","exportPath":"사진-및-문서/pasted-image-20240723134224.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240723134333.png":{"createdTime":1739844880037,"modifiedTime":1739424428975,"sourceSize":27480,"sourcePath":"사진 및 문서/Pasted image 20240723134333.png","exportPath":"사진-및-문서/pasted-image-20240723134333.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240603173517.png":{"createdTime":1739844879943,"modifiedTime":1739424428650,"sourceSize":35221,"sourcePath":"사진 및 문서/Pasted image 20240603173517.png","exportPath":"사진-및-문서/pasted-image-20240603173517.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240603180042.png":{"createdTime":1739844879946,"modifiedTime":1739424428651,"sourceSize":54764,"sourcePath":"사진 및 문서/Pasted image 20240603180042.png","exportPath":"사진-및-문서/pasted-image-20240603180042.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240604102140.png":{"createdTime":1739844879948,"modifiedTime":1739424428652,"sourceSize":70352,"sourcePath":"사진 및 문서/Pasted image 20240604102140.png","exportPath":"사진-및-문서/pasted-image-20240604102140.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20240604144026.png":{"createdTime":1739844879949,"modifiedTime":1739424428653,"sourceSize":65753,"sourcePath":"사진 및 문서/Pasted image 20240604144026.png","exportPath":"사진-및-문서/pasted-image-20240604144026.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218145702.png":{"createdTime":1739863854050,"modifiedTime":1739858222077,"sourceSize":27774,"sourcePath":"사진 및 문서/Pasted image 20250218145702.png","exportPath":"사진-및-문서/pasted-image-20250218145702.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250218145823.png":{"createdTime":1739863854052,"modifiedTime":1739858303156,"sourceSize":178936,"sourcePath":"사진 및 문서/Pasted image 20250218145823.png","exportPath":"사진-및-문서/pasted-image-20250218145823.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110101642.png":{"createdTime":1739844880435,"modifiedTime":1739424429320,"sourceSize":69526,"sourcePath":"사진 및 문서/Pasted image 20250110101642.png","exportPath":"사진-및-문서/pasted-image-20250110101642.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110103409.png":{"createdTime":1739844880437,"modifiedTime":1739424429321,"sourceSize":95529,"sourcePath":"사진 및 문서/Pasted image 20250110103409.png","exportPath":"사진-및-문서/pasted-image-20250110103409.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250110122312.png":{"createdTime":1739844880438,"modifiedTime":1739424429321,"sourceSize":33411,"sourcePath":"사진 및 문서/Pasted image 20250110122312.png","exportPath":"사진-및-문서/pasted-image-20250110122312.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250122111223.png":{"createdTime":1739844880474,"modifiedTime":1739424429368,"sourceSize":228572,"sourcePath":"사진 및 문서/Pasted image 20250122111223.png","exportPath":"사진-및-문서/pasted-image-20250122111223.png","showInTree":false,"treeOrder":0},"lib/scripts/graph-wasm.wasm":{"createdTime":1740732016027,"modifiedTime":1739944056206.8618,"sourceSize":23377,"sourcePath":"","exportPath":"lib/scripts/graph-wasm.wasm","showInTree":false,"treeOrder":0},"lib/fonts/94f2f163d4b698242fef.otf":{"createdTime":1740734318360,"modifiedTime":1740734318360,"sourceSize":66800,"sourcePath":"","exportPath":"lib/fonts/94f2f163d4b698242fef.otf","showInTree":false,"treeOrder":0},"lib/fonts/72505e6a122c6acd5471.woff2":{"createdTime":1740734318361,"modifiedTime":1740734318361,"sourceSize":104232,"sourcePath":"","exportPath":"lib/fonts/72505e6a122c6acd5471.woff2","showInTree":false,"treeOrder":0},"lib/fonts/2d5198822ab091ce4305.woff2":{"createdTime":1740734318361,"modifiedTime":1740734318361,"sourceSize":104332,"sourcePath":"","exportPath":"lib/fonts/2d5198822ab091ce4305.woff2","showInTree":false,"treeOrder":0},"lib/fonts/c8ba52b05a9ef10f4758.woff2":{"createdTime":1740734318362,"modifiedTime":1740734318362,"sourceSize":98868,"sourcePath":"","exportPath":"lib/fonts/c8ba52b05a9ef10f4758.woff2","showInTree":false,"treeOrder":0},"lib/fonts/cb10ffd7684cd9836a05.woff2":{"createdTime":1740734318363,"modifiedTime":1740734318363,"sourceSize":106876,"sourcePath":"","exportPath":"lib/fonts/cb10ffd7684cd9836a05.woff2","showInTree":false,"treeOrder":0},"lib/fonts/b5f0f109bc88052d4000.woff2":{"createdTime":1740734318364,"modifiedTime":1740734318364,"sourceSize":105804,"sourcePath":"","exportPath":"lib/fonts/b5f0f109bc88052d4000.woff2","showInTree":false,"treeOrder":0},"lib/fonts/cbe0ae49c52c920fd563.woff2":{"createdTime":1740734318365,"modifiedTime":1740734318365,"sourceSize":106108,"sourcePath":"","exportPath":"lib/fonts/cbe0ae49c52c920fd563.woff2","showInTree":false,"treeOrder":0},"lib/fonts/535a6cf662596b3bd6a6.woff2":{"createdTime":1740734318366,"modifiedTime":1740734318366,"sourceSize":111708,"sourcePath":"","exportPath":"lib/fonts/535a6cf662596b3bd6a6.woff2","showInTree":false,"treeOrder":0},"lib/fonts/70cc7ff27245e82ad414.ttf":{"createdTime":1740734318381,"modifiedTime":1740734318381,"sourceSize":192740,"sourcePath":"","exportPath":"lib/fonts/70cc7ff27245e82ad414.ttf","showInTree":false,"treeOrder":0},"lib/fonts/454577c22304619db035.ttf":{"createdTime":1740734318366,"modifiedTime":1740734318366,"sourceSize":161376,"sourcePath":"","exportPath":"lib/fonts/454577c22304619db035.ttf","showInTree":false,"treeOrder":0},"lib/fonts/52ac8f3034507f1d9e53.ttf":{"createdTime":1740734318367,"modifiedTime":1740734318367,"sourceSize":191568,"sourcePath":"","exportPath":"lib/fonts/52ac8f3034507f1d9e53.ttf","showInTree":false,"treeOrder":0},"lib/fonts/05b618077343fbbd92b7.ttf":{"createdTime":1740734318368,"modifiedTime":1740734318368,"sourceSize":155288,"sourcePath":"","exportPath":"lib/fonts/05b618077343fbbd92b7.ttf","showInTree":false,"treeOrder":0},"lib/fonts/4bb6ac751d1c5478ff3a.woff2":{"createdTime":1740734318346,"modifiedTime":1740734318346,"sourceSize":7876,"sourcePath":"","exportPath":"lib/fonts/4bb6ac751d1c5478ff3a.woff2","showInTree":false,"treeOrder":0},"lib/media/6155340132a851f6089e.svg":{"createdTime":1740734318347,"modifiedTime":1740734318347,"sourceSize":315,"sourcePath":"","exportPath":"lib/media/6155340132a851f6089e.svg","showInTree":false,"treeOrder":0},"lib/media/2308ab1944a6bfa5c5b8.svg":{"createdTime":1740734318348,"modifiedTime":1740734318348,"sourceSize":278,"sourcePath":"","exportPath":"lib/media/2308ab1944a6bfa5c5b8.svg","showInTree":false,"treeOrder":0},"lib/html/file-tree.html":{"createdTime":1740734318716,"modifiedTime":1740734318716,"sourceSize":33827,"sourcePath":"","exportPath":"lib/html/file-tree.html","showInTree":false,"treeOrder":0},"lib/scripts/webpage.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":49059,"sourcePath":"","exportPath":"lib/scripts/webpage.js","showInTree":false,"treeOrder":0},"lib/scripts/graph-view.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":15519,"sourcePath":"","exportPath":"lib/scripts/graph-view.js","showInTree":false,"treeOrder":0},"lib/scripts/graph-wasm.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":14021,"sourcePath":"","exportPath":"lib/scripts/graph-wasm.js","showInTree":false,"treeOrder":0},"lib/scripts/graph-render-worker.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":5179,"sourcePath":"","exportPath":"lib/scripts/graph-render-worker.js","showInTree":false,"treeOrder":0},"lib/scripts/tinycolor.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":29832,"sourcePath":"","exportPath":"lib/scripts/tinycolor.js","showInTree":false,"treeOrder":0},"lib/scripts/pixi.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":449509,"sourcePath":"","exportPath":"lib/scripts/pixi.js","showInTree":false,"treeOrder":0},"lib/scripts/minisearch.js":{"createdTime":1740732017628,"modifiedTime":1740732017628,"sourceSize":29422,"sourcePath":"","exportPath":"lib/scripts/minisearch.js","showInTree":false,"treeOrder":0},"lib/media/favicon.png":{"createdTime":1740734318299,"modifiedTime":1740734318299,"sourceSize":1105,"sourcePath":"","exportPath":"lib/media/favicon.png","showInTree":false,"treeOrder":0},"lib/scripts/graph-data.js":{"createdTime":1740734318718,"modifiedTime":1740734318718,"sourceSize":4469,"sourcePath":"","exportPath":"lib/scripts/graph-data.js","showInTree":false,"treeOrder":0},"lib/styles/obsidian.css":{"createdTime":1740734318544,"modifiedTime":1740734318544,"sourceSize":399091,"sourcePath":"","exportPath":"lib/styles/obsidian.css","showInTree":false,"treeOrder":0},"lib/styles/other-plugins.css":{"createdTime":1740732017917,"modifiedTime":1740732017917,"sourceSize":2702,"sourcePath":"","exportPath":"lib/styles/other-plugins.css","showInTree":false,"treeOrder":0},"lib/styles/theme.css":{"createdTime":1740732017912,"modifiedTime":1740732017912,"sourceSize":41426,"sourcePath":"","exportPath":"lib/styles/theme.css","showInTree":false,"treeOrder":0},"lib/styles/global-variable-styles.css":{"createdTime":1740734318318,"modifiedTime":1740734318318,"sourceSize":417,"sourcePath":"","exportPath":"lib/styles/global-variable-styles.css","showInTree":false,"treeOrder":0},"lib/styles/supported-plugins.css":{"createdTime":1740734318318,"modifiedTime":1740734318318,"sourceSize":1640,"sourcePath":"","exportPath":"lib/styles/supported-plugins.css","showInTree":false,"treeOrder":0},"lib/styles/main-styles.css":{"createdTime":1740732017653,"modifiedTime":1740732017653,"sourceSize":19271,"sourcePath":"","exportPath":"lib/styles/main-styles.css","showInTree":false,"treeOrder":0},"lib/metadata.json":{"createdTime":1740734330468,"modifiedTime":1740734330468,"sourceSize":284510,"sourcePath":"","exportPath":"lib/metadata.json","showInTree":false,"treeOrder":0},"lib/search-index.json":{"createdTime":1740734330468,"modifiedTime":1740734330468,"sourceSize":219469,"sourcePath":"","exportPath":"lib/search-index.json","showInTree":false,"treeOrder":0},"lib/rss.xml":{"createdTime":1739951752559,"modifiedTime":1739951752559,"sourceSize":184199,"sourcePath":"","exportPath":"lib/rss.xml","showInTree":false,"treeOrder":0},"tools/🎵-obsidian.html":{"createdTime":1739863713458,"modifiedTime":1739954777611,"sourceSize":5657,"sourcePath":"Tools/🎵 Obsidian.md","exportPath":"tools/🎵-obsidian.html"},"study/커리큘럼/🆕-dev-커리큘럼.html":{"createdTime":1740017929179,"modifiedTime":1740027066919,"sourceSize":69,"sourcePath":"study/커리큘럼/🆕 Dev 커리큘럼.md","exportPath":"study/커리큘럼/🆕-dev-커리큘럼.html"},"project/💻-프로젝트.html":{"createdTime":1740028413454,"modifiedTime":1740733839079,"sourceSize":750,"sourcePath":"project/💻 프로젝트.md","exportPath":"project/💻-프로젝트.html"},"study/📕-공부.html":{"createdTime":1740028632740,"modifiedTime":1740733661958,"sourceSize":1474,"sourcePath":"study/📕 공부.md","exportPath":"study/📕-공부.html"},"study/coding-test/👽-algorithm.html":{"createdTime":1740031282530,"modifiedTime":1740107593302,"sourceSize":140,"sourcePath":"study/Coding Test/👽 Algorithm.md","exportPath":"study/coding-test/👽-algorithm.html"},"study/coding-test/🤠-coding-test-풀이-모음.html":{"createdTime":1740030994816,"modifiedTime":1740032047241,"sourceSize":673,"sourcePath":"study/Coding Test/🤠 Coding Test 풀이 모음.md","exportPath":"study/coding-test/🤠-coding-test-풀이-모음.html"},"사진-및-문서/pasted-image-20250220144552.png":{"createdTime":1740030352059,"modifiedTime":1740030352059,"sourceSize":133564,"sourcePath":"사진 및 문서/Pasted image 20250220144552.png","exportPath":"사진-및-문서/pasted-image-20250220144552.png","showInTree":false,"treeOrder":0},"project/note-ci_cd/⛈-obsidian-aws연동.html":{"createdTime":1740035686504,"modifiedTime":1740558017469,"sourceSize":95,"sourcePath":"project/note CI_CD/⛈ Obsidian-AWS연동.md","exportPath":"project/note-ci_cd/⛈-obsidian-aws연동.html"},"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html":{"createdTime":1740105237396,"modifiedTime":1740361077682,"sourceSize":9994,"sourcePath":"Tools/aws/🌥 aws(EC2)셋팅부터 배포까지.md","exportPath":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html"},"tools/aws/🍊-aws-ec2란.html":{"createdTime":1740105237396,"modifiedTime":1740361069051,"sourceSize":3324,"sourcePath":"Tools/aws/🍊 aws EC2란.md","exportPath":"tools/aws/🍊-aws-ec2란.html"},"tools/docker/🐋-docker.html":{"createdTime":1740105237396,"modifiedTime":1740108237156,"sourceSize":3097,"sourcePath":"Tools/docker/🐋 docker.md","exportPath":"tools/docker/🐋-docker.html"},"tools/docker/📘-springboot-&-docker-+-reids-연동.html":{"createdTime":1740105237396,"modifiedTime":1740113417219,"sourceSize":10946,"sourcePath":"Tools/docker/📘 SpringBoot & Docker + Reids 연동.md","exportPath":"tools/docker/📘-springboot-&-docker-+-reids-연동.html"},"사진-및-문서/pasted-image-20250221114306.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":33790,"sourcePath":"사진 및 문서/Pasted image 20250221114306.png","exportPath":"사진-및-문서/pasted-image-20250221114306.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114324.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":4466,"sourcePath":"사진 및 문서/Pasted image 20250221114324.png","exportPath":"사진-및-문서/pasted-image-20250221114324.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114327.png":{"createdTime":1740106714954,"modifiedTime":1740106714955,"sourceSize":95731,"sourcePath":"사진 및 문서/Pasted image 20250221114327.png","exportPath":"사진-및-문서/pasted-image-20250221114327.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114334.png":{"createdTime":1740106714955,"modifiedTime":1740106714955,"sourceSize":47629,"sourcePath":"사진 및 문서/Pasted image 20250221114334.png","exportPath":"사진-및-문서/pasted-image-20250221114334.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114339.png":{"createdTime":1740106714956,"modifiedTime":1740106714956,"sourceSize":8362,"sourcePath":"사진 및 문서/Pasted image 20250221114339.png","exportPath":"사진-및-문서/pasted-image-20250221114339.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114345.png":{"createdTime":1740106714957,"modifiedTime":1740106714958,"sourceSize":228624,"sourcePath":"사진 및 문서/Pasted image 20250221114345.png","exportPath":"사진-및-문서/pasted-image-20250221114345.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114353.png":{"createdTime":1740106714960,"modifiedTime":1740106714960,"sourceSize":169113,"sourcePath":"사진 및 문서/Pasted image 20250221114353.png","exportPath":"사진-및-문서/pasted-image-20250221114353.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114400.png":{"createdTime":1740106714960,"modifiedTime":1740106714960,"sourceSize":142112,"sourcePath":"사진 및 문서/Pasted image 20250221114400.png","exportPath":"사진-및-문서/pasted-image-20250221114400.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114406.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":124822,"sourcePath":"사진 및 문서/Pasted image 20250221114406.png","exportPath":"사진-및-문서/pasted-image-20250221114406.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114411.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":63825,"sourcePath":"사진 및 문서/Pasted image 20250221114411.png","exportPath":"사진-및-문서/pasted-image-20250221114411.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114423.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":99423,"sourcePath":"사진 및 문서/Pasted image 20250221114423.png","exportPath":"사진-및-문서/pasted-image-20250221114423.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114428.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":347892,"sourcePath":"사진 및 문서/Pasted image 20250221114428.png","exportPath":"사진-및-문서/pasted-image-20250221114428.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114434.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":119362,"sourcePath":"사진 및 문서/Pasted image 20250221114434.png","exportPath":"사진-및-문서/pasted-image-20250221114434.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114439.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":29445,"sourcePath":"사진 및 문서/Pasted image 20250221114439.png","exportPath":"사진-및-문서/pasted-image-20250221114439.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114443.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":137427,"sourcePath":"사진 및 문서/Pasted image 20250221114443.png","exportPath":"사진-및-문서/pasted-image-20250221114443.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114501.png":{"createdTime":1740106714971,"modifiedTime":1740106714971,"sourceSize":9241,"sourcePath":"사진 및 문서/Pasted image 20250221114501.png","exportPath":"사진-및-문서/pasted-image-20250221114501.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114448.png":{"createdTime":1740106714962,"modifiedTime":1740106714962,"sourceSize":10082,"sourcePath":"사진 및 문서/Pasted image 20250221114448.png","exportPath":"사진-및-문서/pasted-image-20250221114448.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114522.png":{"createdTime":1740106714972,"modifiedTime":1740106714972,"sourceSize":41499,"sourcePath":"사진 및 문서/Pasted image 20250221114522.png","exportPath":"사진-및-문서/pasted-image-20250221114522.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114527.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":3613,"sourcePath":"사진 및 문서/Pasted image 20250221114527.png","exportPath":"사진-및-문서/pasted-image-20250221114527.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114531.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":2824,"sourcePath":"사진 및 문서/Pasted image 20250221114531.png","exportPath":"사진-및-문서/pasted-image-20250221114531.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114535.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":9670,"sourcePath":"사진 및 문서/Pasted image 20250221114535.png","exportPath":"사진-및-문서/pasted-image-20250221114535.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114539.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":47345,"sourcePath":"사진 및 문서/Pasted image 20250221114539.png","exportPath":"사진-및-문서/pasted-image-20250221114539.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114543.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":12542,"sourcePath":"사진 및 문서/Pasted image 20250221114543.png","exportPath":"사진-및-문서/pasted-image-20250221114543.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114600.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":170307,"sourcePath":"사진 및 문서/Pasted image 20250221114600.png","exportPath":"사진-및-문서/pasted-image-20250221114600.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114605.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":5144,"sourcePath":"사진 및 문서/Pasted image 20250221114605.png","exportPath":"사진-및-문서/pasted-image-20250221114605.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114610.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":117785,"sourcePath":"사진 및 문서/Pasted image 20250221114610.png","exportPath":"사진-및-문서/pasted-image-20250221114610.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114616.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":9310,"sourcePath":"사진 및 문서/Pasted image 20250221114616.png","exportPath":"사진-및-문서/pasted-image-20250221114616.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114621.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":6945,"sourcePath":"사진 및 문서/Pasted image 20250221114621.png","exportPath":"사진-및-문서/pasted-image-20250221114621.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114628.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":11755,"sourcePath":"사진 및 문서/Pasted image 20250221114628.png","exportPath":"사진-및-문서/pasted-image-20250221114628.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114633.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":109806,"sourcePath":"사진 및 문서/Pasted image 20250221114633.png","exportPath":"사진-및-문서/pasted-image-20250221114633.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114638.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":145560,"sourcePath":"사진 및 문서/Pasted image 20250221114638.png","exportPath":"사진-및-문서/pasted-image-20250221114638.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114644.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":285677,"sourcePath":"사진 및 문서/Pasted image 20250221114644.png","exportPath":"사진-및-문서/pasted-image-20250221114644.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114648.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":2556,"sourcePath":"사진 및 문서/Pasted image 20250221114648.png","exportPath":"사진-및-문서/pasted-image-20250221114648.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114743.png":{"createdTime":1740106714973,"modifiedTime":1740106714973,"sourceSize":27587,"sourcePath":"사진 및 문서/Pasted image 20250221114743.png","exportPath":"사진-및-문서/pasted-image-20250221114743.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221112429.png":{"createdTime":1740105237396,"modifiedTime":1740105237396,"sourceSize":64954,"sourcePath":"사진 및 문서/Pasted image 20250221112429.png","exportPath":"사진-및-문서/pasted-image-20250221112429.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114856.png":{"createdTime":1740106714988,"modifiedTime":1740106714988,"sourceSize":65325,"sourcePath":"사진 및 문서/Pasted image 20250221114856.png","exportPath":"사진-및-문서/pasted-image-20250221114856.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114901.png":{"createdTime":1740106714989,"modifiedTime":1740106714989,"sourceSize":11769,"sourcePath":"사진 및 문서/Pasted image 20250221114901.png","exportPath":"사진-및-문서/pasted-image-20250221114901.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114932.png":{"createdTime":1740106714990,"modifiedTime":1740106714990,"sourceSize":61109,"sourcePath":"사진 및 문서/Pasted image 20250221114932.png","exportPath":"사진-및-문서/pasted-image-20250221114932.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114945.png":{"createdTime":1740106714991,"modifiedTime":1740106714991,"sourceSize":23711,"sourcePath":"사진 및 문서/Pasted image 20250221114945.png","exportPath":"사진-및-문서/pasted-image-20250221114945.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114951.png":{"createdTime":1740106714991,"modifiedTime":1740106714992,"sourceSize":50550,"sourcePath":"사진 및 문서/Pasted image 20250221114951.png","exportPath":"사진-및-문서/pasted-image-20250221114951.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114959.png":{"createdTime":1740106714992,"modifiedTime":1740106714992,"sourceSize":58138,"sourcePath":"사진 및 문서/Pasted image 20250221114959.png","exportPath":"사진-및-문서/pasted-image-20250221114959.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115004.png":{"createdTime":1740106714993,"modifiedTime":1740106714993,"sourceSize":69732,"sourcePath":"사진 및 문서/Pasted image 20250221115004.png","exportPath":"사진-및-문서/pasted-image-20250221115004.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115010.png":{"createdTime":1740106714994,"modifiedTime":1740106714994,"sourceSize":27832,"sourcePath":"사진 및 문서/Pasted image 20250221115010.png","exportPath":"사진-및-문서/pasted-image-20250221115010.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115019.png":{"createdTime":1740106714994,"modifiedTime":1740106714994,"sourceSize":18871,"sourcePath":"사진 및 문서/Pasted image 20250221115019.png","exportPath":"사진-및-문서/pasted-image-20250221115019.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115024.png":{"createdTime":1740106714995,"modifiedTime":1740106714995,"sourceSize":13209,"sourcePath":"사진 및 문서/Pasted image 20250221115024.png","exportPath":"사진-및-문서/pasted-image-20250221115024.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115030.png":{"createdTime":1740106714996,"modifiedTime":1740106714996,"sourceSize":119401,"sourcePath":"사진 및 문서/Pasted image 20250221115030.png","exportPath":"사진-및-문서/pasted-image-20250221115030.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115035.png":{"createdTime":1740106714997,"modifiedTime":1740106714997,"sourceSize":129628,"sourcePath":"사진 및 문서/Pasted image 20250221115035.png","exportPath":"사진-및-문서/pasted-image-20250221115035.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115040.png":{"createdTime":1740106714998,"modifiedTime":1740106714998,"sourceSize":82286,"sourcePath":"사진 및 문서/Pasted image 20250221115040.png","exportPath":"사진-및-문서/pasted-image-20250221115040.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115046.png":{"createdTime":1740106714999,"modifiedTime":1740106714999,"sourceSize":65882,"sourcePath":"사진 및 문서/Pasted image 20250221115046.png","exportPath":"사진-및-문서/pasted-image-20250221115046.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115052.png":{"createdTime":1740106715000,"modifiedTime":1740106715000,"sourceSize":53469,"sourcePath":"사진 및 문서/Pasted image 20250221115052.png","exportPath":"사진-및-문서/pasted-image-20250221115052.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115058.png":{"createdTime":1740106715001,"modifiedTime":1740106715001,"sourceSize":43462,"sourcePath":"사진 및 문서/Pasted image 20250221115058.png","exportPath":"사진-및-문서/pasted-image-20250221115058.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115102.png":{"createdTime":1740106715001,"modifiedTime":1740106715002,"sourceSize":22627,"sourcePath":"사진 및 문서/Pasted image 20250221115102.png","exportPath":"사진-및-문서/pasted-image-20250221115102.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115117.png":{"createdTime":1740106715003,"modifiedTime":1740106715003,"sourceSize":176301,"sourcePath":"사진 및 문서/Pasted image 20250221115117.png","exportPath":"사진-및-문서/pasted-image-20250221115117.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115122.png":{"createdTime":1740106715003,"modifiedTime":1740106715004,"sourceSize":17792,"sourcePath":"사진 및 문서/Pasted image 20250221115122.png","exportPath":"사진-및-문서/pasted-image-20250221115122.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115129.png":{"createdTime":1740106715004,"modifiedTime":1740106715005,"sourceSize":17789,"sourcePath":"사진 및 문서/Pasted image 20250221115129.png","exportPath":"사진-및-문서/pasted-image-20250221115129.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115132.png":{"createdTime":1740106715006,"modifiedTime":1740106715006,"sourceSize":130355,"sourcePath":"사진 및 문서/Pasted image 20250221115132.png","exportPath":"사진-및-문서/pasted-image-20250221115132.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115136.png":{"createdTime":1740106715006,"modifiedTime":1740106715007,"sourceSize":40025,"sourcePath":"사진 및 문서/Pasted image 20250221115136.png","exportPath":"사진-및-문서/pasted-image-20250221115136.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115140.png":{"createdTime":1740106715008,"modifiedTime":1740106715008,"sourceSize":130307,"sourcePath":"사진 및 문서/Pasted image 20250221115140.png","exportPath":"사진-및-문서/pasted-image-20250221115140.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115146.png":{"createdTime":1740106715008,"modifiedTime":1740106715008,"sourceSize":12192,"sourcePath":"사진 및 문서/Pasted image 20250221115146.png","exportPath":"사진-및-문서/pasted-image-20250221115146.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115151.png":{"createdTime":1740106715009,"modifiedTime":1740106715009,"sourceSize":23806,"sourcePath":"사진 및 문서/Pasted image 20250221115151.png","exportPath":"사진-및-문서/pasted-image-20250221115151.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115157.png":{"createdTime":1740106715010,"modifiedTime":1740106715010,"sourceSize":22775,"sourcePath":"사진 및 문서/Pasted image 20250221115157.png","exportPath":"사진-및-문서/pasted-image-20250221115157.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115201.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":53316,"sourcePath":"사진 및 문서/Pasted image 20250221115201.png","exportPath":"사진-및-문서/pasted-image-20250221115201.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115214.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":94161,"sourcePath":"사진 및 문서/Pasted image 20250221115214.png","exportPath":"사진-및-문서/pasted-image-20250221115214.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115220.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":23961,"sourcePath":"사진 및 문서/Pasted image 20250221115220.png","exportPath":"사진-및-문서/pasted-image-20250221115220.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115224.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":3897,"sourcePath":"사진 및 문서/Pasted image 20250221115224.png","exportPath":"사진-및-문서/pasted-image-20250221115224.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115228.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":39103,"sourcePath":"사진 및 문서/Pasted image 20250221115228.png","exportPath":"사진-및-문서/pasted-image-20250221115228.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221115232.png":{"createdTime":1740106715011,"modifiedTime":1740106715011,"sourceSize":71492,"sourcePath":"사진 및 문서/Pasted image 20250221115232.png","exportPath":"사진-및-문서/pasted-image-20250221115232.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114152.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":38552,"sourcePath":"사진 및 문서/Pasted image 20250221114152.png","exportPath":"사진-및-문서/pasted-image-20250221114152.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114208.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":237325,"sourcePath":"사진 및 문서/Pasted image 20250221114208.png","exportPath":"사진-및-문서/pasted-image-20250221114208.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250221114220.png":{"createdTime":1740106714939,"modifiedTime":1740106714939,"sourceSize":338363,"sourcePath":"사진 및 문서/Pasted image 20250221114220.png","exportPath":"사진-및-문서/pasted-image-20250221114220.png","showInTree":false,"treeOrder":0},"lectur/🏫-강의.html":{"createdTime":1740115400228,"modifiedTime":1740558233386,"sourceSize":552,"sourcePath":"lectur/🏫 강의.md","exportPath":"lectur/🏫-강의.html"},"lectur/1.-객체-지향-설계와-스프링.html":{"createdTime":1740116090884,"modifiedTime":1740129126117,"sourceSize":1269,"sourcePath":"lectur/1. 객체 지향 설계와 스프링.md","exportPath":"lectur/1.-객체-지향-설계와-스프링.html"},"tools/🪓-도구.html":{"createdTime":1740028927813,"modifiedTime":1740361051667,"sourceSize":496,"sourcePath":"Tools/🪓 도구.md","exportPath":"tools/🪓-도구.html"},"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html":{"createdTime":1739950706177,"modifiedTime":1740127908434,"sourceSize":9716,"sourcePath":"study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md","exportPath":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html"},"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html":{"createdTime":1740732986345,"modifiedTime":1740733476629,"sourceSize":4234,"sourcePath":"Issue_TroubleShooting/⏰ Script 로딩 지연 트러블 슈팅.md","exportPath":"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html"},"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html":{"createdTime":1740733661950,"modifiedTime":1740734105217,"sourceSize":36,"sourcePath":"Issue_TroubleShooting/⚔ 도대체 어디서 StckOverflow가...md","exportPath":"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html"},"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html":{"createdTime":1740733171557,"modifiedTime":1740734141171,"sourceSize":2346,"sourcePath":"Issue_TroubleShooting/📓 EntityManager와 Transaction 그리고 ConnectionPool.md","exportPath":"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html"},"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html":{"createdTime":1740733250038,"modifiedTime":1740734089313,"sourceSize":8987,"sourcePath":"Issue_TroubleShooting/🔐 Lock이란 무엇인가. 데이터 정합성을 위한 여정.md","exportPath":"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html"},"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html":{"createdTime":1739843285680,"modifiedTime":1739844018493,"sourceSize":57706,"sourcePath":"project/hello Batch/✏ Chunk_Partitioning Batch 구조 드로잉.md","exportPath":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html"},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html":{"createdTime":1739842773924,"modifiedTime":1740734146671,"sourceSize":25038,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html"},"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html":{"createdTime":1739842890772,"modifiedTime":1740732859734,"sourceSize":8408,"sourcePath":"project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링 부록.md","exportPath":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html"},"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html":{"createdTime":1739783488509,"modifiedTime":1740733843766,"sourceSize":3178,"sourcePath":"project/hello marketing/👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출.md","exportPath":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html"},"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html":{"createdTime":1739783337843,"modifiedTime":1740733839094,"sourceSize":19283,"sourcePath":"project/hello marketing/👩‍👧‍👦 marketing Analytics 공통모듈 제작기.md","exportPath":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html"},"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html":{"createdTime":1740464273334,"modifiedTime":1740551622360,"sourceSize":13344,"sourcePath":"study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 SQL 문제.md","exportPath":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html"},"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html":{"createdTime":1740720025292,"modifiedTime":1740733287243,"sourceSize":5645,"sourcePath":"study/Dev Seminar/🔒 투자하기 서비스 락(Lock)기법 개선안.md","exportPath":"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html"},"tools/aws/🍌-elastic-ip(탄력적-ip)란.html":{"createdTime":1740361053654,"modifiedTime":1740646202048,"sourceSize":1519,"sourcePath":"Tools/aws/🍌 Elastic IP(탄력적 IP)란.md","exportPath":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html"},"사진-및-문서/pasted-image-20250228143143.png":{"createdTime":1740720703384,"modifiedTime":1740720703385,"sourceSize":14114,"sourcePath":"사진 및 문서/Pasted image 20250228143143.png","exportPath":"사진-및-문서/pasted-image-20250228143143.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250228150552.png":{"createdTime":1740727471570,"modifiedTime":1740727471571,"sourceSize":28810,"sourcePath":"사진 및 문서/Pasted image 20250228150552.png","exportPath":"사진-및-문서/pasted-image-20250228150552.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250226145129.png":{"createdTime":1740549089449,"modifiedTime":1740549089450,"sourceSize":38384,"sourcePath":"사진 및 문서/Pasted image 20250226145129.png","exportPath":"사진-및-문서/pasted-image-20250226145129.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241105110415.png":{"createdTime":1740733427059,"modifiedTime":1739424429176,"sourceSize":48800,"sourcePath":"사진 및 문서/Pasted image 20241105110415.png","exportPath":"사진-및-문서/pasted-image-20241105110415.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227140437.png":{"createdTime":1740733431199,"modifiedTime":1740632677974,"sourceSize":44294,"sourcePath":"사진 및 문서/Pasted image 20250227140437.png","exportPath":"사진-및-문서/pasted-image-20250227140437.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227140620.png":{"createdTime":1740733431201,"modifiedTime":1740632780208,"sourceSize":7828,"sourcePath":"사진 및 문서/Pasted image 20250227140620.png","exportPath":"사진-및-문서/pasted-image-20250227140620.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241105110637.png":{"createdTime":1740733427093,"modifiedTime":1739424429177,"sourceSize":122628,"sourcePath":"사진 및 문서/Pasted image 20241105110637.png","exportPath":"사진-및-문서/pasted-image-20241105110637.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241105110713.png":{"createdTime":1740733427109,"modifiedTime":1739424429179,"sourceSize":121987,"sourcePath":"사진 및 문서/Pasted image 20241105110713.png","exportPath":"사진-및-문서/pasted-image-20241105110713.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107115602.png":{"createdTime":1740733427276,"modifiedTime":1739424429183,"sourceSize":165029,"sourcePath":"사진 및 문서/Pasted image 20241107115602.png","exportPath":"사진-및-문서/pasted-image-20241107115602.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107115830.png":{"createdTime":1740733427316,"modifiedTime":1739424429184,"sourceSize":108952,"sourcePath":"사진 및 문서/Pasted image 20241107115830.png","exportPath":"사진-및-문서/pasted-image-20241107115830.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107121044.png":{"createdTime":1740733427415,"modifiedTime":1739424429187,"sourceSize":154790,"sourcePath":"사진 및 문서/Pasted image 20241107121044.png","exportPath":"사진-및-문서/pasted-image-20241107121044.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107121202.png":{"createdTime":1740733427459,"modifiedTime":1739424429188,"sourceSize":129945,"sourcePath":"사진 및 문서/Pasted image 20241107121202.png","exportPath":"사진-및-문서/pasted-image-20241107121202.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20241107121939.png":{"createdTime":1740733427504,"modifiedTime":1739424429189,"sourceSize":139893,"sourcePath":"사진 및 문서/Pasted image 20241107121939.png","exportPath":"사진-및-문서/pasted-image-20241107121939.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227114750.png":{"createdTime":1740733431139,"modifiedTime":1740624470242,"sourceSize":6008,"sourcePath":"사진 및 문서/Pasted image 20250227114750.png","exportPath":"사진-및-문서/pasted-image-20250227114750.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227114826.png":{"createdTime":1740733431143,"modifiedTime":1740624506390,"sourceSize":8757,"sourcePath":"사진 및 문서/Pasted image 20250227114826.png","exportPath":"사진-및-문서/pasted-image-20250227114826.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115004.png":{"createdTime":1740733431143,"modifiedTime":1740624604117,"sourceSize":6917,"sourcePath":"사진 및 문서/Pasted image 20250227115004.png","exportPath":"사진-및-문서/pasted-image-20250227115004.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115015.png":{"createdTime":1740733431147,"modifiedTime":1740624615279,"sourceSize":4891,"sourcePath":"사진 및 문서/Pasted image 20250227115015.png","exportPath":"사진-및-문서/pasted-image-20250227115015.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115158.png":{"createdTime":1740733431152,"modifiedTime":1740624718349,"sourceSize":5677,"sourcePath":"사진 및 문서/Pasted image 20250227115158.png","exportPath":"사진-및-문서/pasted-image-20250227115158.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227115148.png":{"createdTime":1740733431150,"modifiedTime":1740624708781,"sourceSize":5084,"sourcePath":"사진 및 문서/Pasted image 20250227115148.png","exportPath":"사진-및-문서/pasted-image-20250227115148.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227121009.png":{"createdTime":1740733431157,"modifiedTime":1740625809747,"sourceSize":37181,"sourcePath":"사진 및 문서/Pasted image 20250227121009.png","exportPath":"사진-및-문서/pasted-image-20250227121009.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227121046.png":{"createdTime":1740733431159,"modifiedTime":1740625846453,"sourceSize":79963,"sourcePath":"사진 및 문서/Pasted image 20250227121046.png","exportPath":"사진-및-문서/pasted-image-20250227121046.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227121942.png":{"createdTime":1740733431160,"modifiedTime":1740626382860,"sourceSize":78688,"sourcePath":"사진 및 문서/Pasted image 20250227121942.png","exportPath":"사진-및-문서/pasted-image-20250227121942.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227122010.png":{"createdTime":1740733431192,"modifiedTime":1740626410321,"sourceSize":15254,"sourcePath":"사진 및 문서/Pasted image 20250227122010.png","exportPath":"사진-및-문서/pasted-image-20250227122010.png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250227122736.png":{"createdTime":1740733431195,"modifiedTime":1740626856166,"sourceSize":15665,"sourcePath":"사진 및 문서/Pasted image 20250227122736.png","exportPath":"사진-및-문서/pasted-image-20250227122736.png","showInTree":false,"treeOrder":0},"사진-및-문서/output-(14).png":{"createdTime":1740733423096,"modifiedTime":1740632277026,"sourceSize":93796,"sourcePath":"사진 및 문서/output (14).png","exportPath":"사진-및-문서/output-(14).png","showInTree":false,"treeOrder":0},"사진-및-문서/pasted-image-20250225161448.png":{"createdTime":1740467688598,"modifiedTime":1740467688599,"sourceSize":8167,"sourcePath":"사진 및 문서/Pasted image 20250225161448.png","exportPath":"사진-및-문서/pasted-image-20250225161448.png","showInTree":false,"treeOrder":0}},"sourceToTarget":{"project/hello Batch/🏹 Spring Batch 구조 드로잉.md":"project/hello-batch/🏹-spring-batch-구조-드로잉.html","project/hello Batch/🏹 Spring Batch 트러블 슈팅.md":"project/hello-batch/🏹-spring-batch-트러블-슈팅.html","project/hello Batch/🏹 Spring Batch 트러블 슈팅 부록.md":"project/hello-batch/🏹-spring-batch-트러블-슈팅-부록.html","project/hello marketing/👩‍👧‍👦 유입 통계 ADMIN용 테이블 설계 과정.md":"project/hello-marketing/👩‍👧‍👦-유입-통계-admin용-테이블-설계-과정.html","project/hello marketing/👩‍👧‍👦 유입 통계 APP__SPRING AOP에 관하여.md":"project/hello-marketing/👩‍👧‍👦-유입-통계-app__spring-aop에-관하여.html","project/note CI_CD/👻 Obsidian 정적호스팅 CICD 과정.md":"project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 키워드.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사 필기/🥈 필기 1과목 - 소프트웨어 설계.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/정보처리기사/정보처리기사 필기/🥈 필기 2과목 - 소프트웨어 개발.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사 필기/🥈 필기 3과목 - 데이터베이스 구축.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사 필기/🥈 필기 4과목 - 프로그래밍 언어 활용.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사 필기/🥈 필기 5과목 - 정보시스템 구축관리.md":"study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/CS/☕ JAVA , OOP.md":"study/cs/☕-java-,-oop.html","study/CS/🍃 Spring.md":"study/cs/🍃-spring.html","study/CS/🎩 DevOps.md":"study/cs/🎩-devops.html","study/CS/🎵 Obsidian.md":"study/cs/🎵-obsidian.html","study/CS/🐞 etc.md":"study/cs/🐞-etc.html","study/CS/📔 DataBase.md":"study/cs/📔-database.html","study/CS/📭 Server.md":"study/cs/📭-server.html","study/Dev Seminar/🍂 JPA, Mybatis , Dead Lock.md":"study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","study/Dev Seminar/📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가.md":"study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/Dev Seminar/🔹 TDD에 대하여.md":"study/dev-seminar/🔹-tdd에-대하여.html","study/Dev Seminar/🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성.md":"study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/Dev Seminar/🥗 Spring Security_토큰_세션_쿠키_JWT 에 대하여.md":"study/dev-seminar/🥗-spring-security_토큰_세션_쿠키_jwt-에-대하여.html","study/Dev Seminar/🪕 JPA 에 대한 고찰.md":"study/dev-seminar/🪕-jpa-에-대한-고찰.html","index.md":"index.html","사진 및 문서/Pasted image 20250110144021.png":"사진-및-문서/pasted-image-20250110144021.png","사진 및 문서/Pasted image 20241206140739.png":"사진-및-문서/pasted-image-20241206140739.png","사진 및 문서/Pasted image 20241206140822.png":"사진-및-문서/pasted-image-20241206140822.png","사진 및 문서/Pasted image 20241220113308.png":"사진-및-문서/pasted-image-20241220113308.png","사진 및 문서/Pasted image 20241220113315.png":"사진-및-문서/pasted-image-20241220113315.png","사진 및 문서/Pasted image 20250218151731.png":"사진-및-문서/pasted-image-20250218151731.png","사진 및 문서/Pasted image 20250218151806.png":"사진-및-문서/pasted-image-20250218151806.png","사진 및 문서/Pasted image 20250218152044.png":"사진-및-문서/pasted-image-20250218152044.png","사진 및 문서/Pasted image 20250218152103.png":"사진-및-문서/pasted-image-20250218152103.png","사진 및 문서/Pasted image 20250218153131.png":"사진-및-문서/pasted-image-20250218153131.png","사진 및 문서/Pasted image 20250218153319.png":"사진-및-문서/pasted-image-20250218153319.png","사진 및 문서/Pasted image 20250218153445.png":"사진-및-문서/pasted-image-20250218153445.png","사진 및 문서/Pasted image 20250218153543.png":"사진-및-문서/pasted-image-20250218153543.png","사진 및 문서/Pasted image 20250218153553.png":"사진-및-문서/pasted-image-20250218153553.png","사진 및 문서/Pasted image 20250218151330.png":"사진-및-문서/pasted-image-20250218151330.png","사진 및 문서/Pasted image 20250218153814.png":"사진-및-문서/pasted-image-20250218153814.png","사진 및 문서/Pasted image 20250218153858.png":"사진-및-문서/pasted-image-20250218153858.png","사진 및 문서/Pasted image 20250218154352.png":"사진-및-문서/pasted-image-20250218154352.png","사진 및 문서/Pasted image 20250218154433.png":"사진-및-문서/pasted-image-20250218154433.png","사진 및 문서/Pasted image 20250218154615.png":"사진-및-문서/pasted-image-20250218154615.png","사진 및 문서/Pasted image 20250218154633.png":"사진-및-문서/pasted-image-20250218154633.png","사진 및 문서/Pasted image 20250218154647.png":"사진-및-문서/pasted-image-20250218154647.png","사진 및 문서/Pasted image 20250218155524.png":"사진-및-문서/pasted-image-20250218155524.png","사진 및 문서/Pasted image 20250218160328.png":"사진-및-문서/pasted-image-20250218160328.png","사진 및 문서/Pasted image 20250218160359.png":"사진-및-문서/pasted-image-20250218160359.png","사진 및 문서/Pasted image 20250218160428.png":"사진-및-문서/pasted-image-20250218160428.png","사진 및 문서/Pasted image 20250218160532.png":"사진-및-문서/pasted-image-20250218160532.png","사진 및 문서/Pasted image 20250218160956.png":"사진-및-문서/pasted-image-20250218160956.png","사진 및 문서/Pasted image 20250218161424.png":"사진-및-문서/pasted-image-20250218161424.png","사진 및 문서/Pasted image 20250218161515.png":"사진-및-문서/pasted-image-20250218161515.png","사진 및 문서/Pasted image 20250218161728.png":"사진-및-문서/pasted-image-20250218161728.png","사진 및 문서/Pasted image 20250218161824.png":"사진-및-문서/pasted-image-20250218161824.png","사진 및 문서/Pasted image 20250218161847.png":"사진-및-문서/pasted-image-20250218161847.png","사진 및 문서/Pasted image 20250218161937.png":"사진-및-문서/pasted-image-20250218161937.png","사진 및 문서/Pasted image 20250218162355.png":"사진-및-문서/pasted-image-20250218162355.png","사진 및 문서/do-messenger_screenshot_2025-02-19_16_19_04.png":"사진-및-문서/do-messenger_screenshot_2025-02-19_16_19_04.png","사진 및 문서/Pasted image 20250219154331.png":"사진-및-문서/pasted-image-20250219154331.png","사진 및 문서/Pasted image 20250219154315.png":"사진-및-문서/pasted-image-20250219154315.png","사진 및 문서/output (1).png":"사진-및-문서/output-(1).png","사진 및 문서/Pasted image 20241206113120.png":"사진-및-문서/pasted-image-20241206113120.png","사진 및 문서/Pasted image 20241213102128.png":"사진-및-문서/pasted-image-20241213102128.png","사진 및 문서/Pasted image 20241213102229.png":"사진-및-문서/pasted-image-20241213102229.png","사진 및 문서/Pasted image 20241213143101.png":"사진-및-문서/pasted-image-20241213143101.png","사진 및 문서/Pasted image 20241213143217.png":"사진-및-문서/pasted-image-20241213143217.png","사진 및 문서/Pasted image 20241213103503.png":"사진-및-문서/pasted-image-20241213103503.png","사진 및 문서/Pasted image 20241217150339.png":"사진-및-문서/pasted-image-20241217150339.png","사진 및 문서/Pasted image 20241219145746.png":"사진-및-문서/pasted-image-20241219145746.png","사진 및 문서/output (9) 1.png":"사진-및-문서/output-(9)-1.png","사진 및 문서/output (10).png":"사진-및-문서/output-(10).png","사진 및 문서/do-messenger_screenshot_2024-12-23_14_40_21.png":"사진-및-문서/do-messenger_screenshot_2024-12-23_14_40_21.png","사진 및 문서/Pasted image 20241224093159.png":"사진-및-문서/pasted-image-20241224093159.png","사진 및 문서/Pasted image 20241224093207.png":"사진-및-문서/pasted-image-20241224093207.png","사진 및 문서/Pasted image 20241224093225.png":"사진-및-문서/pasted-image-20241224093225.png","사진 및 문서/회사 은행 서비스1111.png":"사진-및-문서/회사-은행-서비스1111.png","사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 1.png":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-1.png","사진 및 문서/Spring Batch Tasklet 예치금 잔액 비교 잘못된 차액발생 인식 타임라인.png":"사진-및-문서/spring-batch-tasklet-예치금-잔액-비교-잘못된-차액발생-인식-타임라인.png","사진 및 문서/Pasted image 20241224144309.png":"사진-및-문서/pasted-image-20241224144309.png","사진 및 문서/Pasted image 20241226111559.png":"사진-및-문서/pasted-image-20241226111559.png","사진 및 문서/Pasted image 20241226152219.png":"사진-및-문서/pasted-image-20241226152219.png","사진 및 문서/Pasted image 20241226171158.png":"사진-및-문서/pasted-image-20241226171158.png","사진 및 문서/Pasted image 20241230135801.png":"사진-및-문서/pasted-image-20241230135801.png","사진 및 문서/Pasted image 20250102160213.png":"사진-및-문서/pasted-image-20250102160213.png","사진 및 문서/Pasted image 20250102160223.png":"사진-및-문서/pasted-image-20250102160223.png","사진 및 문서/Pasted image 20240531162124.png":"사진-및-문서/pasted-image-20240531162124.png","사진 및 문서/Pasted image 20240722180706.png":"사진-및-문서/pasted-image-20240722180706.png","사진 및 문서/Pasted image 20240610171904.png":"사진-및-문서/pasted-image-20240610171904.png","사진 및 문서/Pasted image 20240531103441.png":"사진-및-문서/pasted-image-20240531103441.png","사진 및 문서/Pasted image 20240531103549.png":"사진-및-문서/pasted-image-20240531103549.png","사진 및 문서/Pasted image 20240531105228.png":"사진-및-문서/pasted-image-20240531105228.png","사진 및 문서/Pasted image 20240531105241.png":"사진-및-문서/pasted-image-20240531105241.png","사진 및 문서/Pasted image 20240531104351.png":"사진-및-문서/pasted-image-20240531104351.png","사진 및 문서/Pasted image 20240531104418.png":"사진-및-문서/pasted-image-20240531104418.png","사진 및 문서/Pasted image 20240531104751.png":"사진-및-문서/pasted-image-20240531104751.png","사진 및 문서/Pasted image 20240531104803.png":"사진-및-문서/pasted-image-20240531104803.png","사진 및 문서/Pasted image 20240828104032.png":"사진-및-문서/pasted-image-20240828104032.png","사진 및 문서/Pasted image 20240828104728.png":"사진-및-문서/pasted-image-20240828104728.png","사진 및 문서/output (9).png":"사진-및-문서/output-(9).png","사진 및 문서/Pasted image 20250102181842.png":"사진-및-문서/pasted-image-20250102181842.png","사진 및 문서/do-messenger_screenshot_2025-02-10_15_04_45.png":"사진-및-문서/do-messenger_screenshot_2025-02-10_15_04_45.png","사진 및 문서/do-messenger_screenshot_2025-02-10_17_10_58.png":"사진-및-문서/do-messenger_screenshot_2025-02-10_17_10_58.png","사진 및 문서/do-messenger_screenshot_2025-02-11_13_47_16.png":"사진-및-문서/do-messenger_screenshot_2025-02-11_13_47_16.png","사진 및 문서/do-messenger_screenshot_2025-02-11_15_32_34.png":"사진-및-문서/do-messenger_screenshot_2025-02-11_15_32_34.png","사진 및 문서/do-messenger_screenshot_2025-02-11_16_31_10.png":"사진-및-문서/do-messenger_screenshot_2025-02-11_16_31_10.png","사진 및 문서/do-messenger_screenshot_2025-02-12_14_04_58.png":"사진-및-문서/do-messenger_screenshot_2025-02-12_14_04_58.png","사진 및 문서/Pasted image 20240611144129.png":"사진-및-문서/pasted-image-20240611144129.png","사진 및 문서/Pasted image 20240605160336.png":"사진-및-문서/pasted-image-20240605160336.png","사진 및 문서/Pasted image 20240723134224.png":"사진-및-문서/pasted-image-20240723134224.png","사진 및 문서/Pasted image 20240723134333.png":"사진-및-문서/pasted-image-20240723134333.png","사진 및 문서/Pasted image 20240603173517.png":"사진-및-문서/pasted-image-20240603173517.png","사진 및 문서/Pasted image 20240603180042.png":"사진-및-문서/pasted-image-20240603180042.png","사진 및 문서/Pasted image 20240604102140.png":"사진-및-문서/pasted-image-20240604102140.png","사진 및 문서/Pasted image 20240604144026.png":"사진-및-문서/pasted-image-20240604144026.png","사진 및 문서/Pasted image 20250218145702.png":"사진-및-문서/pasted-image-20250218145702.png","사진 및 문서/Pasted image 20250218145823.png":"사진-및-문서/pasted-image-20250218145823.png","사진 및 문서/Pasted image 20250110101642.png":"사진-및-문서/pasted-image-20250110101642.png","사진 및 문서/Pasted image 20250110103409.png":"사진-및-문서/pasted-image-20250110103409.png","사진 및 문서/Pasted image 20250110122312.png":"사진-및-문서/pasted-image-20250110122312.png","사진 및 문서/Pasted image 20250122111223.png":"사진-및-문서/pasted-image-20250122111223.png","":"lib/search-index.json","Tools/🎵 Obsidian.md":"tools/🎵-obsidian.html","study/커리큘럼/🆕 Dev 커리큘럼.md":"study/커리큘럼/🆕-dev-커리큘럼.html","project/💻 프로젝트.md":"project/💻-프로젝트.html","study/📕 공부.md":"study/📕-공부.html","Tools/🪓 Tools.md":"tools/🪓-tools.html","study/Coding Test/👽 Algorithm.md":"study/coding-test/👽-algorithm.html","study/Coding Test/🤠 Coding Test 풀이 모음.md":"study/coding-test/🤠-coding-test-풀이-모음.html","사진 및 문서/Pasted image 20250220144552.png":"사진-및-문서/pasted-image-20250220144552.png","project/note CI_CD/⛈ Obsidian-AWS연동.md":"project/note-ci_cd/⛈-obsidian-aws연동.html","Tools/aws/🌥 aws(EC2)셋팅부터 배포까지.md":"tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","Tools/aws/🍊 aws EC2란.md":"tools/aws/🍊-aws-ec2란.html","Tools/docker/🐋 docker.md":"tools/docker/🐋-docker.html","Tools/docker/📘 SpringBoot & Docker + Reids 연동.md":"tools/docker/📘-springboot-&-docker-+-reids-연동.html","사진 및 문서/Pasted image 20250221114306.png":"사진-및-문서/pasted-image-20250221114306.png","사진 및 문서/Pasted image 20250221114324.png":"사진-및-문서/pasted-image-20250221114324.png","사진 및 문서/Pasted image 20250221114327.png":"사진-및-문서/pasted-image-20250221114327.png","사진 및 문서/Pasted image 20250221114334.png":"사진-및-문서/pasted-image-20250221114334.png","사진 및 문서/Pasted image 20250221114339.png":"사진-및-문서/pasted-image-20250221114339.png","사진 및 문서/Pasted image 20250221114345.png":"사진-및-문서/pasted-image-20250221114345.png","사진 및 문서/Pasted image 20250221114353.png":"사진-및-문서/pasted-image-20250221114353.png","사진 및 문서/Pasted image 20250221114400.png":"사진-및-문서/pasted-image-20250221114400.png","사진 및 문서/Pasted image 20250221114406.png":"사진-및-문서/pasted-image-20250221114406.png","사진 및 문서/Pasted image 20250221114411.png":"사진-및-문서/pasted-image-20250221114411.png","사진 및 문서/Pasted image 20250221114423.png":"사진-및-문서/pasted-image-20250221114423.png","사진 및 문서/Pasted image 20250221114428.png":"사진-및-문서/pasted-image-20250221114428.png","사진 및 문서/Pasted image 20250221114434.png":"사진-및-문서/pasted-image-20250221114434.png","사진 및 문서/Pasted image 20250221114439.png":"사진-및-문서/pasted-image-20250221114439.png","사진 및 문서/Pasted image 20250221114443.png":"사진-및-문서/pasted-image-20250221114443.png","사진 및 문서/Pasted image 20250221114501.png":"사진-및-문서/pasted-image-20250221114501.png","사진 및 문서/Pasted image 20250221114448.png":"사진-및-문서/pasted-image-20250221114448.png","사진 및 문서/Pasted image 20250221114522.png":"사진-및-문서/pasted-image-20250221114522.png","사진 및 문서/Pasted image 20250221114527.png":"사진-및-문서/pasted-image-20250221114527.png","사진 및 문서/Pasted image 20250221114531.png":"사진-및-문서/pasted-image-20250221114531.png","사진 및 문서/Pasted image 20250221114535.png":"사진-및-문서/pasted-image-20250221114535.png","사진 및 문서/Pasted image 20250221114539.png":"사진-및-문서/pasted-image-20250221114539.png","사진 및 문서/Pasted image 20250221114543.png":"사진-및-문서/pasted-image-20250221114543.png","사진 및 문서/Pasted image 20250221114600.png":"사진-및-문서/pasted-image-20250221114600.png","사진 및 문서/Pasted image 20250221114605.png":"사진-및-문서/pasted-image-20250221114605.png","사진 및 문서/Pasted image 20250221114610.png":"사진-및-문서/pasted-image-20250221114610.png","사진 및 문서/Pasted image 20250221114616.png":"사진-및-문서/pasted-image-20250221114616.png","사진 및 문서/Pasted image 20250221114621.png":"사진-및-문서/pasted-image-20250221114621.png","사진 및 문서/Pasted image 20250221114628.png":"사진-및-문서/pasted-image-20250221114628.png","사진 및 문서/Pasted image 20250221114633.png":"사진-및-문서/pasted-image-20250221114633.png","사진 및 문서/Pasted image 20250221114638.png":"사진-및-문서/pasted-image-20250221114638.png","사진 및 문서/Pasted image 20250221114644.png":"사진-및-문서/pasted-image-20250221114644.png","사진 및 문서/Pasted image 20250221114648.png":"사진-및-문서/pasted-image-20250221114648.png","사진 및 문서/Pasted image 20250221114743.png":"사진-및-문서/pasted-image-20250221114743.png","사진 및 문서/Pasted image 20250221112429.png":"사진-및-문서/pasted-image-20250221112429.png","사진 및 문서/Pasted image 20250221114856.png":"사진-및-문서/pasted-image-20250221114856.png","사진 및 문서/Pasted image 20250221114901.png":"사진-및-문서/pasted-image-20250221114901.png","사진 및 문서/Pasted image 20250221114932.png":"사진-및-문서/pasted-image-20250221114932.png","사진 및 문서/Pasted image 20250221114945.png":"사진-및-문서/pasted-image-20250221114945.png","사진 및 문서/Pasted image 20250221114951.png":"사진-및-문서/pasted-image-20250221114951.png","사진 및 문서/Pasted image 20250221114959.png":"사진-및-문서/pasted-image-20250221114959.png","사진 및 문서/Pasted image 20250221115004.png":"사진-및-문서/pasted-image-20250221115004.png","사진 및 문서/Pasted image 20250221115010.png":"사진-및-문서/pasted-image-20250221115010.png","사진 및 문서/Pasted image 20250221115019.png":"사진-및-문서/pasted-image-20250221115019.png","사진 및 문서/Pasted image 20250221115024.png":"사진-및-문서/pasted-image-20250221115024.png","사진 및 문서/Pasted image 20250221115030.png":"사진-및-문서/pasted-image-20250221115030.png","사진 및 문서/Pasted image 20250221115035.png":"사진-및-문서/pasted-image-20250221115035.png","사진 및 문서/Pasted image 20250221115040.png":"사진-및-문서/pasted-image-20250221115040.png","사진 및 문서/Pasted image 20250221115046.png":"사진-및-문서/pasted-image-20250221115046.png","사진 및 문서/Pasted image 20250221115052.png":"사진-및-문서/pasted-image-20250221115052.png","사진 및 문서/Pasted image 20250221115058.png":"사진-및-문서/pasted-image-20250221115058.png","사진 및 문서/Pasted image 20250221115102.png":"사진-및-문서/pasted-image-20250221115102.png","사진 및 문서/Pasted image 20250221115117.png":"사진-및-문서/pasted-image-20250221115117.png","사진 및 문서/Pasted image 20250221115122.png":"사진-및-문서/pasted-image-20250221115122.png","사진 및 문서/Pasted image 20250221115129.png":"사진-및-문서/pasted-image-20250221115129.png","사진 및 문서/Pasted image 20250221115132.png":"사진-및-문서/pasted-image-20250221115132.png","사진 및 문서/Pasted image 20250221115136.png":"사진-및-문서/pasted-image-20250221115136.png","사진 및 문서/Pasted image 20250221115140.png":"사진-및-문서/pasted-image-20250221115140.png","사진 및 문서/Pasted image 20250221115146.png":"사진-및-문서/pasted-image-20250221115146.png","사진 및 문서/Pasted image 20250221115151.png":"사진-및-문서/pasted-image-20250221115151.png","사진 및 문서/Pasted image 20250221115157.png":"사진-및-문서/pasted-image-20250221115157.png","사진 및 문서/Pasted image 20250221115201.png":"사진-및-문서/pasted-image-20250221115201.png","사진 및 문서/Pasted image 20250221115214.png":"사진-및-문서/pasted-image-20250221115214.png","사진 및 문서/Pasted image 20250221115220.png":"사진-및-문서/pasted-image-20250221115220.png","사진 및 문서/Pasted image 20250221115224.png":"사진-및-문서/pasted-image-20250221115224.png","사진 및 문서/Pasted image 20250221115228.png":"사진-및-문서/pasted-image-20250221115228.png","사진 및 문서/Pasted image 20250221115232.png":"사진-및-문서/pasted-image-20250221115232.png","사진 및 문서/Pasted image 20250221114152.png":"사진-및-문서/pasted-image-20250221114152.png","사진 및 문서/Pasted image 20250221114208.png":"사진-및-문서/pasted-image-20250221114208.png","사진 및 문서/Pasted image 20250221114220.png":"사진-및-문서/pasted-image-20250221114220.png","lectur/🏫 강의.md":"lectur/🏫-강의.html","lectur/1. 객체 지향 설계와 스프링.md":"lectur/1.-객체-지향-설계와-스프링.html","project/hello marketing/👩‍👧‍👦 유입 통계 APP_SPRING AOP에 관하여.md":"project/hello-marketing/👩‍👧‍👦-유입-통계-app_spring-aop에-관하여.html","Tools/🪓 도구.md":"tools/🪓-도구.html","study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md":"study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","lectur/🍎 객체 지향 설계와 스프링.md":"lectur/🍎-객체-지향-설계와-스프링.html","study/Coding Test/Bronze/2446. 별 찍기 － 9/별 찍기 － 9.py":"study/coding-test/bronze/2446. 별 찍기 － 9/별 찍기 － 9.py","study/Coding Test/Bronze/2446. 별 찍기 － 9/README.md":"study/coding-test/bronze/2446. 별 찍기 － 9/readme.html","study/Coding Test/Bronze/10810. 공 넣기/공 넣기.py":"study/coding-test/bronze/10810. 공 넣기/공 넣기.py","study/Coding Test/Bronze/10810. 공 넣기/README.md":"study/coding-test/bronze/10810. 공 넣기/readme.html","study/Coding Test/Bronze/12813. 이진수 연산/이진수 연산.py":"study/coding-test/bronze/12813. 이진수 연산/이진수 연산.py","study/Coding Test/Bronze/12813. 이진수 연산/README.md":"study/coding-test/bronze/12813. 이진수 연산/readme.html","study/Coding Test/Bronze/15596. 정수 N개의 합/정수 N개의 합.py":"study/coding-test/bronze/15596. 정수 n개의 합/정수 n개의 합.py","study/Coding Test/Bronze/15596. 정수 N개의 합/README.md":"study/coding-test/bronze/15596. 정수 n개의 합/readme.html","Tools/🍌 Elastic IP(탄력적 IP)란.md":"tools/🍌-elastic-ip(탄력적-ip)란.html","Issue_TroubleShooting/⏰ Script 로딩 지연 트러블 슈팅.md":"issue_troubleshooting/⏰-script-로딩-지연-트러블-슈팅.html","Issue_TroubleShooting/⚔ 도대체 어디서 StckOverflow가...md":"issue_troubleshooting/⚔-도대체-어디서-stckoverflow가...html","Issue_TroubleShooting/📓 EntityManager와 Transaction 그리고 ConnectionPool.md":"issue_troubleshooting/📓-entitymanager와-transaction-그리고-connectionpool.html","Issue_TroubleShooting/🔐 Lock이란 무엇인가. 데이터 정합성을 위한 여정.md":"issue_troubleshooting/🔐-lock이란-무엇인가.-데이터-정합성을-위한-여정.html","project/hello Batch/✏ Chunk_Partitioning Batch 구조 드로잉.md":"project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링.md":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","project/hello Batch/🏹 예치금 차액 비교 Spring Batch 리펙토링 부록.md":"project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello marketing/👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출.md":"project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello marketing/👩‍👧‍👦 marketing Analytics 공통모듈 제작기.md":"project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","study/정보처리기사/정보처리기사 실기/🥇 정보처리 기사 실기 SQL 문제.md":"study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/Dev Seminar/🔒 투자하기 서비스 락(Lock)기법 개선안.md":"study/dev-seminar/🔒-투자하기-서비스-락(lock)기법-개선안.html","Tools/aws/🍌 Elastic IP(탄력적 IP)란.md":"tools/aws/🍌-elastic-ip(탄력적-ip)란.html","사진 및 문서/Pasted image 20250228143143.png":"사진-및-문서/pasted-image-20250228143143.png","사진 및 문서/Pasted image 20250228150552.png":"사진-및-문서/pasted-image-20250228150552.png","사진 및 문서/Pasted image 20250226145129.png":"사진-및-문서/pasted-image-20250226145129.png","사진 및 문서/Pasted image 20241105110415.png":"사진-및-문서/pasted-image-20241105110415.png","사진 및 문서/Pasted image 20250227140437.png":"사진-및-문서/pasted-image-20250227140437.png","사진 및 문서/Pasted image 20250227140620.png":"사진-및-문서/pasted-image-20250227140620.png","사진 및 문서/Pasted image 20241105110637.png":"사진-및-문서/pasted-image-20241105110637.png","사진 및 문서/Pasted image 20241105110713.png":"사진-및-문서/pasted-image-20241105110713.png","사진 및 문서/Pasted image 20241107115602.png":"사진-및-문서/pasted-image-20241107115602.png","사진 및 문서/Pasted image 20241107115830.png":"사진-및-문서/pasted-image-20241107115830.png","사진 및 문서/Pasted image 20241107121044.png":"사진-및-문서/pasted-image-20241107121044.png","사진 및 문서/Pasted image 20241107121202.png":"사진-및-문서/pasted-image-20241107121202.png","사진 및 문서/Pasted image 20241107121939.png":"사진-및-문서/pasted-image-20241107121939.png","사진 및 문서/Pasted image 20250227114750.png":"사진-및-문서/pasted-image-20250227114750.png","사진 및 문서/Pasted image 20250227114826.png":"사진-및-문서/pasted-image-20250227114826.png","사진 및 문서/Pasted image 20250227115004.png":"사진-및-문서/pasted-image-20250227115004.png","사진 및 문서/Pasted image 20250227115015.png":"사진-및-문서/pasted-image-20250227115015.png","사진 및 문서/Pasted image 20250227115158.png":"사진-및-문서/pasted-image-20250227115158.png","사진 및 문서/Pasted image 20250227115148.png":"사진-및-문서/pasted-image-20250227115148.png","사진 및 문서/Pasted image 20250227121009.png":"사진-및-문서/pasted-image-20250227121009.png","사진 및 문서/Pasted image 20250227121046.png":"사진-및-문서/pasted-image-20250227121046.png","사진 및 문서/Pasted image 20250227121942.png":"사진-및-문서/pasted-image-20250227121942.png","사진 및 문서/Pasted image 20250227122010.png":"사진-및-문서/pasted-image-20250227122010.png","사진 및 문서/Pasted image 20250227122736.png":"사진-및-문서/pasted-image-20250227122736.png","사진 및 문서/output (14).png":"사진-및-문서/output-(14).png","사진 및 문서/Pasted image 20250225161448.png":"사진-및-문서/pasted-image-20250225161448.png"},"modifiedTime":1740734318597,"siteName":"taesunglog","exportRoot":"/","pluginVersion":"1.9.0-3b","themeName":"Things","bodyClasses":"publish css-settings-manager theme-dark show-inline-title show-ribbon is-focused hide-cursor","addCustomHead":false,"addFavicon":false}