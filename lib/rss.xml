<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[blog]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://lts.kr/</link><image><url>https://lts.kr/lib/media/favicon.png</url><title>blog</title><link>https://lts.kr/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Wed, 23 Apr 2025 08:21:22 GMT</lastBuildDate><atom:link href="https://lts.kr/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Wed, 23 Apr 2025 08:21:21 GMT</pubDate><copyright><![CDATA[taesung's Blog]]></copyright><ttl>60</ttl><dc:creator>taesung's Blog</dc:creator><item><title><![CDATA[🚢Kubernetes(k8s)란]]></title><description><![CDATA[<a class="tag" href="https://lts.kr/?query=tag:Tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Tools</a> <a class="tag" href="https://lts.kr/?query=tag:Kubernetes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Kubernetes</a> <a class="tag" href="https://lts.kr/?query=tag:k8s" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#k8s</a> <br> <a href="https://lts.kr?query=tag:Tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Tools">#Tools</a> <a href="https://lts.kr?query=tag:Kubernetes" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Kubernetes">#Kubernetes</a> <a href="https://lts.kr?query=tag:k8s" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#k8s">#k8s</a><br>
<br>과거에는 서버 1대에 하나의 앱을 설치하는 방식 → 리소스 낭비
<br>가상화(VM)는 개선책이었지만 느리고 무겁다
<br>
<br>Docker를 사용한 컨테이너(꼭 Docker가 아니더라도..) 기술은 경량화된 격리 실행환경 제공
<br>문제: 수백~수천 개의 컨테이너를 관리, 스케줄링, 모니터링를 사람이 직접 한다는것은 많이 어렵다.
<br>
<br>구글이 자사 서비스에서 10년 넘게 써온 내부 컨테이너 오케스트레이터 “Borg”의 아이디어를 오픈소스로 풀어낸 것이 Kubernetes(줄여서 k8s)이다.
<br>
<br>위에서 설명했듯 여러개의 컨테이너를 자동으로 배포, 스케일링, 복구, 관리하는 컨테이너 오케스트레이션 플랫폼이다.
<br> +-------------------+ | Master Node | |-------------------| | - API Server | | - Scheduler | | - Controller Mgr | | - etcd (DB) | +---------+---------+ | ┌────────────┴────────────┐ ↓ ↓ +-------------+ +---------------+ | Worker Node| | Worker Node | |-------------| |---------------| | kubelet | | kubelet | | kube-proxy | | kube-proxy | | containerd | | containerd | +-------------+ +---------------+ ↓ ↓ [Pod: 컨테이너 + 네트워크 + 볼륨]
<br>k8s가 컨테이너 오케스트레이션 플랫폼 (어디에, 어떠게 배포할지 결정 )이라면,<br>
argoCD는 <a data-href="GitOps" href="https://lts.kr/짧은-키워드/gitops.html" class="internal-link" target="_self" rel="noopener nofollow">GitOps</a>기반의 Continuous Delivery 도구 (무엇을, 언제, 어떤 방식으로 배포할지 관리) 이다.<br>
<br>k8s의 모든 배포는 yaml파일을 통해 이뤄진다.<br>
→이때, 배포를 수행하는 개발자마다 각자의 PC에서 yaml파일을 만들어 관리한다면, 많은 노력이 들어가게 된다.<br>
따라서, <a data-href="GitOps" href="https://lts.kr/짧은-키워드/gitops.html" class="internal-link" target="_self" rel="noopener nofollow">GitOps</a>방법론에 따라, 배포와 관련된 모든 코드를 Git을 통해 관리하도록 하는것이다.
<br>즉, ArgoCD는 Kubernetes를 위한 GitOps 자동 배포 계층이다.<br>Git Repository (Manifest 저장) ← (감시) ← Argo CD → (반영) → Kubernetes Cluster<br>
<br>Argo CD는 Kubernetes의 배포 자동화 담당
<br>Kubernetes는 애플리케이션을 실행하고, Argo CD는 그것을 배포/관리함
<br>Git을 소스 오브 트루스로 삼고, Argo CD는 상태를 감시하고 Kubernetes와 싱크 맞춤
<br>실시간 배포 이력 추적, 자동 복구, 롤백, 멀티클러스터 지원 등 GitOps 핵심 도구
<br>Kubernetes를 쓰는 조직이라면 Argo CD는 필수에 가까움 (Jenkins는 CI로만 남게 됨)]]></description><link>https://lts.kr/tools/kubernetes/🚢kubernetes(k8s)란.html</link><guid isPermaLink="false">Tools/Kubernetes/🚢Kubernetes(k8s)란.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Wed, 23 Apr 2025 07:55:15 GMT</pubDate></item><item><title><![CDATA[GitOps]]></title><description><![CDATA[<br>
<br>
DevOps(개발과 운영을 통합하여 효율성,협력,안정성을 개선하는 개발/운영 방법론)의 실천 방법중 하나로, 애플리케이션 배포와 운영에 관련된 모든요소를 Git에서 관리(Opertation)한다는 뜻이다. <br>
Git의 버전관리 시스템과 운영환경간의 일관성을 유지하여 소프트웨어간의 불일치 문제를해결할 수 있다. ]]></description><link>https://lts.kr/짧은-키워드/gitops.html</link><guid isPermaLink="false">짧은 키워드/GitOps.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Wed, 23 Apr 2025 06:51:53 GMT</pubDate></item><item><title><![CDATA[👔 Jenkins란]]></title><description><![CDATA[<a class="tag" href="https://lts.kr/?query=tag:Tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Tools</a> <a class="tag" href="https://lts.kr/?query=tag:도커" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#도커</a> <a class="tag" href="https://lts.kr/?query=tag:Docker" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Docker</a> <br> <a href="https://lts.kr?query=tag:Tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Tools">#Tools</a> <a href="https://lts.kr?query=tag:도커" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#도커">#도커</a> <a href="https://lts.kr?query=tag:Docker" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Docker">#Docker</a><br>
<br>Jenkins는 오픈소스 기반의 자동화 서버로, 주로 지속적 통합(CI: Continuous Integration)과 지속적 배포(CD: Continuous Delivery/Deployment)를 자동화하기 위해 사용된다.
<br>특징<br>java기반으로 만들어져, OS에 상관없이 실행 가능
<br>파이프라인 기반으로 소프트웨어 빌드, 테스트, 배포 자동화
<br>플러그인 아키텍처로 확장성이 뛰어남
<br>
<br>개발자가 코드 변경 시 자동으로 빌드 + 테스트 수행
<br>코드 병합 시 문제 조기 탐지
<br>코드 품질 유지 + 릴리즈 주기 단축
<br>
<br>테스트 통과 후 자동으로 스테이징 또는 운영 서버에 배포
<br>릴리즈 주기 자동화 → 빠른 피드백 루프
<br>
<br>빌드 → 테스트 → 배포 → 모니터링까지의 전체 과정을 파이프라인으로 시각화<br>
<img alt="Pasted image 20250421164348.png" src="https://lts.kr/사진-및-문서/pasted-image-20250421164348.png" style="width: 750px; max-width: 100%;" target="_self">
<br>Git Hook, Cron, Webhook, Polling 등 다양한 트리거 지원
<br>Webhook vs Polling
폴링(Poliing) : 일정 시간 간격으로 저장소의 변경사항을 확인<br>
웹훅(Webhook) : 저장소(Git 등)에 변경사항이 발생했을 때, 젠킨스에 즉시 알려주는 방식
<br>이를 설정하는 방법은 젠킨스의 파이프 라인 설정을 통해 이루어 진다.<br>파이프라인 구조 예시
<br>pipeline { agent any triggers { // GitHub에서 Webhook을 통해 이벤트가 올 때 트리거됨 githubPush() } stages { stage('Checkout') { steps { git url: 'https://github.com/your-org/your-repo.git', branch: 'main' } } stage('Build') { steps { sh 'echo Building...' } } } ---- agent any triggers { // 5분마다 Git 변경사항 확인 (cron 표현식) pollSCM('H/5 * * * *') } stages { stage('Checkout') { steps { git url: 'https://github.com/your-org/your-repo.git', branch: 'main' } } stage('Build') { steps { sh 'echo Building...' } } }
}
<br>
<br>Freestyle Job: 기본 작업 단위 (빌드, 테스트, 배포 설정)
<br>Pipeline: Groovy 기반 DSL로 멀티스텝 작업 정의
<br>Multibranch Pipeline: 브랜치마다 파이프라인 분기 설정
<br>
<br>1,800개 이상의 공식 플러그인
<br>주요 플러그인: <br>Git / GitHub / Bitbucket
<br>Docker
<br>Slack / Email Notification
<br>Kubernetes
<br>SonarQube
<br>Artifactory / Nexus <br>
<br>이메일, Slack, Teams, Webhook 등 다양한 알림 지원
<br>실패/성공/경고 상태에 따라 조건부 메시지 전송 가능
<br>
<br>작업당 빌드 결과 로그 저장
<br>실패 시 어떤 스텝에서 실패했는지 명확히 추적 가능
<br>
<br>LDAP, Active Directory 연동
<br>Role 기반 접근 제어 (RBAC)
<br>Job/Folder 단위 권한 설정 <br>
<br>Master는 Job 스케줄링 및 관리
<br>Agent (노드)는 실제 빌드 실행 담당
<br>스케일아웃 구조로 부하 분산 가능
<br>젠킨스와 도커는 서버 자동화(CI/CD)환경에서 매우 자주 함께 활용된다.<br>
두 도구의 역할은 서로 다르지만 서로를 보완해주는 역할을 한다.<br>먼저 도커의 주 역할은 애플리케이션 실행 환경의 캡슐화 이다.<br>
이렇게 캡슐화된 것을 이미지 또는 컨테이너라고 한다.<br>이미지와 컨테이너?
이미지와 컨테이너는 사실상 같은 개념을 가리키는 용어이다.
도커 이미지 : Docker라는 특정 기술/플랫폼을 통해 생성되고 관리되는 이미지. Docker에 종속적<br>
컨테이너 : 보다 일반적인 용어로, 컨테이너 기술을 사용하는 모든 플랫폼의 이미지를 뜻한다.
<br>즉, 젠킨스와 도커의 관계를 요약하자면<br>
Jenkins는 Docker를 사용해 컨테이너 환경에서 빌드와 테스트를 실행하거나, 애플리케이션을 Docker 이미지로 빌드하고 레지스트리에 배포하며, 필요 시 Jenkins 자체도 Docker 컨테이너로 실행할 수 있다.<br>
<br>파이프라인 실행 트리거 <br>GitHub/GitLab에서 코드 변경 발생 시: <br>✅ Webhook: 변경 사항을 Jenkins에 즉시 알림
<br>✅ Polling: Jenkins가 주기적으로 변경 여부 확인<br>소스코드 + Dockerfile 가져오기 <br>트리거 감지 후 Jenkins가 Git 저장소에서 코드와 Dockerfile을 `checkout <br>dockerfile
→ 컨테이너 이미지를 만들기 위한 설정 파일(스크립트)<br>
쉽게 말해, “어떤 OS에, 어떤 앱을 설치하고, 어떤 명령을 실행할 것인지”를 정의한 레시피라고 볼 수 있다.
<br>Docker 이미지 빌드 <br>docker build -t my-app . 명령으로 컨테이너 이미지 생성<br>컨테이너 기반 테스트 수행 (선택) <br>docker run으로 테스트 자동화 실행<br>Docker 이미지 푸시 <br>DockerHub, ECR 등에 docker push 수행<br>서버 또는 클러스터에 배포 <br>SSH, Docker Compose, Kubernetes 등을 통해 자동 배포<br>
▶ <a data-href="🚢Kubernetes(k8s)란" href="https://lts.kr/tools/kubernetes/🚢kubernetes(k8s)란.html" class="internal-link" target="_self" rel="noopener nofollow">🚢Kubernetes(k8s)란</a> <br>알림 및 로그 저장 <br>Slack, Email 알림 전송 + Jenkins에 빌드 로그 기록]]></description><link>https://lts.kr/tools/jenkins/👔-jenkins란.html</link><guid isPermaLink="false">Tools/Jenkins/👔 Jenkins란.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Wed, 23 Apr 2025 06:30:56 GMT</pubDate><enclosure url="https://lts.kr/사진-및-문서/pasted-image-20250421164348.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://lts.kr/사진-및-문서/pasted-image-20250421164348.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[🪓 도구]]></title><description><![CDATA[<a class="tag" href="https://lts.kr/?query=tag:Tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Tools</a> <a class="tag" href="https://lts.kr/?query=tag:모음" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#모음</a> <a class="tag" href="https://lts.kr/?query=tag:도구" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#도구</a> <br> <a href="https://lts.kr?query=tag:Tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Tools">#Tools</a> <a href="https://lts.kr?query=tag:모음" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#모음">#모음</a> <a href="https://lts.kr?query=tag:도구" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#도구">#도구</a><br>툴 모음
제가 사용하고 있는 편리/유용한 TOOL을 소개하고 설명하는 곳 입니다.
<br>
<br><a data-href="🍊 aws EC2란" href="https://lts.kr/tools/aws/🍊-aws-ec2란.html" class="internal-link" target="_self" rel="noopener nofollow">🍊 aws EC2란</a>
<br><a data-href="🌥 aws(EC2)셋팅부터 배포까지" href="https://lts.kr/tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html" class="internal-link" target="_self" rel="noopener nofollow">🌥 aws(EC2)셋팅부터 배포까지</a>
<br><a data-href="🍌 Elastic IP(탄력적 IP)란" href="https://lts.kr/tools/aws/🍌-elastic-ip(탄력적-ip)란.html" class="internal-link" target="_self" rel="noopener nofollow">🍌 Elastic IP(탄력적 IP)란</a>
<br>
<br><a data-href="🐋 docker 란" href="https://lts.kr/tools/docker/🐋-docker-란.html" class="internal-link" target="_self" rel="noopener nofollow">🐋 docker 란</a>
<br><a data-href="📘 SpringBoot &amp; Docker + Reids 연동" href="https://lts.kr/tools/docker/📘-springboot-&amp;-docker-+-reids-연동.html" class="internal-link" target="_self" rel="noopener nofollow">📘 SpringBoot &amp; Docker + Reids 연동</a>
<br>
<br><a data-href="👔 Jenkins란" href="https://lts.kr/tools/jenkins/👔-jenkins란.html" class="internal-link" target="_self" rel="noopener nofollow">👔 Jenkins란</a>
<br>
<br><a data-href="🚢Kubernetes(k8s)란" href="https://lts.kr/tools/kubernetes/🚢kubernetes(k8s)란.html" class="internal-link" target="_self" rel="noopener nofollow">🚢Kubernetes(k8s)란</a>
<br>
<br><a data-href="🍎 Redis로 Key관리하기" href="https://lts.kr/study/cs/🍎-redis로-key관리하기.html" class="internal-link" target="_self" rel="noopener nofollow">🍎 Redis로 Key관리하기</a>
<br><a data-href="🔐 상품 투자하기 서비스 Lock기법 개선안" href="https://lts.kr/issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html" class="internal-link" target="_self" rel="noopener nofollow">🔐 상품 투자하기 서비스 Lock기법 개선안</a>
<br><a data-href="🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성" href="https://lts.kr/study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html" class="internal-link" target="_self" rel="noopener nofollow">🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성</a>
<br>
<br><a data-href="🎵 Obsidian" href="https://lts.kr/tools/🎵-obsidian.html" class="internal-link" target="_self" rel="noopener nofollow">🎵 Obsidian</a>
<br><a data-href="👻 Obsidian 정적호스팅 CICD 과정" href="https://lts.kr/project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html" class="internal-link" target="_self" rel="noopener nofollow">👻 Obsidian 정적호스팅 CICD 과정</a>
<br>
<br>🩹추가예정!!]]></description><link>https://lts.kr/tools/🪓-도구.html</link><guid isPermaLink="false">Tools/🪓 도구.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Wed, 23 Apr 2025 05:45:53 GMT</pubDate></item></channel></rss>