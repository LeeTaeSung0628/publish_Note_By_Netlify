let graphData=
{"graphOptions":{"attractionForce":1,"linkLength":10,"repulsionForce":150,"centralForce":3,"edgePruning":100,"minNodeRadius":3,"maxNodeRadius":7},"isInitialized":true,"paths":["issue_troubleshooting/🔐-상품-투자하기-서비스-이슈-및-lock기법-개선안.html","issue_troubleshooting/🚦-spring-batch(스레드와-트렌젝션)-트러블슈팅.html","issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html","issue_troubleshooting/⏰-script-로딩-지연-이슈.html","lectur/🏫-강의.html","lectur/2.-스프링-핵심-원리-이해.html","lectur/1.-객체-지향-설계와-스프링.html","project/💻-프로젝트.html","project/note-ci_cd/👻-obsidian-정적호스팅-cicd-과정.html","project/note-ci_cd/⛈-obsidian-aws연동.html","project/hello-marketing/👩‍👧‍👦-analytics-공통모듈-admin용-데이터-추출.html","project/hello-marketing/👩‍👧‍👦-marketing-analytics-공통모듈-제작기.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링.html","project/hello-batch/🏹-예치금-차액-비교-spring-batch-리펙토링-부록.html","project/hello-batch/✏-chunk_partitioning-batch-구조-드로잉.html","study/📕-공부.html","study/커리큘럼/🆕-dev-커리큘럼.html","study/정보처리기사/정보처리기사-필기/🥈-필기-4과목-프로그래밍-언어-활용.html","study/정보처리기사/정보처리기사-필기/🥈-필기-5과목-정보시스템-구축관리.html","study/정보처리기사/정보처리기사-필기/🥈-필기-2과목-소프트웨어-개발.html","study/정보처리기사/정보처리기사-필기/🥈-필기-3과목-데이터베이스-구축.html","study/정보처리기사/정보처리기사-필기/🥈-필기-1과목-소프트웨어-설계.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-프로그래밍-제어문.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-키워드.html","study/정보처리기사/정보처리기사-실기/🥇-정보처리-기사-실기-sql-문제.html","study/cs/📭-server.html","study/cs/📔-database.html","study/cs/🐞-etc.html","study/cs/🎩-devops.html","study/cs/🍃-spring.html","study/cs/☕-java-,-oop.html","study/dev-seminar/🪕-jpa-에-대한-고찰.html","study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html","study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html","study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html","study/dev-seminar/🔹-tdd에-대하여.html","study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock.html","study/coding-test/🤠-coding-test-풀이-모음.html","study/coding-test/👽-algorithm.html","tools/🪓-도구.html","tools/🎵-obsidian.html","tools/docker/📘-springboot-&-docker-+-reids-연동.html","tools/docker/🐋-docker.html","tools/aws/🍌-elastic-ip(탄력적-ip)란.html","tools/aws/🍊-aws-ec2란.html","tools/aws/🌥-aws(ec2)셋팅부터-배포까지.html","index.html"],"nodeCount":47,"linkSources":[0,1,4,4,7,7,7,7,7,7,7,7,7,8,10,11,12,12,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,17,18,19,20,21,39,39,39,39,39,39,39,39,41,41,42,42,43,44,45,45,46,46,46,46],"linkTargets":[26,12,6,5,12,13,14,11,10,8,9,41,45,40,11,10,14,1,13,3,0,1,2,30,29,28,26,25,27,37,38,33,36,35,31,32,34,21,19,20,17,18,23,24,22,18,23,20,17,19,44,45,43,42,41,40,8,9,42,45,41,45,44,45,44,41,7,15,39,4],"labels":["🔐 상품 투자하기 서비스 이슈 및 Lock기법 개선안","🚦 Spring Batch(스레드와 트렌젝션) 트러블슈팅","⚔ StckOverflow 이슈와 QueryDSL","⏰ Script 로딩 지연 이슈","🏫 강의","2. 스프링 핵심 원리 이해","1. 객체 지향 설계와 스프링","💻 프로젝트","👻 Obsidian 정적호스팅 CICD 과정","⛈ Obsidian-AWS연동","👩‍👧‍👦 Analytics 공통모듈 ADMIN용 데이터 추출","👩‍👧‍👦 marketing Analytics 공통모듈 제작기","🏹 예치금 차액 비교 Spring Batch 리펙토링","🏹 예치금 차액 비교 Spring Batch 리펙토링 부록","✏ Chunk_Partitioning Batch 구조 드로잉","📕 공부","🆕 Dev 커리큘럼","🥈 필기 4과목 - 프로그래밍 언어 활용","🥈 필기 5과목 - 정보시스템 구축관리","🥈 필기 2과목 - 소프트웨어 개발","🥈 필기 3과목 - 데이터베이스 구축","🥈 필기 1과목 - 소프트웨어 설계","🥇 정보처리 기사 실기 프로그래밍-제어문","🥇 정보처리 기사 실기 키워드","🥇 정보처리 기사 실기 SQL 문제","📭 Server","📔 DataBase","🐞 etc","🎩 DevOps","🍃 Spring","☕ JAVA , OOP","🪕 JPA 에 대한 고찰","🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여","🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성","📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가","🔹 TDD에 대하여","🍂 JPA, Mybatis , Dead Lock","🤠 Coding Test 풀이 모음","👽 Algorithm","🪓 도구","🎵 Obsidian","📘 SpringBoot & Docker + Reids 연동","🐋 docker","🍌 Elastic IP(탄력적 IP)란","🍊 aws EC2란","🌥 aws(EC2)셋팅부터 배포까지","index"],"radii":[3.706447187928669,4.033950617283951,3.361796982167353,3.361796982167353,4.033950617283951,3.361796982167353,3.361796982167353,5.84636488340192,4.033950617283951,3.706447187928669,4.033950617283951,4.033950617283951,4.637517146776406,3.706447187928669,3.706447187928669,7,3,4.033950617283951,4.033950617283951,4.033950617283951,4.033950617283951,3.706447187928669,3.361796982167353,3.706447187928669,3.361796982167353,3.361796982167353,3.706447187928669,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,3.361796982167353,5.638888888888889,3.706447187928669,4.91358024691358,4.344307270233196,3.706447187928669,4.344307270233196,5.172496570644719,4.344307270233196],"linkCount":70};