<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[taesunglog]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib/media/favicon.png</url><title>taesunglog</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Fri, 21 Feb 2025 08:52:13 GMT</lastBuildDate><atom:link href="lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Fri, 21 Feb 2025 08:52:11 GMT</pubDate><ttl>60</ttl><dc:creator/><item><title><![CDATA[🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여]]></title><description><![CDATA[<a class="tag" href="?query=tag:공부" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#공부</a> <a class="tag" href="?query=tag:Java" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Java</a> <a class="tag" href="?query=tag:SPRING" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#SPRING</a> <a class="tag" href="?query=tag:Security" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Security</a> <a class="tag" href="?query=tag:Tokken" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Tokken</a> <a class="tag" href="?query=tag:Session" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Session</a> <a class="tag" href="?query=tag:Cookie" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Cookie</a> <br> <a href=".?query=tag:공부" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#공부">#공부</a> <a href=".?query=tag:Java" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Java">#Java</a> <a href=".?query=tag:SPRING" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#SPRING">#SPRING</a> <a href=".?query=tag:Security" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Security">#Security</a> <a href=".?query=tag:Tokken" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Tokken">#Tokken</a> <a href=".?query=tag:Session" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Session">#Session</a> <a href=".?query=tag:Cookie" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Cookie">#Cookie</a><br>
<br>Spring Security는 Spring 기반 애플리케이션에서 인증(Authentication)과 권한 부여(Authorization)를 제공하는 강력한 보안 프레임워크입니다.
<br>다양한 보안 요구사항(예: HTTP 인증, OAuth2, JWT 등)을 처리할 수 있도록 확장 가능합니다.
<br>
<br>
인증(Authentication): <br>사용자가 애플리케이션에 접근하기 전에 신원을 확인.
<br>일반적으로 사용자 이름과 비밀번호를 기반으로 인증. <br>
권한 부여(Authorization): <br>인증된 사용자가 애플리케이션의 특정 리소스나 작업에 접근할 수 있는지 확인. <br>
보안 필터: <br>요청과 응답을 처리하기 위한 필터 체인을 제공.
<br>요청이 필터 체인을 통과하면 보안 정책이 적용됨. <br>
확장성: <br>OAuth2, JWT, LDAP 등 다양한 인증 방식과 통합 가능. <br>
<br>토큰(Token)은 인증 정보를 포함하는 문자열로, 클라이언트와 서버 간 인증 및 권한 부여를 간편화합니다.
<br>사용자가 인증을 완료하면 서버가 토큰을 발급하고, 클라이언트는 이후 요청에 토큰을 포함하여 인증을 유지합니다.
<br>
<br>
무상태성: <br>토큰은 상태 정보를 포함하므로 서버가 세션을 유지할 필요 없음.
<br>클라이언트가 모든 요청에 토큰을 포함하여 서버로 전송. <br>
토큰 종류: <br>Bearer Token: 요청 헤더에 포함되어 인증.
<br>Refresh Token: Access Token이 만료되었을 때 재발급에 사용. <br>
<br>세션(Session)은 사용자가 서버에 접속한 동안 유지되는 상태 정보입니다.
<br>서버는 클라이언트의 각 요청을 식별하기 위해 세션 ID를 생성하고, 이를 클라이언트에 제공.
<br>
<br>사용자가 로그인하면 서버가 고유한 세션 ID를 생성.
<br>세션 ID는 클라이언트의 쿠키에 저장.
<br>이후 요청에서 클라이언트는 세션 ID를 포함하여 서버로 전송.
<br>서버는 세션 저장소(Session Store)에 저장된 정보를 기반으로 클라이언트를 식별.
<br>
<br>상태 유지: <br>서버는 클라이언트별로 상태 정보를 유지. <br>확장성 문제: <br>서버가 클라이언트별로 상태를 저장하므로 대규모 확장성이 떨어질 수 있음. <br>
<br>쿠키(Cookie)는 클라이언트 브라우저에 저장되는 데이터 조각으로, 서버와 클라이언트 간 정보를 유지하기 위해 사용.
<br>
<br>서버가 응답에 쿠키를 설정하면 클라이언트는 쿠키를 저장.
<br>클라이언트는 이후 요청에 저장된 쿠키를 자동으로 서버에 포함.
<br>서버는 쿠키를 기반으로 요청을 처리.
<br>
<br>키-값 쌍: <br>쿠키는 key=value 형태로 저장. <br>보안 옵션: <br>HttpOnly: 자바스크립트를 통해 접근 불가.
<br>Secure: HTTPS 요청에서만 전송. <br>유효 기간: <br>쿠키는 만료 시간이 지나면 자동 삭제. <br>
<br>JWT는 JSON 형식으로 인코딩된 토큰으로, 클라이언트와 서버 간 인증 정보를 안전하게 전달하기 위해 사용.
<br>무상태 인증 방식에서 많이 사용됨.
<br>JWT는 세 부분으로 구성:<br>Header: <br>토큰 타입(JWT)과 알고리즘(HMAC, RSA 등) 정보를 포함.
<br>예: {"alg": "HS256", "typ": "JWT"} <br>Payload: <br>토큰에 포함된 클레임(Claim) 정보를 포함.
<br>예: {"sub": "user123", "role": "admin"} <br>Signature: <br>Header와 Payload를 비밀키로 서명하여 생성.
<br>예: HMACSHA256(base64UrlEncode(header) + "." + base64UrlEncode(payload), secret) <br>
<br>사용자가 로그인하면 서버가 JWT를 생성하여 클라이언트에 전달.
<br>클라이언트는 이후 요청에서 JWT를 Authorization 헤더에 포함.
<br>서버는 JWT를 검증하여 사용자를 인증.
<br>
<br>자체 포함(Self-contained): <br>JWT는 인증 정보와 사용자 정보를 모두 포함. <br>무상태성: <br>서버는 JWT를 저장하지 않으므로 확장성이 뛰어남. <br>보안: <br>서명(Signature)을 통해 변조를 방지.
<br>그러나 암호화되지 않은 Payload는 누구나 읽을 수 있음. <br>
<br>상태 정보 저장 없음: <br>서버는 클라이언트의 상태 정보를 유지하지 않습니다.
<br>즉, 서버는 이전 요청에 대한 정보를 기억하지 않고, 요청마다 필요한 인증 정보를 다시 받아야 합니다. <br>클라이언트 책임: <br>인증 정보(예: JWT 토큰)는 클라이언트가 관리합니다.
<br>클라이언트는 매 요청마다 서버에 인증 정보를 제공해야 합니다. <br>확장성: <br>서버 간 상태 동기화가 필요 없으므로 수평 확장이 용이합니다.
<br>로드 밸런싱을 사용하는 다중 서버 환경에서 적합. <br>
<br>
Spring Security: <br>인증과 권한 부여를 처리하는 보안 프레임워크.
<br>세션, 쿠키, 토큰(JWT 포함)과 통합 가능. <br>
Token: <br>인증 정보를 포함한 문자열.
<br>서버-클라이언트 간 무상태 인증을 위해 사용. <br>
Session: <br>서버가 클라이언트별 상태 정보를 유지.
<br>확장성이 낮지만 단순한 구조. <br>
Cookie: <br>클라이언트에 저장되는 작은 데이터 조각.
<br>세션 ID 또는 JWT 저장에 사용. <br>
JWT: <br>JSON 형식의 자체 포함 토큰.
<br>무상태 인증 및 높은 확장성을 제공.]]></description><link>study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html</link><guid isPermaLink="false">study/Dev Seminar/🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여.md</guid><pubDate>Fri, 21 Feb 2025 08:51:48 GMT</pubDate></item><item><title><![CDATA[🏠 taesung's Blog]]></title><description><![CDATA[<a class="tag" href="?query=tag:home" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#home</a> <a class="tag" href="?query=tag:index" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#index</a> <a class="tag" href="?query=tag:blog" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blog</a> <a class="tag" href="?query=tag:공부" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#공부</a> <br> <a href=".?query=tag:home" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#home">#home</a> <a href=".?query=tag:index" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#index">#index</a> <a href=".?query=tag:blog" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#blog">#blog</a> <a href=".?query=tag:공부" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#공부">#공부</a><br><a data-tooltip-position="top" aria-label="https://github.com/LeeTaeSung0628" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/LeeTaeSung0628" target="_self"><span alt="Pasted image 20250220144552.png" src="Pasted image 20250220144552.png" class="internal-embed media-embed image-embed is-loaded" style="width: 220px; max-width: 100%;"></span></a><img alt="Pasted image 20250220144552.png" src="사진-및-문서/pasted-image-20250220144552.png" style="width: 220px; max-width: 100%;" target="_self"><br>
<a data-tooltip-position="top" aria-label="https://github.com/LeeTaeSung0628" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/LeeTaeSung0628" target="_self"><font color="#ffffff"></font></a>🔗git Hub 이동<br><a data-tooltip-position="top" aria-label="https://git.io/typing-svg" rel="noopener nofollow" class="external-link is-unresolved" href="https://git.io/typing-svg" target="_self"></a><img alt="Typing SVG" src="https://readme-typing-svg.demolab.com?font=Fira+Code&amp;pause=1000&amp;color=36A9F7&amp;random=false&amp;width=435&amp;lines=%EC%97%AC%EA%B8%B0%EB%8A%94+%EA%B3%B5%EB%B6%80%ED%95%98%EA%B3%A0%2C+%EA%B8%B0%EB%A1%9D%ED%95%98%EB%8A%94+%EA%B3%B3%EC%9E%85%EB%8B%88%EB%8B%A4" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br> <br> <br> <br> <br> <br> <br> <br> <br> <br>Soon <br>깃 레포에서도 블로그 주소로 이어질 수 있도록 Readme 설정하기. <br>리드미 또한 옵시디언에서 작업이 가능하다. <br>Netlify 셋팅 추가하기]]></description><link>index.html</link><guid isPermaLink="false">index.md</guid><pubDate>Fri, 21 Feb 2025 08:49:24 GMT</pubDate><enclosure url="사진-및-문서/pasted-image-20250220144552.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="사진-및-문서/pasted-image-20250220144552.png"&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>