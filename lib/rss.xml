<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[blog]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://lts.kr/</link><image><url>http://lts.kr/lib/media/favicon.png</url><title>blog</title><link>http://lts.kr/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Tue, 25 Mar 2025 09:09:15 GMT</lastBuildDate><atom:link href="http://lts.kr/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Tue, 25 Mar 2025 09:09:12 GMT</pubDate><copyright><![CDATA[taesung's Blog]]></copyright><ttl>60</ttl><dc:creator>taesung's Blog</dc:creator><item><title><![CDATA[🔫 이슈·트러블슈팅]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:이슈" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#이슈</a> <a class="tag" href="http://lts.kr/?query=tag:트러블슈팅" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#트러블슈팅</a> <a class="tag" href="http://lts.kr/?query=tag:모음" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#모음</a> <br> <a href="http://lts.kr?query=tag:이슈" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#이슈">#이슈</a> <a href="http://lts.kr?query=tag:트러블슈팅" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#트러블슈팅">#트러블슈팅</a> <a href="http://lts.kr?query=tag:모음" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#모음">#모음</a><br>이슈 / 트러블 슈팅
크고 작은 이슈와, 그 해결 과정을 쓴 글 모음입니다.
<br>
<br><a data-href="🍂 JPA, Mybatis , Dead Lock이슈" href="http://lts.kr/study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html" class="internal-link" target="_self" rel="noopener nofollow">🍂 JPA, Mybatis , Dead Lock이슈</a>
<br><a data-href="🔐 상품 투자하기 서비스 Lock기법 개선안" href="http://lts.kr/issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html" class="internal-link" target="_self" rel="noopener nofollow">🔐 상품 투자하기 서비스 Lock기법 개선안</a>
<br><a data-href="⚔ StckOverflow 이슈와 QueryDSL" href="http://lts.kr/issue_troubleshooting/⚔-stckoverflow-이슈와-querydsl.html" class="internal-link" target="_self" rel="noopener nofollow">⚔ StckOverflow 이슈와 QueryDSL</a>
<br>
<br><a data-href="🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)" href="http://lts.kr/study/cs/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html" class="internal-link" target="_self" rel="noopener nofollow">🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)</a>
<br><a data-href="🐡 Spring Security와 Filter 적용기" href="http://lts.kr/project/🐡-spring-security와-filter-적용기.html" class="internal-link" target="_self" rel="noopener nofollow">🐡 Spring Security와 Filter 적용기</a>
<br><a data-href="🚦 Spring Batch 트러블슈팅" href="http://lts.kr/issue_troubleshooting/🚦-spring-batch-트러블슈팅.html" class="internal-link" target="_self" rel="noopener nofollow">🚦 Spring Batch 트러블슈팅</a>
<br><a data-href="⏰ Script 로딩 지연 문제 해결 .js" href="http://lts.kr/issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html" class="internal-link" target="_self" rel="noopener nofollow">⏰ Script 로딩 지연 문제 해결 .js</a>]]></description><link>http://lts.kr/project/🔫-이슈·트러블슈팅.html</link><guid isPermaLink="false">project/🔫 이슈·트러블슈팅.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 09:08:53 GMT</pubDate></item><item><title><![CDATA[🏠 taesung's Blog]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:home" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#home</a> <a class="tag" href="http://lts.kr/?query=tag:index" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#index</a> <a class="tag" href="http://lts.kr/?query=tag:blog" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blog</a> <a class="tag" href="http://lts.kr/?query=tag:공부" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#공부</a> <br> <a href="http://lts.kr?query=tag:home" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#home">#home</a> <a href="http://lts.kr?query=tag:index" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#index">#index</a> <a href="http://lts.kr?query=tag:blog" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#blog">#blog</a> <a href="http://lts.kr?query=tag:공부" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#공부">#공부</a><br><a data-tooltip-position="top" aria-label="https://github.com/LeeTaeSung0628" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/LeeTaeSung0628" target="_self"><span alt="Pasted image 20250220144552.png" src="Pasted image 20250220144552.png" class="internal-embed media-embed image-embed is-loaded" style="width: 220px; max-width: 100%;"></span></a><img alt="Pasted image 20250220144552.png" src="http://lts.kr/사진-및-문서/pasted-image-20250220144552.png" style="width: 220px; max-width: 100%;" target="_self"><br><a data-tooltip-position="top" aria-label="https://git.io/typing-svg" rel="noopener nofollow" class="external-link is-unresolved" href="https://git.io/typing-svg" target="_self"></a><img alt="Typing SVG" src="https://readme-typing-svg.demolab.com?font=Fira+Code&amp;pause=1000&amp;color=36A9F7&amp;random=false&amp;width=435&amp;lines=%EC%97%AC%EA%B8%B0%EB%8A%94+%EA%B3%B5%EB%B6%80%ED%95%98%EA%B3%A0%2C+%EA%B8%B0%EB%A1%9D%ED%95%98%EB%8A%94+%EA%B3%B3%EC%9E%85%EB%8B%88%EB%8B%A4" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>]]></description><link>http://lts.kr/🏠-taesung's-blog.html</link><guid isPermaLink="false">🏠 taesung's Blog.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 09:06:21 GMT</pubDate><enclosure url="http://lts.kr/사진-및-문서/pasted-image-20250220144552.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="http://lts.kr/사진-및-문서/pasted-image-20250220144552.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[⏰ Script 로딩 지연 이슈 .js]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:Script" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Script</a> <a class="tag" href="http://lts.kr/?query=tag:로딩지연" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#로딩지연</a> <a class="tag" href="http://lts.kr/?query=tag:성능개선" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#성능개선</a> <br> <a href="http://lts.kr?query=tag:Script" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Script">#Script</a> <a href="http://lts.kr?query=tag:로딩지연" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#로딩지연">#로딩지연</a> <a href="http://lts.kr?query=tag:성능개선" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#성능개선">#성능개선</a><br><img alt="Pasted image 20241105110415.png" src="http://lts.kr/사진-및-문서/pasted-image-20241105110415.png" style="width: 575px; max-width: 100%;" target="_self"><br>mainLayout은 Contents loading 후 Script를 호출하기 때문에, 특정 정적 오브젝트의 로딩이 완전히 마무리 될때 까지 실행되지 않음.<br>
=&gt; ex) 상품이 로딩되지 않은 상태로 최대 20초 가량을 대기 하게 됨<br>
<img alt="Pasted image 20250227140437.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227140437.png" style="width: 600px; max-width: 100%;" target="_self">
<br><img alt="Pasted image 20250227140620.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227140620.png" target="_self"><br>icon(아이콘)
<br>font(폰트)
<br> 현재 원인이 되는 외부자원(이미지/CSS)가 로딩되기 이전에 이벤트를 트리거 할 수 있다.<br>
이때, HTML DOM 트리가 준비 된 후(HTML 템플릿이 준비된 후)에 실행되기 때문에 modelAndView.addObject()로 전달한 데이터를 확정적으로 받아올 수 있다.<br>
<br>기존 메인 진입 소요시간 case 1 (로컬)<br>
<img alt="Pasted image 20241105110637.png" src="http://lts.kr/사진-및-문서/pasted-image-20241105110637.png" style="width: 500px; max-width: 100%;" target="_self"><br>
23초
<br>
<br>기존 메인 진입 소요시간 case 2 (로컬)<br>
<img alt="Pasted image 20241105110713.png" src="http://lts.kr/사진-및-문서/pasted-image-20241105110713.png" style="width: 500px; max-width: 100%;" target="_self"><br>
22초
<br>
<br>기존 메인 진입 소요시간 case 1 (운영)<br>
<img alt="Pasted image 20241107115602.png" src="http://lts.kr/사진-및-문서/pasted-image-20241107115602.png" style="width: 475px; max-width: 100%;" target="_self"><br>
21초
<br>
<br>기존 메인 진입 소요시간 case 2 (운영)<br>
<img alt="Pasted image 20241107115830.png" src="http://lts.kr/사진-및-문서/pasted-image-20241107115830.png" style="width: 475px; max-width: 100%;" target="_self"><br>
21초
<br>
<br>변경된 메인 진입 소요시간 case 1 (로컬)<br>
<img alt="Pasted image 20241107121044.png" src="http://lts.kr/사진-및-문서/pasted-image-20241107121044.png" style="width: 500px; max-width: 100%;" target="_self"><br>
0.201초
<br>
<br>변경된 메인 진입 소요시간 case 2 (로컬)<br>
<img alt="Pasted image 20241107121202.png" src="http://lts.kr/사진-및-문서/pasted-image-20241107121202.png" style="width: 500px; max-width: 100%;" target="_self"><br>
0.297초
<br>
<br>변경된 메인 진입 소요시간 case 3 (로컬)<br>
<img alt="Pasted image 20241107121939.png" src="http://lts.kr/사진-및-문서/pasted-image-20241107121939.png" style="width: 500px; max-width: 100%;" target="_self"><br>
0.232초
<br>
리로드 후 스크립트(상품 리스트)로드 시까지
<br>기존 투자하기 소요시간 case 1<br>
<img alt="Pasted image 20250227114750.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227114750.png" target="_self"><br>
22.4초<br>
<img alt="Pasted image 20250227114826.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227114826.png" target="_self">
<br>
<br>기존 투자하기 소요시간 case 2<br>
<img alt="Pasted image 20250227115004.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227115004.png" target="_self"><br>
22.6초<br>
<img alt="Pasted image 20250227115015.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227115015.png" target="_self">
<br>
<br>기존 투자하기 소요시간 case 3<br>
<img alt="Pasted image 20250227115158.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227115158.png" target="_self"><br>
22.5초<br>
<img alt="Pasted image 20250227115148.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227115148.png" target="_self">
<br>
<br>변경 투자하기 소요시간 case 1<br>
<img alt="Pasted image 20250227121009.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227121009.png" style="width: 500px; max-width: 100%;" target="_self"><br>
0.373초
<br>
<br>변경 투자하기 소요시간 case 2<br>
<img alt="Pasted image 20250227121046.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227121046.png" style="width: 500px; max-width: 100%;" target="_self"><br>
0.362초
<br>
<br>변경 투자하기 소요시간 case 3<br>
<img alt="Pasted image 20250227121942.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227121942.png" style="width: 475px; max-width: 100%;" target="_self"><br>
0.360초
<br><img alt="Pasted image 20250227122010.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227122010.png" target="_self"><br><img alt="Pasted image 20250227122736.png" src="http://lts.kr/사진-및-문서/pasted-image-20250227122736.png" target="_self"><br>
<br>aceat.js?advid=1954816599 - 에이스트레이더<br>
<a rel="noopener nofollow" class="external-link is-unresolved" href="https://cdn.nhnace.com/libs/aceat.js?advid=195481" target="_self">https://cdn.nhnace.com/libs/aceat.js?advid=195481</a>
<br>synchronizer.js - 네이버 관련 서버<br>
<a rel="noopener nofollow" class="external-link is-unresolved" href="https://ssl.pstatic.net/melona/libs/gfp-nac-module/synchronizer.js" target="_self">https://ssl.pstatic.net/melona/libs/gfp-nac-module/synchronizer.js</a>
<br>collect?en=page_view&amp;dr=localhost&amp;dl=http%... - 구글<br>
<a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.google.com/ccm/collect" target="_self">https://www.google.com/ccm/collect</a>... - 구글
<br>869613409/?random=1740626824235&amp;cv=11&amp;f...<br>
<a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.google.com/pagead/1p" target="_self">https://www.google.com/pagead/1p</a>...
<br>869613409/?random=1740626824235&amp;cv=11&amp;f... <br>869613409/?random=1110219531&amp;cv=11&amp;fst=... <br>
내부망 사용으로 인한 요청 실패, 중요 데이터 없음.
<br><img alt="output (14).png" src="http://lts.kr/사진-및-문서/output-(14).png" target="_self"><br>Main 페이지: 기존 21~23초 → 0.201~0.297초로 약 99% 속도 향상<br>
ProductList 페이지: 기존 22.4~22.6초 → 0.360~0.373초로 약 98% 속도 향상<br>
<br>정상 투자 확인<br>
<img alt="Pasted image 20250304121056.png" src="http://lts.kr/사진-및-문서/pasted-image-20250304121056.png" style="width: 475px; max-width: 100%;" target="_self"><br>
<img alt="Pasted image 20250304121009.png" src="http://lts.kr/사진-및-문서/pasted-image-20250304121009.png" style="width: 475px; max-width: 100%;" target="_self"><br>
<img alt="Pasted image 20250304121455.png" src="http://lts.kr/사진-및-문서/pasted-image-20250304121455.png" style="width: 475px; max-width: 100%;" target="_self"><br>
<img alt="Pasted image 20250304121338.png" src="http://lts.kr/사진-및-문서/pasted-image-20250304121338.png" style="width: 500px; max-width: 100%;" target="_self">]]></description><link>http://lts.kr/issue_troubleshooting/⏰-script-로딩-지연-문제-해결-.js.html</link><guid isPermaLink="false">Issue_TroubleShooting/⏰ Script 로딩 지연 문제 해결 .js.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 09:05:23 GMT</pubDate><enclosure url="http://lts.kr/사진-및-문서/pasted-image-20241105110415.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="http://lts.kr/사진-및-문서/pasted-image-20241105110415.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[📕 공부]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:공부" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#공부</a> <a class="tag" href="http://lts.kr/?query=tag:모음" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#모음</a> <br> <a href="http://lts.kr?query=tag:공부" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#공부">#공부</a> <a href="http://lts.kr?query=tag:모음" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#모음">#모음</a><br>공부
보고 배운 지식 중 공유하고 싶은 정보를 모아둔 카테고리 입니다.
<br>
<br><a data-href="🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)" href="http://lts.kr/study/cs/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html" class="internal-link" target="_self" rel="noopener nofollow">🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)</a>
<br><a data-href="🐡 Spring Security와 Filter 적용기" href="http://lts.kr/project/🐡-spring-security와-filter-적용기.html" class="internal-link" target="_self" rel="noopener nofollow">🐡 Spring Security와 Filter 적용기</a>
<br><a data-href="🌋 OSIV와 영속성 컨텍스트" href="http://lts.kr/study/cs/🌋-osiv와-영속성-컨텍스트.html" class="internal-link" target="_self" rel="noopener nofollow">🌋 OSIV와 영속성 컨텍스트</a>
<br><a data-href="🐰 Java의 String과 SpringBuffer" href="http://lts.kr/study/cs/🐰-java의-string과-springbuffer.html" class="internal-link" target="_self" rel="noopener nofollow">🐰 Java의 String과 SpringBuffer</a>
<br><a data-href="🛬 JDK와 JRE, JVM" href="http://lts.kr/study/cs/🛬-jdk와-jre,-jvm.html" class="internal-link" target="_self" rel="noopener nofollow">🛬 JDK와 JRE, JVM</a>
<br><a data-href="🍊 Spring의 의존성 주입(DI)" href="http://lts.kr/study/cs/🍊-spring의-의존성-주입(di).html" class="internal-link" target="_self" rel="noopener nofollow">🍊 Spring의 의존성 주입(DI)</a>
<br><a data-href="🪕 JPA 에 대한 고찰" href="http://lts.kr/study/cs/🪕-jpa-에-대한-고찰.html" class="internal-link" target="_self" rel="noopener nofollow">🪕 JPA 에 대한 고찰</a>
<br>
<br><a data-href="☕ JAVA , OOP" href="http://lts.kr/study/cs/☕-java-,-oop.html" class="internal-link" target="_self" rel="noopener nofollow">☕ JAVA , OOP</a>
<br><a data-href="🍃 Spring" href="http://lts.kr/study/cs/🍃-spring.html" class="internal-link" target="_self" rel="noopener nofollow">🍃 Spring</a>
<br><a data-href="🎩 DevOps" href="http://lts.kr/study/cs/🎩-devops.html" class="internal-link" target="_self" rel="noopener nofollow">🎩 DevOps</a>
<br><a data-href="📔 DataBase" href="http://lts.kr/study/cs/📔-database.html" class="internal-link" target="_self" rel="noopener nofollow">📔 DataBase</a>
<br><a data-href="📭 Server" href="http://lts.kr/study/cs/📭-server.html" class="internal-link" target="_self" rel="noopener nofollow">📭 Server</a>
<br><a data-href="🐞 etc" href="http://lts.kr/study/cs/🐞-etc.html" class="internal-link" target="_self" rel="noopener nofollow">🐞 etc</a>
<br>
<br><a data-href="🤠 Coding Test 풀이 모음" href="http://lts.kr/study/coding-test/🤠-coding-test-풀이-모음.html" class="internal-link" target="_self" rel="noopener nofollow">🤠 Coding Test 풀이 모음</a>
<br><a data-href="👽 Algorithm" href="http://lts.kr/study/coding-test/👽-algorithm.html" class="internal-link" target="_self" rel="noopener nofollow">👽 Algorithm</a>
<br>
<br><a data-href="🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성" href="http://lts.kr/study/dev-seminar/🔻-redis-캐쉬-전략-hello-서비스에-적용하여-성능개선-가능성.html" class="internal-link" target="_self" rel="noopener nofollow">🔻 Redis 캐쉬 전략 - hello 서비스에 적용하여 성능개선 가능성</a>
<br><a data-href="🔐 상품 투자하기 서비스 Lock기법 개선안" href="http://lts.kr/issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html" class="internal-link" target="_self" rel="noopener nofollow">🔐 상품 투자하기 서비스 Lock기법 개선안</a>
<br><a data-href="🔹 TDD에 대하여" href="http://lts.kr/study/dev-seminar/🔹-tdd에-대하여.html" class="internal-link" target="_self" rel="noopener nofollow">🔹 TDD에 대하여</a>
<br><a data-href="🍂 JPA, Mybatis , Dead Lock이슈" href="http://lts.kr/study/dev-seminar/🍂-jpa,-mybatis-,-dead-lock이슈.html" class="internal-link" target="_self" rel="noopener nofollow">🍂 JPA, Mybatis , Dead Lock이슈</a>
<br><a data-href="🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여" href="http://lts.kr/study/dev-seminar/🥗-spring-security_토큰-세션-쿠키-jwt-에-대하여.html" class="internal-link" target="_self" rel="noopener nofollow">🥗 Spring Security_토큰-세션-쿠키-JWT 에 대하여</a>
<br><a data-href="📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가" href="http://lts.kr/study/dev-seminar/📔-db-테이블-설계,-어떻게-하는게-옳은-방법인가.html" class="internal-link" target="_self" rel="noopener nofollow">📔 DB 테이블 설계, 어떻게 하는게 옳은 방법인가</a>]]></description><link>http://lts.kr/study/📕-공부.html</link><guid isPermaLink="false">study/📕 공부.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 09:04:00 GMT</pubDate></item><item><title><![CDATA[🔐 상품 투자하기 서비스 Lock기법 개선안]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:SQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#SQL</a> <a class="tag" href="http://lts.kr/?query=tag:Lock" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Lock</a> <a class="tag" href="http://lts.kr/?query=tag:개선" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#개선</a> <a class="tag" href="http://lts.kr/?query=tag:이슈" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#이슈</a> <a class="tag" href="http://lts.kr/?query=tag:세미나" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#세미나</a> <br> <a href="http://lts.kr?query=tag:SQL" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#SQL">#SQL</a> <a href="http://lts.kr?query=tag:Lock" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Lock">#Lock</a> <a href="http://lts.kr?query=tag:개선" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#개선">#개선</a> <a href="http://lts.kr?query=tag:이슈" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#이슈">#이슈</a> <a href="http://lts.kr?query=tag:세미나" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#세미나">#세미나</a><br>
<br>투자자 투자실행 시 순서보장X <br>Lock해제와 정합성 이슈 <br>헬로의 투자 서비스는 다음과 같다.<br>특정 scf / 주택담보대출 상품에 대해 투자자를 모집한다.
<br>투자자들은 특정시간에 open되는 상품에 일괄적으로 투자신청을한다. <br>이때, 각 회원별로 "투자 신청 기록"을 진행한다.
<br>투자신청 기록이란, P2PCenter(금융결제원) API를 통해 유효성(투자기록 / 투자한도)을 조회하여 투자적합여부를 체크하고 기록하는것을 말한다. <br>회원별 검증 및 투자금 계산을 마치면 정상 투자가 진행된다.
<br>이때, 투자신청 기록 로직에서 Lock기법이 적용되어있다.<br>
<br>
Lock기법은 여러 요청이 같은 리소스에 접근하려 할 때, 한 번에 하나의 요청만을 처리하도록 막는 기법이다. <br>
데이터 정합성이 무엇보다 중요한 서비스에서 충돌을 방지하여 일관성을 효과적으로 유지하기 위함이다. <br>
헬로 서비스의 경우, 회원 idx로 lock을 유지하여 성능과 안정성 확보<br>
-상품별 한도 / 투자자 일별 투자상한 / 투자 금액 / 예치금 등 정합성이 무엇보다 우선시 되는 데이터들이 포함 <br>(JVM 레벨 Lock)<br>import org.springframework.stereotype.Service; @Service
public class SynchronizedLockService { private int counter = 0; public synchronized void increment() { counter++; System.out.println(Thread.currentThread().getName() + " - 현재 카운트: " + counter); }
} <br>JVM레벨에서 동작하므로, 분산환경에서는 동작 X, 성능 빠름
<br>(DB를 활용하여 Lock구현)<br>CREATE TABLE lock_table ( id INT PRIMARY KEY, locked BOOLEAN NOT NULL DEFAULT FALSE
);
<br> @Transactional public void doSomethingWithLock() { // 행 잠금 (SELECT FOR UPDATE) jdbcTemplate.queryForObject("SELECT * FROM lock_table WHERE id = 1 FOR UPDATE", (rs, rowNum) -&gt; rs.getInt("id")); System.out.println(Thread.currentThread().getName() + " - 데이터베이스 Lock 획득!"); try { Thread.sleep(5000); // 작업 수행 } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName() + " - 작업 완료!"); }
<br>DB만으로 구현 가능, 트렌젝션 격리레벨에 따라 멀티인스턴스(분산환경)에서 정합성 보장 가능
<br>모든 요청이 DB lock을 기다리므로 속도 느림(lock이 해제될때 까지 대기), 데드락 가능성있음<br>
-&gt; 레디션 락은 블록킹하지 않고, Polling방식으로 재시도 가능.<br>
커넥션 pool 미 소유 및 TTL로 데드락 방지
<br>
<br>설계 방법에 따라, 강한 일관성 유지 가능하지만, 추가적인 설계/개발이 필요.
<br>높은 트래픽을 감당할 수 있음. (동시요청)
<br>수평적 확장에 용이(스케일 아웃)
<br>
<br>설계 방법에 따라, lock / 대기열 모두 일관성(데이터 정합성)을 유지할 수 있지만,<br>
lock 기법 사용시 추가적인 셋팅 없이 쉽게 일관성 및 실시간 처리를 구현할 수 있기에 채택되었다.
<br>
<br>동시성 이슈를 해결하고자.
<br>동시성 이슈란? <br>문맥에 따라 조금씩 차이는 있겠지만<br>
여기서는 '여러 스레드가 동시에 공유 자원에 접근할 때 발생하는 문제'<br>
로 정의하겠다. <br>동시성 이슈를 대응해야할 곳.<br>모집금액과, 상품 별 동일 차주 투자 한도를 넘지 않게 상품의 동시성 이슈
<br>p2p투자한도와 예치금 한도를 넘지 않게 회원별 동시성 이슈
<br>우리는 외부은행에 투자자,대출자 돈을 모두 맡겨두고 운영(신탁 운영)중이다.<br>한도를 금결원 api를 통해 매번 체크
<br>실제 돈이 빠져나가는 시점은, 모든 투자기록을 마친 후, 대출을 실행하는 시점에서 돈을 가져간다.<br>회원별 동시성
<br>세마포어 뮤텍스 비관적락 등 여러 방법론이 있지만, 우리는 redisson lock을 사용하였다.<br>k8s를 통해 여러 server를 띄워놓는 분산환경이기 때문.
<br>먼저, 헬로 투자하기 서비스는 redisson lock을 사용한다.<br>Lock testLock = redissonClient.getLock("affterProcessorLock-" + Idx);
testLock.tryLock(4, 4, TimeUnit.SECONDS);
// ...투자 로직
testLock.unlock();
<br>
<br>Redis기반의 분산 락 구현체이다.
<br>멀티 서버 환겨에서 동시성 문제를 해결하기 위해 사용된다.
<br>여러개의 애플리케이션 인스턴스가 동일한 공유자원에 접근할 때, 중복 처리나 데잍터 불일치 문제를 방지해준다.
<br>단일 서버 환경에서는 synchronized, 일반 Lock을 통해 임계 구역을 보호할 수 있다.<br>
하지만, 멀티서버(분산 시스템) 환경에서는 이런<br>
임계구역(Critical Section) : 여러 프로세스 또는 스레드가 공유 자원(Shared Resource) 에 접근하는 코드 영역
<br>
<br>분산 환경에서의 동시성 문제를 효과적으로 해결하기 위함
<br>싱글스레드 큐 방식의 Redis는 왜 순서를 보장하지 않는가?<br>Redis가 lock을 관리하는 과정 자체는 싱글 스레드 큐 방식이다.<br>
허나, Redisson Lock은 비동기 이벤트 기반의 락 처리 방식을 사용한다.
<br>즉, 락을 흭득하려는 프로세스는 우선순위가 없는 경쟁적락방식이다.
<br>정보
FIFO 방식의 "공정 락(Fair Lock)"또한 지원하여 원하는 바 사용 가능하다. <br>대기열 방식이라고 봐도 되겠다. <br>
<br>여러 클라이언트(서버 또는 스레드)가 동시에 같은 락을 요청할 수 있음.
<br>가장 먼저 Redis에 락을 설정한 클라이언트가 락을 획득(경쟁 방식).
<br>락을 획득한 클라이언트가 해제해야 다른 클라이언트가 락을 획득 가능.
<br>락이 만료되거나 자동 연장(Watchdog)되면서 동작.
<br>이러한 동작 방식 때문에, Starvation(기아 현상)이 야기되는 문제가 있다.<br>기아현상이란, 고부하 환경에서 락을 흭득하려는 클라이언트가 많으면, 후순위 요청이 계속해서 무시될 가능성이 생기긴다.<br>
즉, A투자자가 먼저 투자를 하였음에도 불구하고 그 다음에 실행한 투자자 B,C가 먼저 처리될 수 있다는것이다.<br>그리고 실제 운영 환경에서 해당 경우를 심심치 않게 찾아볼 수 있다.<br>최대 30초 이상 대기상태에서 기다린 인원이 있음.<br>
-&gt; 그러나 평균 속도는 대기열에 비해 굉장히 빠르다.(추가적인 대기열(FIFO 큐)이 없기 때문에 락 획득 속도가 빠름)
<br>해당 질문에 대한 답은,<br>
분산환경에서 고부하 api통신, I/O 작업을 수행하며 적절한 퍼포먼스를 유지하기 위한 타협점 이라고 볼 수 있다.<br>
<br>상품을 미리 열어, 투자 금액 데이터를 쌓는 원리.
<br>해당 방법을 사용하면 데이터 정합성 및 속도를 보장받을 수 있다.
<br>
<br>투자자 입장에서는 투자 완료 이후 취소 통보를 받을 수 있음. <br>투자자 개인 한도는 금융결제위원회에서 관리하며, 타 업체의 한도와 공유되어 중복투자로인한 취소 가능성
<br>상품 투자 한도 초과로 인한 취소가능성<br>
해당 경우에 재 투자를 받아야 할 경우도 생김 <br>
사내 정책의 문제 또한 존재하기 때문에, 모든 부분에서 완벽하기란 쉽지 않아 보인다.
<br>
<br>lock이 풀리는 이유?
<br>
<br>현재 설정으로, Redisson Lock은 4sec의 TTL을 갖는다.<br>
이때, 외부응답 지연으로 TTL을 초과해 버리게 된다면, lock을 해제함과 동시성이 깨질 수 있는 가능성이 있다.
<br>어쩨서??<br>A, B 상품에 대하여, 단일 투자자가 투자를 했을 때<br>
A상품에 대한 투자를 완료처리하여 ( 원래였으면 lock처리될 )예치금 차감이 되지 않은 상태에서 락이 풀려버린다면?<br>
B상품에 대한 투자도 정상처리가 되어버린다.
<br>
<br>매 투자 건 별로 조회하는 개인별 투자한도를 redis로 관리하여, 투자건별 속도 개선을 목표로함.<br>
한계 : 투자 건 별 TTL초과 확률을 줄일 수는 있으나, 외부에 의존적인 투자구조 상 100% 해결할 수는 없음
<br>(1번 이슈와 같은 해결 방법)<br>상품을 미리 열어, 투자 금액 데이터를 쌓는 원리.
<br>해당 방법을 사용하면 데이터 정합성 및 경합을위한 락 사용 불필요
<br>결론
현재 신탁 운영으로 인한 한도 데이터를 직접관리하지 못하는 문제와,<br>
보수적인 운영상의 방침으로 큰 구조 개선을 힘들어 보임
현재는 리펙토링을 통해 lock에 묶여있는 로직을 단순화 하는것에 만족해야겠음.]]></description><link>http://lts.kr/issue_troubleshooting/🔐-상품-투자하기-서비스-lock기법-개선안.html</link><guid isPermaLink="false">Issue_TroubleShooting/🔐 상품 투자하기 서비스 Lock기법 개선안.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 09:03:58 GMT</pubDate></item><item><title><![CDATA[🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검)]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:공부" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#공부</a> <a class="tag" href="http://lts.kr/?query=tag:Tokken" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Tokken</a> <a class="tag" href="http://lts.kr/?query=tag:Security" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Security</a> <a class="tag" href="http://lts.kr/?query=tag:SPRING" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#SPRING</a> <a class="tag" href="http://lts.kr/?query=tag:보안" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#보안</a> <br> <a href="http://lts.kr?query=tag:공부" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#공부">#공부</a> <a href="http://lts.kr?query=tag:Tokken" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Tokken">#Tokken</a> <a href="http://lts.kr?query=tag:Security" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Security">#Security</a> <a href="http://lts.kr?query=tag:SPRING" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#SPRING">#SPRING</a> <a href="http://lts.kr?query=tag:보안" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#보안">#보안</a><br>1977년에 Rivest, Shamir, Adleman 이라는 세 명의 수학자가 고안해서 RSA라고 부른다.<br>
이 방식은 지금도 SSL/TLS, 이메일, 디지털 서명, 인증서 등 보안의 핵심 인프라에서 계속 쓰이고 있는 방식이다.<br>
<br>RSA는 "공개키로 암호화하고, 개인키로 복호화" 또는 그 반대로 동작하는 비대칭 암호화 알고리즘이다.
<br>
<br>공개키로 암호화된 데이터는 개인키를 소유한 공개키 생성자만이 복호화 가능하다.
<br>사용자( Client )마다 공개키와 개인키를 접근 시 새로 생성/발급하여 원본 데이터 추적이 불가하다.
<br>결론
즉, 클라이언트의 요청이 들어오면 서버에서 공개키(클라이언트에게 제공할 키) 와 개인키(서버측에서 갖고있는, 공개키와 한쌍이 되는 키) 를 매번 새로 발급하기 때문에, 추적이 어렵고 암호화에 뛰어나다.
<br>
<br>서비스 특성에 따라 적절하게 적용할 필요가 있다.
<br>정보 <br>RSA 키 객체 (PublicKey, PrivateKey) 는 메모리 상에서만 동작할 수 있다.
<br>우리가 파일, 네트워크, DB로 키를 주고받을 때는 Base64 문자열 로 직렬화해야 해야한다. <br>[로그인 / 회원가입 페이지]<br>클라이언트에서 서버에 공개키 요청
<br>서버에서 키쌍 과 KeyUUID 생성
<br>개인키는 KeyUUID와 함께 캐쉬에 저장 / 공개키는 KeyUUID와 클라이언트에 전달
<br>클라이언트는 서버로부터 받은 공개키로 평문 암호화, 서버에 전달
<br>암호화된 평문을 KeyUUID로 찾은 공개키로 복호화 -&gt; 평문 완성
<br>
<br>암호화, 해시, 키 생성, 인증서 처리, 서명 등 암호학 기반 기능들을 제공하는 클래스들의 모음이다.
<br> private static final String INSTANCE_TYPE = "RSA"; // 2048bit RSA KeyPair 생성. public static KeyPair generateKeypair() throws NoSuchAlgorithmException { KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(INSTANCE_TYPE); keyPairGen.initialize(2048, new SecureRandom()); return keyPairGen.genKeyPair(); } <br>KeyPairGenerator (공개키/개인키 쌍 생성) 을 사용한다.
<br>NoSuchAlgorithmException : 지정한 알고리즘 이름이 현재 JVM 환경에서 지원되지 않거나 잘못된 경우 발생하는 체크 예외다.
<br>KeyPair타입 : PrivateKey와 PublicKey로 이루어져있는 데이터 타입
<br>SecureRandom을 시드로 사용해 보안 수준 향상
<br> 2048bit로 RSA암호화 방식을 사용하여 keyPair를 생성하는 코드이다.<br>	private static final String INSTANCE_TYPE = "RSA"; // 평문 + 공개키 Base64로 암호문 생성 public static String rsaEncode(String plainText, String publicKey) throws InvalidKeyException, InvalidKeySpecException, NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException { Cipher cipher = Cipher.getInstance(INSTANCE_TYPE); cipher.init(Cipher.ENCRYPT_MODE, convertPublicKey(publicKey)); byte[] plainTextByte = cipher.doFinal(plainText.getBytes()); return base64EncodeToString(plainTextByte); } //Base64 공개키 -&gt; 공개키로 디코딩 public static PublicKey convertPublicKey(String publicKey) throws InvalidKeySpecException, NoSuchAlgorithmException { KeyFactory keyFactory = KeyFactory.getInstance(INSTANCE_TYPE); byte[] publicKeyByte = Base64.getDecoder().decode(publicKey.getBytes()); return keyFactory.generatePublic(new X509EncodedKeySpec(publicKeyByte)); }
<br>
Cipher : Java 보안 API에서 실제 암호화/복호화를 수행하는 핵심 클래스<br>
AES, RAS, DES 같은 알고리즘을 직접 실행하는 암호 모듈 , 암호화 엔진 이다. <br>
Cipher cipher = Cipher.getInstance(INSTANCE_TYPE); : 타입에 따라, 암호화 모드와 패딩 방식이 결정된다. <br>
convertPublicKey : base64기반 코드를 실제 키 객체로 변환 <br>
KeyFactory : 키 복원용 펙토리 객체 <br>
keyFactory.generate... : 실제 키 객체 생성 <br>
X509EncodedKeySpec → 공개키 표준 포맷 스펙 <br>node-forge 패키지를 사용한다. base64, encode등 TLS프로토콜(암호화 도구)를 구현한 패키지 이다.
<br>&lt;script src="https://cdn.jsdelivr.net/npm/node-forge@1.3.1/dist/forge.min.js"&gt;&lt;/script&gt; &lt;script&gt;
/** * 서버에서 공개키를 받아서 RSA로 암호화하는 함수 * @param {string} plainText - 암호화할 평문 * @param {string} publicKeyBase64 - 서버로부터 받은 Base64 인코딩된 공개키 * @returns {string} 암호화된 Base64 문자열 */
function rsaEncryptWithBase64PublicKey(plainText, publicKeyBase64) { const forge = window.forge; // 1. Base64 디코딩 → DER 바이너리 const der = forge.util.decode64(publicKeyBase64); // 2. DER → ASN.1 파싱 → PublicKey 객체 const asn1 = forge.asn1.fromDer(der); const publicKey = forge.pki.publicKeyFromAsn1(asn1); // 3. RSA 암호화 const encryptedBytes = publicKey.encrypt(plainText, 'RSAES-PKCS1-V1_5'); // 4. 암호문을 Base64 인코딩해서 반환 return forge.util.encode64(encryptedBytes);
}
&lt;/script&gt;
<br>클라이언트 단에서 request전달 전, 암호화 하기 위한 코드 / 동작 구성은 2.1과 동일 하다
<br>	private static final String INSTANCE_TYPE = "RSA"; // 암호문 + 개인키 Base64로 평문 생성 public static String rsaDecode(String encryptedPlainText, String privateKey) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidKeySpecException, IllegalBlockSizeException, BadPaddingException { byte[] encryptedPlainTextByte = Base64.getDecoder().decode(encryptedPlainText.getBytes()); Cipher cipher = Cipher.getInstance(INSTANCE_TYPE); cipher.init(Cipher.DECRYPT_MODE, convertPrivateKey(privateKey)); return new String(cipher.doFinal(encryptedPlainTextByte)); } //Base64 개인키 -&gt; 개인키로 디코딩 public static PrivateKey convertPrivateKey(String privateKey) throws InvalidKeySpecException, NoSuchAlgorithmException { KeyFactory keyFactory = KeyFactory.getInstance(INSTANCE_TYPE); byte[] privateKeyByte = Base64.getDecoder().decode(privateKey.getBytes()); return keyFactory.generatePrivate(new PKCS8EncodedKeySpec(privateKeyByte)); }
<br>Cipher 객체를 사용하여 위와 동일하게 동작.
<br>PKCS8EncodedKeySpec → 개인키 표준 포맷 스펙
<br> public static String base64EncodeToString(byte[] byteData) { return Base64.getEncoder().encodeToString(byteData); }
<br>cipher.doFinal(...) 과 같은 코드는 바이너리 데이터로 리턴값을 보낸다.
<br>
<br>JUnit → 테스트 프레임워크 <br>AssertJ → 테스트 결과를 검증(assert)할 때 쓰는 강력한 assertion 도구
<br>JS코드는 제외<br>private static final String PLAIN_TEXT = "키 암/복호화 테스트 123 abc !@#"; @Test @DisplayName("RSA 키쌍 생성 및 암/복호화 통합 테스트") public void testGenerateKeypairAndEncryptDecrypt() throws Exception { // 키쌍 생성 KeyPair keyPair = rsaService.generateKeypair(); PublicKey publicKey = keyPair.getPublic(); PrivateKey privateKey = keyPair.getPrivate(); // 공개키, 개인키 → Base64 인코딩 String publicKeyBase64 = rsaService.base64EncodeToString(publicKey.getEncoded()); String privateKeyBase64 = rsaService.base64EncodeToString(privateKey.getEncoded()); System.out.println("공개키Base64 : " + publicKeyBase64); System.out.println("개인키Base64 : " + privateKeyBase64); // 암호화 String encryptedText = rsaService.rsaEncode(PLAIN_TEXT, publicKeyBase64); System.out.println("RSA암호화 텍스트 : " + encryptedText); // 복호화 (개인키 사용해야 함) String decryptedText = rsaService.rsaDecode(encryptedText, privateKeyBase64); System.out.println("RSA복호화 텍스트 : " + decryptedText); // 검증 Assertions.assertThat(decryptedText).isEqualTo(PLAIN_TEXT); }
<br>결과<br>
<img alt="Pasted image 20250325102427.png" src="http://lts.kr/사진-및-문서/pasted-image-20250325102427.png" target="_self"><br>Base64기반 String 변환 및 암/복호화 테스트 완료
<br>js암호화도 동일하게 동작 확인
<br><img alt="Pasted image 20250325165845.png" src="http://lts.kr/사진-및-문서/pasted-image-20250325165845.png" target="_self"><br>
<img alt="Pasted image 20250325172818.png" src="http://lts.kr/사진-및-문서/pasted-image-20250325172818.png" target="_self">]]></description><link>http://lts.kr/study/cs/🚨-rsa-암호화-방식의-이해와-적용-(feat.취약성점검).html</link><guid isPermaLink="false">study/CS/🚨 RSA 암호화 방식의 이해와 적용 (feat.취약성점검).md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 08:56:17 GMT</pubDate><enclosure url="http://lts.kr/사진-및-문서/pasted-image-20250325102427.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="http://lts.kr/사진-및-문서/pasted-image-20250325102427.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[🐡 Spring Security와 Filter 적용기]]></title><description><![CDATA[<a class="tag" href="http://lts.kr/?query=tag:프로젝트" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#프로젝트</a> <a class="tag" href="http://lts.kr/?query=tag:개발" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#개발</a> <a class="tag" href="http://lts.kr/?query=tag:SPRING" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#SPRING</a> <a class="tag" href="http://lts.kr/?query=tag:Security" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Security</a> <a class="tag" href="http://lts.kr/?query=tag:Filter" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Filter</a> <br> <a href="http://lts.kr?query=tag:프로젝트" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#프로젝트">#프로젝트</a> <a href="http://lts.kr?query=tag:개발" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#개발">#개발</a> <a href="http://lts.kr?query=tag:SPRING" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#SPRING">#SPRING</a> <a href="http://lts.kr?query=tag:Security" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Security">#Security</a> <a href="http://lts.kr?query=tag:Filter" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#Filter">#Filter</a><br>
<br>]]></description><link>http://lts.kr/project/🐡-spring-security와-filter-적용기.html</link><guid isPermaLink="false">project/🐡 Spring Security와 Filter 적용기.md</guid><dc:creator><![CDATA[taesung's Blog]]></dc:creator><pubDate>Tue, 25 Mar 2025 08:54:15 GMT</pubDate></item></channel></rss>